cscope 15 /data/home/wesleyhe/.vim/cscope-15.7a/src               0000899846
	@alloc.c

35 
	~<°dio.h
>

36 
	~<°rög.h
>

37 
	~"Æloc.h
"

39 
	~"globÆ.h
"

41 c⁄° 
	grcsid
[] = "$Id:álloc.c,v 1.8 2006/07/23 20:59:20 broeker Exp $";

43 *
Ælo˘e°
(*
p
);

47 #i‡
STDC_HEADERS


48 
	~<°dlib.h
>

50 *
ˇŒoc
(), *
mÆloc
(), *
ªÆloc
(), *
°r˝y
();

56 
	$my_°rdup
(*
s
)

58 (
	`°r˝y
(
	`mymÆloc
(
	`°æí
(
s
) + 1), s));

59 
	}
}

64 
	$mymÆloc
(
size_t
 
size
)

66 (
	`Ælo˘e°
(
	`mÆloc
((Ë
size
)));

67 
	}
}

72 
	$myˇŒoc
(
size_t
 
√Àm
, size_à
size
)

74 (
	`Ælo˘e°
(
	`ˇŒoc
((Ë
√Àm
, (Ë
size
)));

75 
	}
}

80 
	$myªÆloc
(*
p
, 
size_t
 
size
)

82 (
	`Ælo˘e°
(
	`ªÆloc
(
p
, (Ë
size
)));

83 
	}
}

88 
	$Ælo˘e°
(*
p
)

90 i‡(
p
 =
NULL
) {

91 
	`po°Áèl
("\n%s: ouào‡°‹age\n", 
¨gv0
);

94 (
p
);

95 
	}
}

	@alloc.h

35 #i‚de‡
CSCOPE_ALLOC_H


36 
	#CSCOPE_ALLOC_H


	)

38 
	~<°rög.h
>

41 *
myˇŒoc
(
size_t
 
√Àm
, size_à
size
);

42 *
mymÆloc
(
size_t
 
size
);

43 *
myªÆloc
(*
p
, 
size_t
 
size
);

44 *
my_°rdup
(*
s
);

	@basename.c

35 c⁄° 
	grcsid
[] = "$Id: basename.c,v 1.3 2001/07/05 14:31:00 broeker Exp $";

37 
	~"globÆ.h
"

40 
	$myba£«me
(*
∑th
)

42 *
s
;

44 i‡((
s
 = 
	`°ºchr
(
∑th
, '/')) != 0) {

45 (
s
 + 1);

47 (
∑th
);

48 
	}
}

	@build.c

39 
	~"buûd.h
"

41 
	~"globÆ.h
"

43 
	~"libøry.h
"

44 
	~"Æloc.h
"

45 
	~"sˇ¬î.h
"

46 
	~"vîsi⁄.h
"

47 
	~"vp.h
"

49 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

50 
	~<ncur£s.h
>

52 
	~<cur£s.h
>

57 
BOOL
 
	gbuûd⁄ly
 = 
NO
;

58 
BOOL
 
	gunc⁄dôi⁄Æ
 = 
NO
;

59 
BOOL
 
	gfûesch™ged
;

62 
	göv«me_buf
[] = 
INVNAME
;

63 
	gövpo°_buf
[] = 
INVPOST
;

64 
	gªffûe_buf
[] = 
REFFILE
;

65 *
	göv«me
 = 
öv«me_buf
;

66 *
	gövpo°
 = 
övpo°_buf
;

67 *
	gªffûe
 = 
ªffûe_buf
;

69 *
	g√wªffûe
;

70 
FILE
 *
	g√wªfs
;

71 
FILE
 *
	gpo°ögs
;

72 
	gsymªfs
 = -1;

74 
INVCONTROL
 
	gövc⁄åﬁ
;

78 *
	g√wöv«me
;

79 *
	g√wövpo°
;

80 
	gåaûîoff£t
;

84 
ˇ¬Ÿödex
();

85 
com∑ª
(c⁄° *
s1
, c⁄° *
s2
);

86 
c›yd©a
();

87 
c›yövîãd
();

88 *
gëﬁdfûe
();

89 
movefûe
(*
√w
, *
ﬁd
);

90 
puthódî
(*
dú
);

91 
„tch_ö˛ude_‰om_dba£
(*, 
size_t
);

92 
puéi°
(**
«mes
, 
cou¡
);

93 
BOOL
 
ßmñi°
(
FILE
 *
ﬁdªfs
, **
«mes
, 
cou¡
);

98 
	$ˇ¬Ÿödex
()

100 
	`Ârötf
(
°dîr
, "\
: cannot create inverted index; ignoring -q option\n");

102 
övîãdödex
 = 
NO
;

103 
îr‹sfound
 = 
YES
;

104 
	`Ârötf
(
°dîr
, "\
:Ñemoved files %sánd %s\n",

106 
√wöv«me
, 
√wövpo°
);

107 
	`u∆ök
(
√wöv«me
);

108 
	`u∆ök
(
√wövpo°
);

109 
	}
}

113 
BOOL


114 
	$ßmñi°
(
FILE
 *
ﬁdªfs
, **
«mes
, 
cou¡
)

116 
ﬁd«me
[
PATHLEN
 + 1];

117 
ﬁdcou¡
;

118 
i
;

121 i‡(
	`fsˇnf
(
ﬁdªfs
, "%d", &
ﬁdcou¡
) != 1 ||

122 
ﬁdcou¡
 !
cou¡
) {

123 (
NO
);

126 
i
 = 0; i < 
cou¡
; ++i) {

127 i‡((1 !
	`fsˇnf
(
ﬁdªfs
," %[^\n]",
ﬁd«me
)) ||

128 
	`°∫ŸequÆ
(
ﬁd«me
, 
«mes
[
i
])) {

129 (
NO
);

132 (
YES
);

133 
	}
}

138 
	$£tup_buûd_fûíames
(*
ªffûe
)

140 *
∑th
;

141 *
s
;

143 
∑th
 = 
	`mymÆloc
(
	`°æí
(
ªffûe
) + 10);

144 
	`°r˝y
(
∑th
, 
ªffûe
);

145 
s
 = 
	`myba£«me
(
∑th
);

146 *
s
 = '\0';

147 
	`°rˇt
(
∑th
, "n");

148 ++
s
;

149 
	`°r˝y
(
s
, 
	`myba£«me
(
ªffûe
));

150 
√wªffûe
 = 
	`my_°rdup
(
∑th
);

151 
	`°r˝y
(
s
, 
	`myba£«me
(
öv«me
));

152 
√wöv«me
 = 
	`my_°rdup
(
∑th
);

153 
	`°r˝y
(
s
, 
	`myba£«me
(
övpo°
));

154 
√wövpo°
 = 
	`my_°rdup
(
∑th
);

155 
	`‰ì
(
∑th
);

156 
	}
}

161 
	$›íd©aba£
()

163 i‡((
symªfs
 = 
	`vp›í
(
ªffûe
, 
O_BINARY
 | 
O_RDONLY
)) == -1) {

164 
	`ˇ¬Ÿ›í
(
ªffûe
);

165 
	`myexô
(1);

167 
blocknumbî
 = -1;

170 i‡(
övîãdödex
 =
YES
 &&

171 
	`öv›í
(&
övc⁄åﬁ
, 
öv«me
, 
övpo°
, 
INVAVAIL
) == -1) {

172 
	`askf‹ªtu∫
();

173 
övîãdödex
 = 
NO
;

175 
	}
}

180 
	$ªbuûd
()

182 
	`˛o£
(
symªfs
);

183 i‡(
övîãdödex
 =
YES
) {

184 
	`öv˛o£
(&
övc⁄åﬁ
);

185 
n§coff£t
 = 0;

186 
≈o°ögs
 = 0;

188 
	`buûd
();

189 
	`›íd©aba£
();

192 i‡(
ªfsfound
 !
NULL
) {

193 
	`f˛o£
(
ªfsfound
);

194 
ªfsfound
 = 
NULL
;

196 
	}
}

201 
	$buûd
()

203 
i
;

204 
FILE
 *
ﬁdªfs
;

205 
time_t
 
ª·ime
;

206 *
fûe
;

207 *
ﬁdfûe
;

208 
√wdú
[
PATHLEN
 + 1];

209 
ﬁddú
[
PATHLEN
 + 1];

210 
ﬁd«me
[
PATHLEN
 + 1];

211 
ﬁdnum
;

212 
°©
 
°©°ru˘
;

213 
fú°fûe
;

214 
œ°fûe
;

215 
buût
 = 0;

216 
c›õd
 = 0;

217 
fûeödex
;

218 
BOOL
 
öãø˘ive
 = 
YES
;

222 
	`°r˝y
(
√wdú
, 
cuºítdú
);

223 i‡(
	`°rcmp
(
cuºítdú
, 
home
) == 0) {

224 
	`°r˝y
(
√wdú
, "$HOME");

225 } i‡(
	`°∫cmp
(
cuºítdú
, 
home
, 
	`°æí
(home)) == 0) {

226 
	`¢¥ötf
(
√wdú
, “ewdú), "$HOME%s", 
cuºítdú
 + 
	`°æí
(
home
));

229 
	`qs‹t
(
§cfûes
, 
n§cfûes
, (*), 
com∑ª
);

233 i‡((
ﬁdªfs
 = 
	`vpf›í
(
ªffûe
, "rb")Ë!
NULL


234 && 
unc⁄dôi⁄Æ
 =
NO


235 && 
	`fsˇnf
(
ﬁdªfs
, "csc›ê%d %" 
PATHLEN_STR
 "s", &
fûevîsi⁄
, 
ﬁddú
) == 2

236 && (
	`°rcmp
(
ﬁddú
, 
cuºítdú
) == 0

237 || 
	`°rcmp
(
ﬁddú
, 
√wdú
) == 0)) {

239 
	`f°©
(
	`fûío
(
ﬁdªfs
), &
°©°ru˘
);

240 
ª·ime
 = 
°©°ru˘
.
°_mtime
;

241 i‡(
fûevîsi⁄
 >= 8) {

242 
BOOL
 
ﬁdcom¥ess
 = 
YES
;

243 
BOOL
 
ﬁdövîãdödex
 = 
NO
;

244 
BOOL
 
ﬁdåunˇã
 = 
NO
;

245 
c
;

249 (
c
 = 
	`gëc
(
ﬁdªfs
)) == ' ')

251 i‡(
c
 != '-') {

252 
	`ungëc
(
c
, 
ﬁdªfs
);

255 
c
 = 
	`gëc
(
ﬁdªfs
)) {

257 
ﬁdcom¥ess
 = 
NO
;

260 
ﬁdövîãdödex
 = 
YES
;

261 
	`fsˇnf
(
ﬁdªfs
, "%ld", &
tŸÆãrms
);

264 
ﬁdåunˇã
 = 
YES
;

269 i‡(
ﬁdcom¥ess
 !
com¥ess
 || 
ﬁdåunˇã
 !
åun_syms
) {

270 
	`po°îr
("\
: -c or -T option mismatch between commandÜineánd old symbol database\n");

272 
f‹˚
;

274 i‡(
ﬁdövîãdödex
 !
övîãdödex
) {

275 
	`po°îr
("\
: -q option mismatch between commandÜineánd old symbol database\n");

277 i‡(
övîãdödex
 =
NO
) {

278 
	`po°îr
("cscope:Ñemoved files %sánd %s\n",

279 
öv«me
, 
övpo°
);

280 
	`u∆ök
(
öv«me
);

281 
	`u∆ök
(
övpo°
);

283 
outofd©e
;

286 i‡(
	`fsˇnf
(
ﬁdªfs
, "%ld", &
åaûîoff£t
) != 1 ||

287 
	`f£ek
(
ﬁdªfs
, 
åaûîoff£t
, 
SEEK_SET
) == -1) {

288 
	`po°îr
("cscope: incorrect symbol database file format\n");

289 
f‹˚
;

293 i‡(
fûesch™ged
 =
YES
) {

294 
outofd©e
;

297 i‡(
	`ßmñi°
(
ﬁdªfs
, 
§cdús
, 
n§cdús
Ë=
NO


298 || 
	`ßmñi°
(
ﬁdªfs
, 
öcdús
, 
nöcdús
Ë=
NO


300 || 
	`fsˇnf
(
ﬁdªfs
, "%lu", &
ﬁdnum
) != 1

302 || (
fûevîsi⁄
 >9 && 
	`fsˇnf
(
ﬁdªfs
, "%*s") != 0)) {

303 
outofd©e
;

307 
i
 = 0; i < 
n§cfûes
; ++i) {

308 i‡((1 !
	`fsˇnf
(
ﬁdªfs
," %[^\n]",
ﬁd«me
))

309 || 
	`°∫ŸequÆ
(
ﬁd«me
, 
§cfûes
[
i
])

310 || (
	`l°©
(
§cfûes
[
i
], &
°©°ru˘
) != 0)

311 || (
°©°ru˘
.
°_mtime
 > 
ª·ime
)

313 
outofd©e
;

318 
i
++ < 
ﬁdnum
 && 
	`fgës
(
ﬁd«me
, (ﬁd«me), 
ﬁdªfs
)) {

319 
	`add§cfûe
(
ﬁd«me
);

321 
	`f˛o£
(
ﬁdªfs
);

324 
outofd©e
:

326 i‡(
fûevîsi⁄
 !
FILEVERSION
) {

327 
	`Ârötf
(
°dîr
, "\
: convertingÅoÇew symbol database file format\n");

329 
f‹˚
;

332 i‡((
symªfs
 = 
	`vp›í
(
ªffûe
, 
O_BINARY
 | 
O_RDONLY
)) == -1) {

333 
	`po°Áèl
("csc›e: c™nŸ o≥¿fûê%s\n", 
ªffûe
);

337 
blocknumbî
 = -1;

338 
	`ªad_block
();

339 
	`sˇ≈a°
('\t');

340 
ﬁdfûe
 = 
	`gëﬁdfûe
();

342 
f‹˚
:

343 
ª·ime
 = 0;

344 
ﬁdfûe
 = 
NULL
;

347 i‡((
√wªfs
 = 
	`myf›í
(
√wªffûe
, "wb")Ë=
NULL
) {

348 
	`po°Áèl
("csc›e: c™nŸ o≥¿fûê%s\n", 
ªffûe
);

351 i‡(
övîãdödex
 =
YES
 && (
po°ögs
 = 
	`myf›í
(
ãmp1
, "wb")Ë=
NULL
) {

352 
	`ˇ¬Ÿwrôe
(
ãmp1
);

353 
	`ˇ¬Ÿödex
();

355 
	`puthódî
(
√wdú
);

356 
fûevîsi⁄
 = 
FILEVERSION
;

357 i‡(
buûd⁄ly
 =
YES
 && 
vîbo£mode
 !YES && !
	`ißây
(0)) {

358 
öãø˘ive
 = 
NO
;

360 
£¨chcou¡
 = 0;

363 
	`dbputc
('\t');

367 
fú°fûe
 = 0;

368 
œ°fûe
 = 
n§cfûes
;

369 i‡(
övîãdödex
 =
YES
) {

370 
§coff£t
 = 
	`mymÆloc
((
n§cfûes
 + 1) * ());

373 
	`¥ogªss
("Buûdög symbﬁ d©aba£", ()
buût
,

374 ()
œ°fûe
);

375 i‡(
löemode
 =
NO
)

376 
	`ª‰esh
();

379 
fûeödex
 = 
fú°fûe
; fûeödex < 
œ°fûe
; ++fileindex) {

382 i‡(
öãø˘ive
 =
YES
 && 
fûeödex
 % 10 == 0) {

383 
	`¥ogªss
("Buûdög symbﬁ d©aba£", 
fûeödex
, 
œ°fûe
);

386 
fûe
 = 
§cfûes
[
fûeödex
];

387 
ﬁdfûe
 !
NULL
 && 
	`°rcmp
(
fûe
, oldfile) > 0) {

388 
ﬁdfûe
 = 
	`gëﬁdfûe
();

391 i‡(
ﬁdfûe
 =
NULL
 || 
	`°rcmp
(
fûe
, oldfile) < 0) {

392 
	`¸os§ef
(
fûe
);

393 ++
buût
;

394 } i‡(
	`l°©
(
fûe
, &
°©°ru˘
) == 0

395 && 
°©°ru˘
.
°_mtime
 > 
ª·ime
) {

397 
	`¸os§ef
(
fûe
);

398 ++
buût
;

405 
ﬁdfûe
 = 
	`gëﬁdfûe
();

408 
	`putfûíame
(
fûe
);

409 i‡(
övîãdödex
 =
YES
) {

410 
	`c›yövîãd
();

412 
	`c›yd©a
();

414 ++
c›õd
;

415 
ﬁdfûe
 = 
	`gëﬁdfûe
();

419 i‡(
œ°fûe
 =
n§cfûes
) {

422 
fú°fûe
 = 
œ°fûe
;

423 
œ°fûe
 = 
n§cfûes
;

424 i‡(
övîãdödex
 =
YES
) {

425 
§coff£t
 = 
	`myªÆloc
(srcoffset,

426 (
n§cfûes
 + 1) * ());

429 
	`qs‹t
(&
§cfûes
[
fú°fûe
], (
œ°fûe
 - firstfile),

430 (*), 
com∑ª
);

433 
	`putfûíame
("");

434 
	`dbputc
('\n');

437 
åaûîoff£t
 = 
dboff£t
;

440 
	`puéi°
(
§cdús
, 
n§cdús
);

441 
	`puéi°
(
öcdús
, 
nöcdús
);

442 
	`puéi°
(
§cfûes
, 
n§cfûes
);

443 i‡(
	`fÊush
(
√wªfs
Ë=
EOF
) {

445 
	`ˇ¬Ÿwrôe
(
√wªffûe
);

450 i‡(
övîãdödex
 =
YES
) {

451 
s‹tcomm™d
[
PATHLEN
 + 1];

453 i‡(
	`fÊush
(
po°ögs
Ë=
EOF
) {

454 
	`ˇ¬Ÿwrôe
(
ãmp1
);

457 
	`f°©
(
	`fûío
(
po°ögs
), &
°©°ru˘
);

458 
	`f˛o£
(
po°ögs
);

459 
	`¢¥ötf
(
s‹tcomm™d
, (s‹tcomm™d), "ív LC_ALL=C s‹à-T %†%s", 
tmpdú
, 
ãmp1
);

460 i‡((
po°ögs
 = 
	`myp›í
(
s‹tcomm™d
, "r")Ë=
NULL
) {

461 
	`Ârötf
(
°dîr
, "cscope: cannot openÖipeÅo sort command\n");

462 
	`ˇ¬Ÿödex
();

464 i‡((
tŸÆãrms
 = 
	`övmake
(
√wöv«me
, 
√wövpo°
, 
po°ögs
)) > 0) {

465 
	`movefûe
(
√wöv«me
, 
öv«me
);

466 
	`movefûe
(
√wövpo°
, 
övpo°
);

468 
	`ˇ¬Ÿödex
();

470 
	`myp˛o£
(
po°ögs
);

472 
	`u∆ök
(
ãmp1
);

473 
	`‰ì
(
§coff£t
);

476 
	`ªwöd
(
√wªfs
);

477 
	`puthódî
(
√wdú
);

478 
	`f˛o£
(
√wªfs
);

481 i‡(
symªfs
 >= 0) {

482 
	`˛o£
(
symªfs
);

484 i‡(
ﬁdªfs
 !
NULL
) {

485 
	`f˛o£
(
ﬁdªfs
);

488 
	`movefûe
(
√wªffûe
, 
ªffûe
);

489 
	}
}

494 
	$com∑ª
(c⁄° *
¨g_s1
, c⁄° *
¨g_s2
)

496 c⁄° **
s1
 = (c⁄° **Ë
¨g_s1
;

497 c⁄° **
s2
 = (c⁄° **Ë
¨g_s2
;

499 (
	`°rcmp
(*
s1
, *
s2
));

500 
	}
}

505 
	$£ek_to_åaûî
(
FILE
 *
f
)

507 i‡(
	`fsˇnf
(
f
, "%ld", &
åaûîoff£t
) != 1) {

508 
	`po°Áèl
("csc›e: c™nŸÑódÅøûî off£à‰om fûê%s\n", 
ªffûe
);

511 i‡(
	`f£ek
(
f
, 
åaûîoff£t
, 
SEEK_SET
) == -1) {

512 
	`po°Áèl
("csc›e: c™nŸ sìkÅÿåaûî i¿fûê%s\n", 
ªffûe
);

515 
	}
}

520 
	$gëﬁdfûe
()

522 
fûe
[
PATHLEN
 + 1];

524 i‡(
blockp
 !
NULL
) {

526 i‡(*
blockp
 =
NEWFILE
) {

527 
	`skùªfch¨
();

528 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

529 i‡(
fûe
[0] != '\0') {

530 (
fûe
);

532 (
NULL
);

534 } 
	`sˇ≈a°
('\t'Ë!
NULL
);

536 (
NULL
);

537 
	}
}

541 
	$‰ì_√wbuûdfûes
()

543 
	`‰ì
(
√wöv«me
);

544 
	`‰ì
(
√wövpo°
);

545 
	`‰ì
(
√wªffûe
);

546 
	}
}

552 
	$puthódî
(*
dú
)

554 
dboff£t
 = 
	`Ârötf
(
√wªfs
, "csc›ê%d %s", 
FILEVERSION
, 
dú
);

555 i‡(
com¥ess
 =
NO
) {

556 
dboff£t
 +
	`Ârötf
(
√wªfs
, " -c");

558 i‡(
övîãdödex
 =
YES
) {

559 
dboff£t
 +
	`Ârötf
(
√wªfs
, " -q %.10ld", 
tŸÆãrms
);

564 
dboff£t
 +
	`Ârötf
(
√wªfs
, " ");

566 i‡(
åun_syms
 =
YES
) {

567 
dboff£t
 +
	`Ârötf
(
√wªfs
, " -T");

570 
dboff£t
 +
	`Ârötf
(
√wªfs
, " %.10ld\n", 
åaûîoff£t
);

571 #ifde‡
PRINTF_RETVAL_BROKEN


572 
dboff£t
 = 
	`·ñl
(
√wªfs
);

574 
	}
}

579 
	$puéi°
(**
«mes
, 
cou¡
)

581 
i
, 
size
 = 0;

583 
	`Ârötf
(
√wªfs
, "%d\n", 
cou¡
);

584 i‡(
«mes
 =
§cfûes
) {

587 
i
 = 0; i < 
cou¡
; ++i) {

588 
size
 +
	`°æí
(
«mes
[
i
]) + 1;

590 
	`Ârötf
(
√wªfs
, "%d\n", 
size
);

592 
i
 = 0; i < 
cou¡
; ++i) {

593 i‡(
	`Âuts
(
«mes
[
i
], 
√wªfs
Ë=
EOF
 ||

594 
	`putc
('\n', 
√wªfs
Ë=
EOF
) {

595 
	`ˇ¬Ÿwrôe
(
√wªffûe
);

599 
	}
}

604 
	$c›yd©a
()

606 
symbﬁ
[
PATLEN
 + 1];

607 *
˝
;

609 
	`£tm¨k
('\t');

610 
˝
 = 
blockp
;

614 *
˝
 != '\t') {

615 
	`dbputc
(*
˝
++);

617 } *++
˝
 ='\0' && (˝ = 
	`ªad_block
()Ë!
NULL
);

618 
	`dbputc
('\t');

621 i‡(*(
˝
 + 1) == '\0') {

622 
˝
 = 
	`ªad_block
();

625 i‡(
˝
 =
NULL
 || *˝ =
NEWFILE
) {

629 i‡(*
˝
 =
INCLUDE
) {

630 
blockp
 = 
˝
;

631 
	`„tch_ö˛ude_‰om_dba£
(
symbﬁ
, (symbol));

632 
	`wrôe°rög
(
symbﬁ
);

633 
	`£tm¨k
('\t');

634 
˝
 = 
blockp
;

637 
blockp
 = 
˝
;

638 
	}
}

643 
	$c›yövîãd
()

645 *
˝
;

646 
c
;

647 
ty≥
;

648 
symbﬁ
[
PATLEN
 + 1];

653 
˝
 = 
blockp
;

655 
	`£tm¨k
('\n');

657 *
˝
 != '\n') {

658 
	`dbputc
(*
˝
++);

660 } *++
˝
 ='\0' && (˝ = 
	`ªad_block
()Ë!
NULL
);

661 
	`dbputc
('\n');

664 i‡(*(
˝
 + 1) == '\0') {

665 
˝
 = 
	`ªad_block
();

668 i‡(
˝
 =
NULL
) {

671 *
˝
) {

673 
löeoff£t
 = 
dboff£t
 + 1;

676 
	`dbputc
('\t');

677 
blockp
 = 
˝
;

678 
ty≥
 = 
	`gëªfch¨
();

679 
ty≥
) {

680 
NEWFILE
:

682 
INCLUDE
:

683 
	`„tch_ö˛ude_‰om_dba£
(
symbﬁ
, (symbol));

684 
ouçut
;

686 
	`dbputc
(
ty≥
);

687 
	`skùªfch¨
();

688 
	`„tch_°rög_‰om_dba£
(
symbﬁ
, (symbol));

689 
ouçut
;

691 
c
 = *
˝
;

692 i‡(
c
 & 0200) {

693 
c
 = 
dich¨1
[(c & 0177) / 8];

696 i‡(
	`ißÕha
(()
c
) || c == '_') {

697 
blockp
 = 
˝
;

698 
	`„tch_°rög_‰om_dba£
(
symbﬁ
, (symbol));

699 
ty≥
 = ' ';

700 
ouçut
:

701 
	`puço°ög
(
symbﬁ
, 
ty≥
);

702 
	`wrôe°rög
(
symbﬁ
);

703 i‡(
blockp
 =
NULL
) {

706 
˝
 = 
blockp
;

709 
blockp
 = 
˝
;

710 
	}
}

715 
	$movefûe
(*
√w
, *
ﬁd
)

717 
	`u∆ök
(
ﬁd
);

718 i‡(
	`ª«me
(
√w
, 
ﬁd
) == -1) {

719 
	`my≥º‹
("cscope");

720 
	`po°Áèl
("cscope: cannotÑename file %sÅo file %s\n",

721 
√w
, 
ﬁd
);

724 
	}
}

729 
	$„tch_ö˛ude_‰om_dba£
(*
s
, 
size_t
 
Àngth
)

731 
	`dbputc
(
INCLUDE
);

732 
	`skùªfch¨
();

733 
	`„tch_°rög_‰om_dba£
(
s
, 
Àngth
);

734 
	`öcfûe
(
s
 + 1, s);

735 
	}
}

	@build.h

36 #i‚de‡
CSCOPE_BUILD_H


37 
	#CSCOPE_BUILD_H


	)

39 
	~"globÆ.h
"

40 
	~"övlib.h
"

45 
	#dbputc
(
c
Ë(++
dboff£t
, (Ë
	`putc
(c, 
√wªfs
))

	)

46 
	#dbÂuts
(
s
Ë(
dboff£t
 +
	`°æí
(s), 
	`Âuts
(s, 
√wªfs
))

	)

50 
BOOL
 
buûd⁄ly
;

51 
BOOL
 
unc⁄dôi⁄Æ
;

52 
BOOL
 
fûesch™ged
;

54 *
ªffûe
;

55 *
öv«me
;

56 *
övpo°
;

57 *
√wªffûe
;

58 
FILE
 *
√wªfs
;

59 
FILE
 *
po°ögs
;

60 
symªfs
;

62 
INVCONTROL
 
övc⁄åﬁ
;

66 
buûd
();

67 
‰ì_√wbuûdfûes
();

68 
›íd©aba£
();

69 
ªbuûd
();

70 
£tup_buûd_fûíames
(*
ªffûe
);

71 
£ek_to_åaûî
(
FILE
 *
f
);

	@command.c

38 
	~"globÆ.h
"

39 
	~"buûd.h
"

40 
	~"Æloc.h
"

42 
	~<°dlib.h
>

43 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

44 
	~<ncur£s.h
>

46 
	~<cur£s.h
>

48 
	~<˘y≥.h
>

50 c⁄° 
	grcsid
[] = "$Id: command.c,v 1.33 2009/04/10 13:39:23 broeker Exp $";

53 
	g£À˘ög
;

54 
	gcurdi•löe
 = 0;

56 
BOOL
 
	gˇ£Àss
;

57 
BOOL
 *
	gch™ge
;

58 
BOOL
 
	gch™gög
;

59 
	g√w∑t
[
PATLEN
 + 1];

62 
	gP©ã∫
[
PATLEN
 + 1];

65 
	g≠≥nd¥om±
[] = "AppendÅo file: ";

66 
	gpùïrom±
[] = "PipeÅo shell command: ";

67 
	gªad¥om±
[] = "Read from file: ";

68 
	gt›rom±
[] = "To: ";

72 
BOOL
 
ch™ge°rög
();

73 
˛óΩrom±
();

74 
m¨k
(
i
);

75 
s¸ﬁlb¨
(
MOUSE
 *
p
);

79 
BOOL


80 
	$comm™d
(
comm™dc
)

82 
fûíame
[
PATHLEN
 + 1];

83 
MOUSE
 *
p
;

84 
c
, 
i
;

85 
FILE
 *
fûe
;

86 
cmd
 *
cuºôem
, *
ôem
;

87 *
s
;

89 
comm™dc
) {

90 
	`˘æ
('C'):

91 i‡(
ˇ£Àss
 =
NO
) {

92 
ˇ£Àss
 = 
YES
;

93 
	`po°msg2
("Caseless mode isÇow ON");

95 
ˇ£Àss
 = 
NO
;

96 
	`po°msg2
("Caseless mode isÇow OFF");

98 
	`egªpˇ£Àss
(
ˇ£Àss
);

99 (
NO
);

101 
	`˘æ
('R'):

102 i‡(
isu±od©e
 =
YES
) {

103 
	`po°msg
("The -d optionÖreventsÑebuildingÅhe symbol database");

104 (
NO
);

106 
	`exôcur£s
();

107 
	`‰ìfûñi°
();

108 
	`makefûñi°
();

109 
	`ªbuûd
();

110 i‡(
îr‹sfound
 =
YES
) {

111 
îr‹sfound
 = 
NO
;

112 
	`askf‹ªtu∫
();

114 
	`íãrcur£s
();

115 
	`˛órmsg
();

116 
tŸÆlöes
 = 0;

117 
di•ªfs
 = 0;

118 
t›löe
 = 
√xéöe
 = 1;

119 
£À˘ög
 = 0;

122 #i‡
UNIXPC


123 
ESC
:

125 
	`˘æ
('X'):

126 i‡((
p
 = 
	`gëmou£a˘i⁄
(
DUMMYCHAR
)Ë=
NULL
) {

127 (
NO
);

130 i‡(
p
->
buâ⁄
 == '0') {

131 
	`s¸ﬁlb¨
(
p
);

135 i‡(
p
->
x2
 >= 0) {

136 (
NO
);

139 i‡(
p
->
y1
 < 
FLDLINE
) {

143 
i
 = 
di•ªfs
 - 1; i > 0; --i) {

144 i‡(
p
->
y1
 >
di•löe
[
i
]) {

149 
	`edôªf
(
i
);

151 
fõld
 = 
p
->
y1
 - 
FLDLINE
;

153 i‡(
fõld
 >
FIELDS
) {

154 
fõld
 = 
FIELDS
 - 1;

156 
	`£tfõld
();

157 
	`ª£tcmd
();

158 (
NO
);

163 i‡(
di•ªfs
) {

164 
£À˘ög
 = !selecting;

165 i‡(
£À˘ög
) {

166 
	`move
(
di•löe
[
curdi•löe
], 0);

167 
	`ª‰esh
();

169 
	`©fõld
();

170 
	`ª£tcmd
();

173 (
NO
);

175 #ifde‡
KEY_ENTER


176 
KEY_ENTER
:

180 i‡(
£À˘ög
) {

181 
	`edôªf
(
curdi•löe
);

182 (
YES
);

186 
	`˘æ
('N'):

187 #ifde‡
KEY_DOWN


188 
KEY_DOWN
:

190 #ifde‡
KEY_RIGHT


191 
KEY_RIGHT
:

193 i‡(
£À˘ög
) {

194 i‡((
curdi•löe
 + 1Ë< 
di•ªfs
) {

195 
	`move
(
di•löe
[++
curdi•löe
], 0);

196 
	`ª‰esh
();

199 
fõld
 = (fõld + 1Ë% 
FIELDS
;

200 
	`£tfõld
();

201 
	`©fõld
();

202 
	`ª£tcmd
();

204 (
NO
);

206 
	`˘æ
('P'):

207 #ifde‡
KEY_UP


208 
KEY_UP
:

210 #ifde‡
KEY_LEFT


211 
KEY_LEFT
:

213 i‡(
£À˘ög
) {

214 i‡(
curdi•löe
) {

215 
	`move
(
di•löe
[--
curdi•löe
], 0);

216 
	`ª‰esh
();

219 
fõld
 = (fõld + (
FIELDS
 - 1)) % FIELDS;

220 
	`£tfõld
();

221 
	`©fõld
();

222 
	`ª£tcmd
();

224 (
NO
);

225 #ifde‡
KEY_HOME


226 
KEY_HOME
:

227 i‡(
£À˘ög
) {

228 
curdi•löe
 = 0;

229 
	`move
(
REFLINE
, 0);

230 
	`ª‰esh
();

232 
fõld
 = 0;

233 
	`£tfõld
();

234 
	`©fõld
();

235 
	`ª£tcmd
();

237 (
NO
);

240 #ifde‡
KEY_LL


241 
KEY_LL
:

242 i‡(
£À˘ög
) {

243 
	`move
(
di•löe
[
di•ªfs
 - 1], 0);

244 
	`ª‰esh
();

246 
fõld
 = 
FIELDS
 - 1;

247 
	`£tfõld
();

248 
	`©fõld
();

249 
	`ª£tcmd
();

251 (
NO
);

256 
	`˘æ
('V'):

257 #ifde‡
KEY_NPAGE


258 
KEY_NPAGE
:

261 i‡(
tŸÆlöes
 == 0) {

262 (
NO
);

268 
curdi•löe
 = 0;

271 
	`˘æ
('H'):

273 #ifde‡
KEY_PPAGE


274 
KEY_PPAGE
:

277 i‡(
tŸÆlöes
 == 0) {

278 (
NO
);

281 
curdi•löe
 = 0;

284 i‡(
tŸÆlöes
 <2 * 
mdi•ªfs
) {

288 
√xéöe
 -
mdi•ªfs
;

289 i‡(
√xéöe
 > 1 &&Çexéöê<
mdi•ªfs
) {

290 
√xéöe
 = 1;

292 
√xéöe
 -
mdi•ªfs
;

293 i‡(
√xéöe
 < 1) {

294 
√xéöe
 = 
tŸÆlöes
 - 
mdi•ªfs
 + 1;

295 i‡(
√xéöe
 < 1) {

296 
√xéöe
 = 1;

300 
	`£eklöe
(
√xéöe
);

304 i‡(
tŸÆlöes
 == 0) {

305 
	`po°msg
("ThereáreÇoÜinesÅo writeÅoá file");

307 
	`move
(
PRLINE
, 0);

308 
	`add°r
("WriteÅo file: ");

309 
s
 = "w";

310 i‡((
c
 = 
	`mygëch
()) == '>') {

311 
	`move
(
PRLINE
, 0);

312 
	`add°r
(
≠≥nd¥om±
);

313 
c
 = '\0';

314 
s
 = "a";

316 i‡(
c
 != '\r' &&

317 
	`mygëlöe
("", 
√w∑t
,

318 
COLS
 - (
≠≥nd¥om±
), 
c
, 
NO
) > 0

320 
	`shñÕ©h
(
fûíame
, (fûíame), 
√w∑t
);

321 i‡((
fûe
 = 
	`myf›í
(
fûíame
, 
s
)Ë=
NULL
) {

322 
	`ˇ¬Ÿ›í
(
fûíame
);

324 
	`£eklöe
(1);

325 (
c
 = 
	`gëc
(
ªfsfound
)Ë!
EOF
) {

326 
	`putc
(
c
, 
fûe
);

328 
	`£eklöe
(
t›löe
);

329 
	`f˛o£
(
fûe
);

332 
	`˛óΩrom±
();

334 (
NO
);

337 
	`move
(
PRLINE
, 0);

338 
	`add°r
(
ªad¥om±
);

339 i‡(
	`mygëlöe
("", 
√w∑t
, 
COLS
 - (
ªad¥om±
),

340 '\0', 
NO
) > 0) {

341 
	`˛óΩrom±
();

342 
	`shñÕ©h
(
fûíame
, (fûíame), 
√w∑t
);

343 i‡(
	`ªadªfs
(
fûíame
Ë=
NO
) {

344 
	`po°msg2
("IgnoringánÉmpty file");

345 (
NO
);

347 (
YES
);

349 
	`˛óΩrom±
();

350 (
NO
);

354 i‡(
tŸÆlöes
 == 0) {

355 
	`po°msg
("ThereáreÇoÜinesÅoÖipeÅoá shell command");

356 (
NO
);

359 
	`move
(
PRLINE
, 0);

360 
	`add°r
(
pùïrom±
);

361 i‡(
	`mygëlöe
("", 
√w∑t
, 
COLS
 - (
pùïrom±
), '\0', 
NO
)

363 
	`˛óΩrom±
();

364 (
NO
);

367 i‡(
comm™dc
 == '^') {

368 
	`°rˇt
(°rˇt(
√w∑t
, " >"), 
ãmp2
);

374 
	`ªmove
(
ãmp2
);

376 
	`exôcur£s
();

377 i‡((
fûe
 = 
	`myp›í
(
√w∑t
, "w")Ë=
NULL
) {

378 
	`Ârötf
(
°dîr
, "\
: c™nŸ o≥¿pùêtÿshñ»comm™d: %s\n", 
√w∑t
);

381 
	`£eklöe
(1);

382 (
c
 = 
	`gëc
(
ªfsfound
)Ë!
EOF
) {

383 
	`putc
(
c
, 
fûe
);

385 
	`£eklöe
(
t›löe
);

386 
	`myp˛o£
(
fûe
);

388 i‡(
comm™dc
 == '^') {

389 i‡(
	`ªadªfs
(
ãmp2
Ë=
NO
) {

390 
	`po°msg
("IgnoringÉmpty output of ^ command");

393 
	`askf‹ªtu∫
();

394 
	`íãrcur£s
();

396 #i‡
	`deföed
(
KEY_RESIZE
Ë&& !deföed(
__DJGPP__
)

397 
KEY_RESIZE
:

398 
	`exôcur£s
();

399 
	`öôs¸
();

400 
	`íãrcur£s
();

401 #i‡
TERMINFO


402 
	`key∑d
(
°ds¸
, 
TRUE
);

403 #ifde‡
HAVE_FIXKEYPAD


404 
	`fixkey∑d
();

407 #i‡
UNIXPC


408 
	`°™díd
();

410 
	`di•öô
();

411 
	`£tfõld
();

412 
	`po°msg
("");

413 
	`di•œy
();

416 
	`˘æ
('L'):

417 #ifde‡
KEY_CLEAR


418 
KEY_CLEAR
:

420 
	`˛órmsg2
();

421 
	`˛órok
(
curs¸
, 
TRUE
);

422 
	`wª‰esh
(
curs¸
);

423 
	`døws¸ﬁlb¨
(
t›löe
, 
bŸtomlöe
);

424 (
NO
);

427 
	`execuã
(
shñl
, shñl, 
NULL
);

428 
	`£eklöe
(
t›löe
);

432 
	`˛ór
();

433 
	`hñp
();

434 
	`˛ór
();

435 
	`£eklöe
(
t›löe
);

438 
	`˘æ
('E'):

439 
	`edôÆl
();

442 
	`˘æ
('A'):

443 
	`˘æ
('Y'):

444 i‡(*
P©ã∫
 != '\0') {

445 
	`add°r
(
P©ã∫
);

446 
ª≥©
;

450 
	`˘æ
('B'):

451 
	`˘æ
('F'):

452 i‡(
£À˘ög
)

453 (
NO
);

455 
cuºôem
 = 
	`cuºítcmd
();

456 
ôem
 = (
comm™dc
 =
	`˘æ
('F')Ë? 
	`√xtcmd
(Ë: 
	`¥evcmd
();

457 
	`˛órmsg2
();

458 i‡(
cuºôem
 =
ôem
) {

459 
	`po°msg2
("End of input fieldánd searchÖattern history");

461 i‡(
ôem
) {

462 
fõld
 = 
ôem
->field;

463 
	`£tfõld
();

464 
	`©fõld
();

465 
	`add°r
(
ôem
->
ãxt
);

466 
	`°r˝y
(
P©ã∫
, 
ôem
->
ãxt
);

467 
c
 = 
	`mygëch
()) {

470 
ª≥©
;

471 
	`˘æ
('F'):

472 
	`˘æ
('B'):

473 
	`myungëch
(
c
);

474 
	`©fõld
();

475 
	`˛π€ﬁ
();

478 
	`myungëch
(
c
);

479 i‡(
	`mygëlöe
(
P©ã∫
, 
√w∑t
, 
COLS
 - 
Êdcﬁumn
 - 1, '\0', 
ˇ£Àss
 )) {

480 
	`°r˝y
 (
P©ã∫
, 
√w∑t
);

481 
	`ª£tcmd
();

483 
ª≥©
;

487 (
NO
);

490 
	`addch
('\\');

493 i‡((
comm™dc
 = 
	`mygëch
()Ë=
EOF
) {

494 (
NO
);

496 
	`add°r
("\b \b");

497 
i•©
;

500 
	`po°msg
("The . command has beenÑeplaced by ^Y");

501 
	`©fõld
();

504 i‡(
£À˘ög
 && !
mou£
) {

505 *
c
;

507 i‡((
c
 = 
	`°rchr
(
di•ch¨s
, 
comm™dc
)))

508 
	`edôªf
(
c
 - 
di•ch¨s
);

511 } i‡(
	`i•röt
(
comm™dc
)) {

512 
i•©
:

513 i‡(
	`mygëlöe
("", 
√w∑t
, 
COLS
 - 
Êdcﬁumn
 - 1,

514 
comm™dc
, 
ˇ£Àss
) > 0) {

515 
	`°r˝y
(
P©ã∫
, 
√w∑t
);

516 
	`ª£tcmd
();

517 
ª≥©
:

518 
	`addcmd
(
fõld
, 
P©ã∫
);

519 i‡(
fõld
 =
CHANGE
) {

521 
	`move
(
PRLINE
, 0);

522 
	`add°r
(
t›rom±
);

523 
	`mygëlöe
("", 
√w∑t
,

524 
COLS
 - (
t›rom±
),

525 '\0', 
NO
);

528 i‡(
	`£¨ch
(Ë=
YES
) {

529 
curdi•löe
 = 0;

530 ++
£À˘ög
;

532 
fõld
) {

533 
DEFINITION
:

534 
FILENAME
:

535 i‡(
tŸÆlöes
 > 1) {

538 
t›löe
 = 1;

539 
	`edôªf
(0);

541 
CHANGE
:

542 (
	`ch™ge°rög
());

545 } i‡(
fõld
 =
FILENAME
 &&

546 
	`ac˚ss
(
√w∑t
, 
READ
) == 0) {

548 
	`edô
(
√w∑t
, "1");

551 (
NO
);

554 (
NO
);

557 (
YES
);

558 
	}
}

563 
	$˛óΩrom±
()

565 
	`move
(
PRLINE
, 0);

566 
	`˛π€ﬁ
();

567 
	}
}

571 
BOOL


572 
	$ªadªfs
(*
fûíame
)

574 
FILE
 *
fûe
;

575 
c
;

577 i‡((
fûe
 = 
	`myf›í
(
fûíame
, "rb")Ë=
NULL
) {

578 
	`ˇ¬Ÿ›í
(
fûíame
);

579 (
NO
);

581 i‡((
c
 = 
	`gëc
(
fûe
)Ë=
EOF
) {

582 (
NO
);

584 
tŸÆlöes
 = 0;

585 
di•ªfs
 = 0;

586 
√xéöe
 = 1;

587 i‡(
	`wrôîefsfound
(Ë=
YES
) {

588 
	`putc
(
c
, 
ªfsfound
);

589 (
c
 = 
	`gëc
(
fûe
)Ë!
EOF
) {

590 
	`putc
(
c
, 
ªfsfound
);

592 
	`f˛o£
(
fûe
);

593 
	`f˛o£
(
ªfsfound
);

594 i‡–(
ªfsfound
 = 
	`myf›í
(
ãmp1
, "rb")Ë=
NULL
) {

595 
	`ˇ¬Ÿ›í
(
ãmp1
);

596 (
NO
);

598 
	`cou¡ªfs
();

600 (
YES
);

601 
	}
}

605 
BOOL


606 
	$ch™ge°rög
()

608 
√wfûe
[
PATHLEN
 + 1];

609 
ﬁdfûe
[
PATHLEN
 + 1];

610 
löíum
[
NUMLEN
 + 1];

611 
msg
[
MSGLEN
 + 1];

612 
FILE
 *
s¸ùt
;

613 
BOOL
 
™ym¨ked
 = 
NO
;

614 
MOUSE
 *
p
;

615 
c
;

616 
i
;

617 *
s
;

620 i‡((
s¸ùt
 = 
	`myf›í
(
ãmp2
, "w")Ë=
NULL
) {

621 
	`ˇ¬Ÿ›í
(
ãmp2
);

622 (
NO
);

625 
ch™ge
 = 
	`myˇŒoc
(
tŸÆlöes
, (
BOOL
));

626 
ch™gög
 = 
YES
;

627 
	`mou£míu
();

632 
	`di•œy
();

633 
ßme
:

634 
	`©ch™ge
();

637 i‡((
c
 = 
	`mygëch
()Ë=
EOF


638 || 
c
 =
	`˘æ
('D')

639 || 
c
 =
	`˘æ
('Z')) {

643 
c
) {

646 
	`˘æ
('V'):

647 #ifde‡
KEY_NPAGE


648 
KEY_NPAGE
:

651 #ifde‡
KEY_PPAGE


652 
KEY_PPAGE
:

656 
	`comm™d
(
c
);

659 
	`˘æ
('L'):

660 #ifde‡
KEY_CLEAR


661 
KEY_CLEAR
:

663 
	`comm™d
(
c
);

664 
ßme
;

666 
ESC
:

667 #i‡
UNIXPC


668 if((
p
 = 
	`gëmou£a˘i⁄
(
DUMMYCHAR
)Ë=
NULL
) {

669 
noch™ge
;

673 
	`˘æ
('G'):

674 
noch™ge
;

677 
i
 = 0; 
t›löe
 + i < 
√xéöe
; ++i) {

678 
	`m¨k
(
i
);

680 
ßme
;

682 
	`˘æ
('A'):

683 
i
 = 0; i < 
tŸÆlöes
; ++i) {

684 i‡(
ch™ge
[
i
] =
NO
) {

685 
ch™ge
[
i
] = 
YES
;

687 
ch™ge
[
i
] = 
NO
;

691 
	`£eklöe
(
tŸÆlöes
);

694 
	`˘æ
('X'):

695 i‡((
p
 = 
	`gëmou£a˘i⁄
(
DUMMYCHAR
)Ë=
NULL
) {

696 
ßme
;

699 i‡(
p
->
buâ⁄
 == '0') {

700 
	`s¸ﬁlb¨
(
p
);

705 
i
 = 
di•ªfs
 - 1; i > 0; --i) {

706 i‡(
p
->
y1
 >
di•löe
[
i
]) {

710 
	`m¨k
(
i
);

711 
ßme
;

716 *
cc
;

718 i‡((
cc
 = 
	`°rchr
(
di•ch¨s
, 
c
)))

719 
	`m¨k
(
cc
 - 
di•ch¨s
);

721 
ßme
;

727 
	`Ârötf
(
s¸ùt
, "ed - <<\\!\n");

728 *
ﬁdfûe
 = '\0';

729 
	`£eklöe
(1);

730 
i
 = 0;

731 
	`fsˇnf
(
ªfsfound
, "%" 
PATHLEN_STR
 "s%*s%" 
NUMLEN_STR
 "s%*[^\n]", 
√wfûe
, 
löíum
) == 2;

732 ++
i
) {

734 i‡(
ch™ge
[
i
] =
YES
) {

735 
™ym¨ked
 = 
YES
;

738 i‡(
	`°rcmp
(
√wfûe
, 
ﬁdfûe
) != 0) {

741 i‡(
	`ac˚ss
(
√wfûe
, 
WRITE
) != 0) {

742 
	`¢¥ötf
(
msg
, (msg), "C™nŸ wrôêtÿfûê%s", 
√wfûe
);

743 
	`po°msg
(
msg
);

744 
™ym¨ked
 = 
NO
;

748 i‡(*
ﬁdfûe
 != '\0') {

749 
	`Ârötf
(
s¸ùt
, "w\n");

752 
	`°r˝y
(
ﬁdfûe
, 
√wfûe
);

753 
	`Ârötf
(
s¸ùt
, "ê%s\n", 
ﬁdfûe
);

756 
	`Ârötf
(
s¸ùt
, "%ss/", 
löíum
);

757 
s
 = 
P©ã∫
; *s != '\0'; ++s) {

759 i‡(
	`°rchr
("/\\[.^*", *
s
Ë!
NULL
) {

760 
	`putc
('\\', 
s¸ùt
);

762 i‡(
ˇ£Àss
 =
YES
 && 
	`ißÕha
(()*
s
)) {

763 
	`putc
('[', 
s¸ùt
);

764 if(
	`i¶owî
(()*
s
)) {

765 
	`putc
(
	`touµî
(()*
s
), 
s¸ùt
);

766 
	`putc
(*
s
, 
s¸ùt
);

768 
	`putc
(*
s
, 
s¸ùt
);

769 
	`putc
(
	`tﬁowî
(()*
s
), 
s¸ùt
);

771 
	`putc
(']', 
s¸ùt
);

773 
	`putc
(*
s
, 
s¸ùt
);

775 
	`putc
('/', 
s¸ùt
);

776 
s
 = 
√w∑t
; *s != '\0'; ++s) {

777 i‡(
	`°rchr
("/\\&", *
s
Ë!
NULL
) {

778 
	`putc
('\\', 
s¸ùt
);

780 
	`putc
(*
s
, 
s¸ùt
);

782 
	`Ârötf
(
s¸ùt
, "/gp\n");

785 
	`Ârötf
(
s¸ùt
, "w\nq\n!\n");

786 
	`f˛o£
(
s¸ùt
);

789 i‡(
™ym¨ked
 =
YES
) {

792 
	`˛óΩrom±
();

793 
	`ª‰esh
();

794 
	`Ârötf
(
°dîr
, "ChangedÜines:\n\r");

795 
	`execuã
("sh", "sh", 
ãmp2
, 
NULL
);

796 
	`askf‹ªtu∫
();

797 
	`£eklöe
(1);

799 
noch™ge
:

800 
	`˛óΩrom±
();

802 
ch™gög
 = 
NO
;

803 
	`mou£míu
();

804 
	`‰ì
(
ch™ge
);

805 (
™ym¨ked
);

806 
	}
}

811 
	$m¨k
(
i
)

813 
j
;

815 
j
 = 
i
 + 
t›löe
 - 1;

816 i‡(
j
 < 
tŸÆlöes
) {

817 
	`move
(
di•löe
[
i
], 1);

819 i‡(
ch™ge
[
j
] =
NO
) {

820 
ch™ge
[
j
] = 
YES
;

821 
	`addch
('>');

823 
ch™ge
[
j
] = 
NO
;

824 
	`addch
(' ');

827 
	}
}

832 
	$s¸ﬁlb¨
(
MOUSE
 *
p
)

835 i‡(
tŸÆlöes
 == 0) {

838 
p
->
≥r˚¡
) {

841 i‡(
√xéöe
 + 
mdi•ªfs
 > 
tŸÆlöes
) {

842 
√xéöe
 = 
tŸÆlöes
 - 
mdi•ªfs
 + 1;

847 
√xéöe
 = 
t›löe
 - 
mdi•ªfs
;

848 i‡(
√xéöe
 < 1) {

849 
√xéöe
 = 1;

854 
√xéöe
 = 
t›löe
 + 1;

858 i‡(
t›löe
 > 1) {

859 
√xéöe
 = 
t›löe
 - 1;

863 
√xéöe
 = 
p
->
≥r˚¡
 * 
tŸÆlöes
 / 100;

865 
	`£eklöe
(
√xéöe
);

866 
	}
}

871 
	$cou¡ªfs
()

873 *
subsy°em
;

874 *
book
;

875 
fûe
[
PATHLEN
 + 1];

876 
fun˘i⁄
[
PATLEN
 + 1];

877 
löíum
[
NUMLEN
 + 1];

878 
i
;

882 
subsy°emÀn
 = 9;

883 
bookÀn
 = 4;

884 
fûñí
 = 4;

885 
f˙Àn
 = 8;

886 
numÀn
 = 0;

887 (
i
 = 
	`fsˇnf
(
ªfsfound
, "%250s%250s%5†%5000[^\n]", 
fûe
,

888 
fun˘i⁄
, 
löíum
, 
ãmp°rög
)Ë!
EOF
) {

889 i‡(
i
 != 4 ||

890 !
	`isgøph
((Ë*
fûe
) ||

891 !
	`isgøph
((Ë*
fun˘i⁄
) ||

892 !
	`isdigô
((Ë*
löíum
)) {

893 
	`po°msg
("File doesÇot haveÉxpected format");

894 
tŸÆlöes
 = 0;

895 
di•ªfs
 = 0;

898 i‡((
i
 = 
	`°æí
(
	`∑thcomp⁄íts
(
fûe
, 
di•comp⁄íts
))Ë> 
fûñí
) {

899 
fûñí
 = 
i
;

901 i‡(
ogs
 =
YES
) {

902 
	`og¢ames
(
fûe
, &
subsy°em
, &
book
);

903 i‡((
i
 = 
	`°æí
(
subsy°em
)Ë> 
subsy°emÀn
) {

904 
subsy°emÀn
 = 
i
;

906 i‡((
i
 = 
	`°æí
(
book
)Ë> 
bookÀn
) {

907 
bookÀn
 = 
i
;

910 i‡((
i
 = 
	`°æí
(
fun˘i⁄
)Ë> 
f˙Àn
) {

911 
f˙Àn
 = 
i
;

913 i‡((
i
 = 
	`°æí
(
löíum
)Ë> 
numÀn
) {

914 
numÀn
 = 
i
;

916 ++
tŸÆlöes
;

918 
	`ªwöd
(
ªfsfound
);

922 
i
 = (
COLS
 - 5) / 3;

923 i‡(
ogs
 =
YES
) {

924 
i
 = (
COLS
 - 7) / 5;

926 i‡(
fûñí
 > 
i
 && i > 4) {

927 
fûñí
 = 
i
;

929 i‡(
subsy°emÀn
 > 
i
 && i > 9) {

930 
subsy°emÀn
 = 
i
;

932 i‡(
bookÀn
 > 
i
 && i > 4) {

933 
bookÀn
 = 
i
;

935 i‡(
f˙Àn
 > 
i
 && i > 8) {

936 
f˙Àn
 = 
i
;

938 
	}
}

	@compath.c

47 c⁄° 
	grcsid
[] = "$Id: compath.c,v 1.3 2001/07/05 14:31:00 broeker Exp $";

49 
	~"globÆ.h
"

51 #i‚de‡
NULL


52 
	#NULL
 0

	)

56 
	$com∑th
(*
∑th«me
)

58 *
√xtch¨
;

59 *
œ°ch¨
;

60 *
soÁr
;

61 *
≤íd
;

63 
≤Àn
;

69 i‡(
	`°rchr
(
∑th«me
, '/'Ë=
NULL
)

70 (
∑th«me
);

76 
œ°ch¨
 = 
∑th«me
 + 1; *lastchar != '\0';Üastchar++)

77 i‡((*
œ°ch¨
 == '/') && (*(lastchar - 1) == '/'))

84 
√xtch¨
 = 
œ°ch¨
;

85 *++
œ°ch¨
 == '/')

94 
soÁr
 = 
√xtch¨
;

95 (*
√xtch¨
++ = *
œ°ch¨
++) != '\0')

97 
œ°ch¨
 = 
soÁr
;

104 
œ°ch¨
 = 
∑th«me
 + 1; *lastchar != '\0';Üastchar++)

105 i‡((*
œ°ch¨
 == '/') && (*(lastchar - 1) == '.') &&

106 ((
œ°ch¨
 - 1 =
∑th«me
) || (*(lastchar - 2) == '/')))

113 
√xtch¨
 = 
œ°ch¨
 - 1;

114 
soÁr
 = 
√xtch¨
;

115 (*
√xtch¨
++ = *++
œ°ch¨
) != '\0')

117 
œ°ch¨
 = 
soÁr
;

124 
œ°ch¨
 = 
∑th«me
 + 1; *lastchar != '\0';Üastchar++)

125 i‡((
œ°ch¨
 !
∑th«me
) && (*lastchar == '/') &&

126 (*(
œ°ch¨
 + 1) == '.') && (*(lastchar + 2) == '.') &&

127 ((*(
œ°ch¨
 + 3) == '/') || (*(lastchar + 3) == '\0')))

134 
√xtch¨
 = 
œ°ch¨
 - 1;

135 (
√xtch¨
 !
∑th«me
) &&

136 (*(
√xtch¨
 - 1) != '/'))

137 --
√xtch¨
;

144 i‡((*
√xtch¨
 == '.') &&

145 ((*(
√xtch¨
 + 1) == '/') ||

146 ((*(
√xtch¨
 + 1) == '.') && (*(nextchar + 2) == '/'))))

156 i‡(*(
œ°ch¨
 + 3) == '/')

157 
œ°ch¨
 += 4;

159 
œ°ch¨
 += 3;

166 
soÁr
 = 
√xtch¨
 - 1;

167 (*
√xtch¨
++ = *
œ°ch¨
++) != '\0');

169 
œ°ch¨
 = 
soÁr
;

177 i‡((
soÁr
 + 1 !
∑th«me
) && (*sofar == '/'))

178 --
œ°ch¨
;

187 
≤Àn
 = 
	`°æí
(
∑th«me
);

188 
≤íd
 = 
	`°rchr
(
∑th«me
, '\0') - 1;

190 i‡((
≤Àn
 > 1Ë&& (*
≤íd
 == '/'))

192 *
≤íd
-- = '\0';

193 
≤Àn
--;

201 i‡((
≤Àn
 > 2Ë&& (*(
≤íd
 - 1) == '/') && (*pnend == '.'))

202 *--
≤íd
 = '\0';

209 i‡(*
∑th«me
 == '\0')

210 (Ë
	`°r˝y
(
∑th«me
, ".");

212 (
∑th«me
);

213 
	}
}

	@constants.h

40 #i‚de‡
CSCOPE_CONSTANTS_H


41 
	#CSCOPE_CONSTANTS_H


	)

43 
	~"c⁄fig.h
"

45 
	#˘æ
(
x
Ë(x & 037Ë

	)

48 
	#°ªquÆ
(
s1
, 
s2
Ë(*(s1Ë=*(s2Ë&& 
	`°rcmp
(s1, s2Ë=0)

	)

49 
	#°∫ŸequÆ
(
s1
, 
s2
Ë(*(s1Ë!*(s2Ë|| 
	`°rcmp
(s1, s2Ë!0)

	)

52 
	#£tm¨k
(
c
Ë(
blockm¨k
 = c, 
block
[
blockÀn
] = blockm¨k)

	)

56 
	#gëªfch¨
(Ë(*(++
blockp
 + 1) != '\0' ? *blockp : \

57 (
	`ªad_block
(Ë!
NULL
 ? *
blockp
 : '\0'))

	)

62 
	#skùªfch¨
(Ëi‡(*(++
blockp
 + 1Ë='\0'Ë(Ë
	`ªad_block
()

	)

64 
	#ESC
 '\033'

	)

65 
	#DEL
 '\177'

	)

66 
	#DUMMYCHAR
 ' '

	)

67 
	#MSGLEN
 ((
PATLEN
Ë+ 80Ë

	)

68 
	#NUMLEN
 5

	)

69 
	#PATHLEN
 250

	)

70 
	#PATLEN
 250

	)

71 
	#TEMPSTRING_LEN
 8191

	)

72 
	#REFFILE
 "csc›e.out"

	)

73 
	#NAMEFILE
 "csc›e.fûes"

	)

74 
	#INVNAME
 "csc›e.ö.out"

	)

75 
	#INVPOST
 "csc›e.po.out"

	)

76 
	#INVNAME2
 "csc›e.out.ö"

	)

77 
	#INVPOST2
 "csc›e.out.po"

	)

79 
	#STMTMAX
 10000

	)

81 
	#STR2
(
x
Ë#x

	)

82 
	#STRINGIZE
(
x
Ë
	`STR2
(x)

	)

83 
	#PATLEN_STR
 
	`STRINGIZE
(
PATLEN
)

	)

84 
	#PATHLEN_STR
 
	`STRINGIZE
(
PATHLEN
)

	)

85 
	#NUMLEN_STR
 
	`STRINGIZE
(
NUMLEN
)

	)

86 
	#TEMPSTRING_LEN_STR
 
	`STRINGIZE
(
TEMPSTRING_LEN
)

	)

89 
	#FLDLINE
 (
LINES
 - 
FIELDS
 - 1Ë

	)

90 
	#MSGLINE
 0

	)

91 
	#PRLINE
 (
LINES
 - 1Ë

	)

92 
	#REFLINE
 3

	)

95 
	#SYMBOL
 0

	)

96 
	#DEFINITION
 1

	)

97 
	#CALLEDBY
 2

	)

98 
	#CALLING
 3

	)

99 
	#STRING
 4

	)

100 
	#CHANGE
 5

	)

101 
	#REGEXP
 6

	)

102 
	#FILENAME
 7

	)

103 
	#INCLUDES
 8

	)

104 
	#FIELDS
 9

	)

106 #i‡(
BSD
 || 
V9
Ë&& !
__NëBSD__
 && !
__FªeBSD__


107 
	#TERMINFO
 0

	)

109 
	#TERMINFO
 1

	)

113 #i‡!
TERMINFO


114 #i‚de‡
KEY_BREAK


115 
	#KEY_BREAK
 0400

	)

117 #i‚de‡
KEY_ENTER


118 
	#KEY_ENTER
 0401

	)

120 #i‚de‡
KEY_BACKSPACE


121 
	#KEY_BACKSPACE
 0402

	)

124 #i‡!
sun


125 
	#cbªak
(Ë
	`¸mode
(Ë

	)

128 #i‡
UNIXPC


129 
	#îa£ch¨
(Ë(
_ây
.
c_cc
[
VERASE
]Ë

	)

130 
	#kûlch¨
(Ë(
_ây
.
c_cc
[
VKILL
]Ë

	)

132 
	#îa£ch¨
(Ë(
_ây
.
sg_îa£
Ë

	)

133 
	#kûlch¨
(Ë(
_ây
.
sg_kûl
Ë

	)

	@crossref.c

39 
	~"globÆ.h
"

41 
	~"buûd.h
"

42 
	~"sˇ¬î.h
"

43 
	~"Æloc.h
"

45 
	~<°dlib.h
>

46 
	~<sys/°©.h
>

48 c⁄° 
	grcsid
[] = "$Id: crossref.c,v 1.14 2006/07/23 20:59:20 broeker Exp $";

52 
	#…oba£
(
vÆue
Ë
n
 = value; \

53 
s
 = 
buf
 + ((buf) - 1); \

54 *
s
 = '\0'; \

55 
digôs
 = 1; \

56 
n
 >
BASE
) { \

57 ++
digôs
; \

58 
i
 = 
n
; \

59 
n
 /
BASE
; \

60 *--
s
 = 
i
 - 
n
 * 
BASE
 + '!'; \

62 *--
s
 = 
n
 + '!';

	)

64 
	#SYMBOLINC
 20

	)

66 
	gdboff£t
;

67 
BOOL
 
	gîr‹sfound
;

68 
	glöeoff£t
;

69 
	g≈o°ögs
;

70 
	gn§coff£t
;

71 *
	g§coff£t
;

72 
	gsymbﬁs
;

74 *
	gfûíame
;

75 
	gf˙off£t
;

76 
	gma¸ooff£t
;

77 
	gmsymbﬁs
 = 
SYMBOLINC
;

79 
	ssymbﬁ
 {

80 
	mty≥
;

81 
	mfú°
;

82 
	mœ°
;

83 
	mÀngth
;

84 
	mf˙_Àvñ
;

86 
symbﬁ
 *
	gsymbﬁ
;

88 
put¸os§ef
();

89 
ßvesymbﬁ
(
tokí
, 
num
);

92 
	$¸os§ef
(*
§cfûe
)

94 
i
;

95 
Àngth
;

96 
íåy_no
;

97 
tokí
;

98 
°©
 
°
;

100 i‡(! ((
	`°©
(
§cfûe
, &
°
) == 0)

101 && 
	`S_ISREG
(
°
.
°_mode
))) {

102 
	`ˇ¬Ÿ›í
(
§cfûe
);

103 
îr‹sfound
 = 
YES
;

107 
íåy_no
 = 0;

109 i‡((
yyö
 = 
	`myf›í
(
§cfûe
, "r")Ë=
NULL
) {

110 
	`ˇ¬Ÿ›í
(
§cfûe
);

111 
îr‹sfound
 = 
YES
;

114 
fûíame
 = 
§cfûe
;

115 
	`putfûíame
(
§cfûe
);

116 
	`dbputc
('\n');

117 
	`dbputc
('\n');

120 
	`öôsˇ¬î
(
§cfûe
);

121 
f˙off£t
 = 
ma¸ooff£t
 = 0;

122 
symbﬁs
 = 0;

123 i‡(
symbﬁ
 =
NULL
) {

124 
symbﬁ
 = 
	`mymÆloc
(
msymbﬁs
 * (symbol));

129 
tokí
 = 
	`yyÀx
()) {

132 
Àngth
 = 
œ°
 - 
fú°
;

133 i‡(
åun_syms
 =
YES
 && 
Àngth
 > 8 &&

134 
tokí
 !
INCLUDE
 &&Åokí !
NEWFILE
) {

135 
Àngth
 = 8;

136 
œ°
 = 
fú°
 + 8;

139 i‡(
Àngth
 == 0) {

140 
	`ßvesymbﬁ
(
tokí
, 
íåy_no
);

144 i‡(
tokí
 =
FCNDEF
) {

145 
íåy_no
++;

148 
i
 = 0; i < 
symbﬁs
; ++i) {

149 i‡(
Àngth
 =
symbﬁ
[
i
].length

150 && 
	`°∫cmp
(
my_yyãxt
 + 
fú°
,

151 
my_yyãxt
 + 
symbﬁ
[
i
].
fú°
,

152 
Àngth
) == 0

153 && 
íåy_no
 =
symbﬁ
[
i
].
f˙_Àvñ


154 && 
tokí
 =
symbﬁ
[
i
].
ty≥


159 i‡(
i
 =
symbﬁs
) {

160 
	`ßvesymbﬁ
(
tokí
, 
íåy_no
);

164 
NEWLINE
:

165 
íåy_no
 = 0;

166 #ifde‡
USING_LEX


167 --
yyÀng
;

169 
	`put¸os§ef
();

170 
löío
 = 
myylöío
;

171 #i‚de‡
USING_LEX


173 i‡(
my_yyãxt
)

174 *
my_yyãxt
 = '\0';

175 
my_yyÀng
 = 0;

179 
LEXEOF
:

182 i‡(
symbﬁs
 > 0) {

183 
	`put¸os§ef
();

185 (Ë
	`f˛o£
(
yyö
);

188 
	`dbputc
('\t');

192 
	}
}

197 
	$ßvesymbﬁ
(
tokí
, 
num
)

200 i‡(
symbﬁs
 =
msymbﬁs
) {

201 
msymbﬁs
 +
SYMBOLINC
;

202 
symbﬁ
 = 
	`myªÆloc
(symbﬁ, 
msymbﬁs
 * (symbol));

205 
symbﬁ
[
symbﬁs
].
ty≥
 = 
tokí
;

206 
symbﬁ
[
symbﬁs
].
fú°
 = first;

207 
symbﬁ
[
symbﬁs
].
œ°
 =Üast;

208 
symbﬁ
[
symbﬁs
].
Àngth
 = 
œ°
 - 
fú°
;

209 
symbﬁ
[
symbﬁs
].
f˙_Àvñ
 = 
num
;

210 ++
symbﬁs
;

211 
	}
}

216 
	$putfûíame
(*
§cfûe
)

220 i‡(
	`putc
(
NEWFILE
, 
√wªfs
Ë=
EOF
) {

221 
	`ˇ¬Ÿwrôe
(
√wªffûe
);

224 ++
dboff£t
;

225 i‡(
övîãdödex
 =
YES
) {

226 
§coff£t
[
n§coff£t
++] = 
dboff£t
;

228 
	`dbÂuts
(
§cfûe
);

229 
f˙off£t
 = 
ma¸ooff£t
 = 0;

230 
	}
}

235 
	$put¸os§ef
()

237 
i
, 
j
;

238 
c
;

239 
BOOL
 
bœnk
;

240 
symput
 = 0;

241 
ty≥
;

244 
löeoff£t
 = 
dboff£t
;

245 
dboff£t
 +
	`Ârötf
(
√wªfs
, "%d ", 
löío
);

246 #ifde‡
PRINTF_RETVAL_BROKEN


247 
dboff£t
 = 
	`·ñl
(
√wªfs
);

251 
my_yyãxt
[
my_yyÀng
] = '\0';

253 
bœnk
 = 
NO
;

254 
i
 = 0; i < 
my_yyÀng
; ++i) {

257 i‡((
c
 = 
my_yyãxt
[
i
]) == ' ' || c == '\t') {

258 
bœnk
 = 
YES
;

259 } i‡(
symput
 < 
symbﬁs
 && 
i
 =
symbﬁ
[symput].
fú°
) {

263 i‡(
bœnk
 =
YES
) {

264 
bœnk
 = 
NO
;

265 
	`dbputc
(' ');

267 
	`dbputc
('\n');

270 i‡((
ty≥
 = 
symbﬁ
[
symput
].ty≥Ë!
IDENT
) {

271 
	`dbputc
('\t');

272 
	`dbputc
(
ty≥
);

274 
ty≥
 = ' ';

277 
j
 = 
symbﬁ
[
symput
].
œ°
;

278 
c
 = 
my_yyãxt
[
j
];

279 
my_yyãxt
[
j
] = '\0';

280 i‡(
övîãdödex
 =
YES
) {

281 
	`puço°ög
(
my_yyãxt
 + 
i
, 
ty≥
);

283 
	`wrôe°rög
(
my_yyãxt
 + 
i
);

284 
	`dbputc
('\n');

285 
my_yyãxt
[
j
] = 
c
;

286 
i
 = 
j
 - 1;

287 ++
symput
;

291 i‡(
com¥ess
 =
NO
) {

292 i‡(
bœnk
 =
YES
) {

293 
	`dbputc
(' ');

294 
bœnk
 = 
NO
;

296 
j
 = 
i
 + 
	`°rc•n
(
my_yyãxt
+i, "\t ");

297 i‡(
symput
 < 
symbﬁs


298 && 
j
 >
symbﬁ
[
symput
].
fú°
)

299 
j
 = 
symbﬁ
[
symput
].
fú°
;

300 
c
 = 
my_yyãxt
[
j
];

301 
my_yyãxt
[
j
] = '\0';

302 
	`wrôe°rög
(
my_yyãxt
 + 
i
);

303 
my_yyãxt
[
j
] = 
c
;

304 
i
 = 
j
 - 1;

310 i‡(
bœnk
 =
YES
) {

311 i‡(
dicode2
[
c
]) {

312 
c
 = 
	`DICODE_COMPRESS
(' ', c);

314 
	`dbputc
(' ');

316 } i‡(
	`IS_A_DICODE
(
c
, 
my_yyãxt
[
i
 + 1])

317 && 
symput
 < 
symbﬁs


318 && 
i
 + 1 !
symbﬁ
[
symput
].
fú°
) {

320 
c
 = 
	`DICODE_COMPRESS
(c, 
my_yyãxt
[
i
 + 1]);

321 ++
i
;

323 
	`dbputc
((Ë
c
);

324 
bœnk
 = 
NO
;

327 i‡(
c
 < ' ') {

328 ++
i
;

333 (
j
 = 
my_yyãxt
[
i
]) == ' ' || j == '\t') {

334 ++
i
;

337 
	`ißÕha
(()
my_yyãxt
[
i
])) {

338 ++
i
;

341 i‡(
keyw‹d
[
c
].
dñim
 != '\0') {

342 (
j
 = 
my_yyãxt
[
i
]) == ' ' || j == '\t') {

343 ++
i
;

347 i‡(
keyw‹d
[
c
].
dñim
 == '('

348 && 
my_yyãxt
[
i
] == '(') {

349 ++
i
;

351 --
i
;

357 
	`dbputc
('\n');

358 
	`dbputc
('\n');

363 i‡(
symput
 < 
symbﬁs
 && 
symbﬁ
[symput].
ty≥
 =
DEFINEEND
) {

364 
	`dbputc
('\t');

365 
	`dbputc
(
DEFINEEND
);

366 
	`dbputc
('\n');

367 
	`dbputc
('\n');

368 
ma¸ooff£t
 = 0;

370 
symbﬁs
 = 0;

371 
	}
}

376 
	$‰ì¸os§ef
()

378 i‡(
symbﬁ
)

379 
	`‰ì
(
symbﬁ
);

380 
symbﬁ
 = 
NULL
;

381 
symbﬁs
 = 0;

382 
	}
}

387 
	$puço°ög
(*
ãrm
, 
ty≥
)

389 
i
, 
n
;

390 *
s
;

391 
digôs
;

392 
off£t
;

393 
buf
[11];

396 
off£t
 = 
f˙off£t
;

397 i‡(
ma¸ooff£t
 != 0) {

398 
off£t
 = 
ma¸ooff£t
;

401 
ty≥
) {

402 
DEFINE
:

403 
ma¸ooff£t
 = 
dboff£t
;

405 
DEFINEEND
:

406 
ma¸ooff£t
 = 0;

408 
FCNDEF
:

409 
f˙off£t
 = 
dboff£t
;

411 
FCNEND
:

412 
f˙off£t
 = 0;

416 i‡(*
ãrm
 == '\0') {

420 i‡(
ty≥
 =
INCLUDE
) {

421 ++
ãrm
;

425 (Ë
	`Âuts
(
ãrm
, 
po°ögs
);

426 (Ë
	`putc
(' ', 
po°ögs
);

431 
	`…oba£
(
löeoff£t
);

432 
i
 = 
PRECISION
 - 
digôs
; i > 0; --i) {

433 (Ë
	`putc
('!', 
po°ögs
);

436 (Ë
	`putc
(*
s
, 
po°ögs
);

437 } *++
s
 != '\0');

440 (Ë
	`putc
(
ty≥
, 
po°ögs
);

443 i‡(
off£t
 > 0) {

444 (Ë
	`putc
(' ', 
po°ögs
);

445 
	`…oba£
(
off£t
);

447 (Ë
	`putc
(*
s
, 
po°ögs
);

448 } *++
s
 != '\0');

450 i‡(
	`putc
('\n', 
po°ögs
Ë=
EOF
) {

451 
	`ˇ¬Ÿwrôe
(
ãmp1
);

454 ++
≈o°ögs
;

455 
	}
}

460 
	$wrôe°rög
(*
s
)

462 
c
;

463 
i
;

465 i‡(
com¥ess
 =
NO
) {

467 
	`dbÂuts
(
s
);

471 
i
 = 0; (
c
 = 
s
[i]) != '\0'; ++i) {

473 
	`IS_A_DICODE
(
c
, 
s
[
i
 + 1])) {

475 
c
 = 
	`DICODE_COMPRESS
(c, 
s
[
i
 + 1]);

476 ++
i
;

478 
	`dbputc
(
c
);

480 
	}
}

485 
	$w¨nög
(*
ãxt
)

488 (Ë
	`Ârötf
(
°dîr
, "csc›e: \"%s\",Üöê%d: w¨nög: %s\n", 
fûíame
,

489 
myylöío
, 
ãxt
);

490 
îr‹sfound
 = 
YES
;

491 
	}
}

	@dir.c

39 
	~"globÆ.h
"

40 
	~"Æloc.h
"

41 
	~"vp.h
"

43 
	~<°dlib.h
>

44 
	~<sys/ty≥s.h
>

45 
	~<dúít.h
>

46 
	~<sys/°©.h
>

48 c⁄° 
	grcsid
[] = "$Id: dir.c,v 1.31 2009/04/10 13:39:23 broeker Exp $";

50 
	#DIRSEPS
 " ,:"

	)

51 
	#DIRINC
 10

	)

52 
	#HASHMOD
 2003

	)

53 
	#SRCINC
 
HASHMOD


	)

56 
	gcuºítdú
[
PATHLEN
 + 1];

57 **
	göcdús
;

58 **
	g§cdús
;

59 **
	g§cfûes
;

60 
	gnöcdús
;

61 
	gn§cdús
;

62 
	gn§cfûes
;

63 
	gm§cfûes
 = 
SRCINC
;

65 **
	gö˙ames
;

66 
	gmöcdús
 = 
DIRINC
;

67 
	gm§cdús
;

68 
	gnvp§cdús
;

70 
	sli°ôem
 {

71 *
	mãxt
;

72 
li°ôem
 *
	m√xt
;

73 } *
	g§˙ames
[
HASHMOD
];

76 
BOOL
 
ac˚ssibÀ_fûe
(*
fûe
);

77 
BOOL
 
is§cfûe
(*
fûe
);

78 
add§cdú
(*
dú
);

79 
addöcdú
(*
«me
, *
∑th
);

80 
sˇn_dú
(c⁄° *
dúfûe
, 
BOOL
 
ªcur£
);

81 
makevp§cdús
();

87 
	$makevp§cdús
()

89 
i
;

92 i‡(
n§cdús
 > 0) {

96 i‡(
	`gëcwd
(
cuºítdú
, 
PATHLEN
Ë=
NULL
) {

97 
	`Ârötf
(
°dîr
, "cscope: warning: cannot get current directoryÇame\n");

98 
	`°r˝y
(
cuºítdú
, "<unknown>");

101 
	`vpöô
(
cuºítdú
);

102 i‡(
v≤dús
 > 1) {

103 
n§cdús
 = 
v≤dús
;

105 
n§cdús
 = 1;

108 
m§cdús
 = 
n§cdús
 + 
DIRINC
;

109 
§cdús
 = 
	`mymÆloc
(
m§cdús
 * (*));

110 *
§cdús
 = ".";

111 
i
 = 1; i < 
v≤dús
; ++i) {

112 
§cdús
[
i
] = 
vpdús
[i];

115 
nvp§cdús
 = 
n§cdús
;

116 
	}
}

121 
	$sour˚dú
(*
dúli°
)

123 
∑th
[
PATHLEN
 + 1];

124 *
dú
;

125 
i
;

127 
	`makevp§cdús
();

128 
dúli°
 = 
	`my_°rdup
(dirlist);

131 
dú
 = 
	`°πok
(
dúli°
, 
DIRSEPS
);

132 
dú
 !
NULL
) {

133 
dú_Àn
 = 
	`°æí
(
dú
);

135 
	`add§cdú
(
dú
);

139 i‡(*
dúli°
 !'/' && 
v≤dús
 > 1) {

142 
i
 = 1; i < 
nvp§cdús
; ++i) {

143 
	`¢¥ötf
(
∑th
, (path), "%.*s/%s",

144 
PATHLEN
 - 2 - 
dú_Àn
,

145 
§cdús
[
i
], 
dú
);

146 
	`add§cdú
(
∑th
);

149 
dú
 = 
	`°πok
(
NULL
, 
DIRSEPS
);

151 
	`‰ì
(
dúli°
);

152 
	}
}

157 
	$add§cdú
(*
dú
)

159 
°©
 
°©°ru˘
;

162 i‡(
	`l°©
(
	`com∑th
(
dú
), &
°©°ru˘
) == 0 &&

163 
	`S_ISDIR
(
°©°ru˘
.
°_mode
)) {

166 i‡(
n§cdús
 =
m§cdús
) {

167 
m§cdús
 +
DIRINC
;

168 
§cdús
 = 
	`myªÆloc
(§cdús, 
m§cdús
 * (*));

170 
§cdús
[
n§cdús
++] = 
	`my_°rdup
(
dú
);

172 
	}
}

177 
	$‰ì§˛i°
()

179 i‡(!
§cdús
)

181 
n§cdús
>1)

182 
	`‰ì
(
§cdús
[--
n§cdús
]);

183 
	`‰ì
(
§cdús
);

184 
	}
}

189 
	$ö˛udedú
(*
dúli°
)

191 
∑th
[
PATHLEN
 + 1];

192 *
dú
;

193 
i
;

195 
	`makevp§cdús
();

196 
dúli°
 = 
	`my_°rdup
(dirlist);

199 
dú
 = 
	`°πok
(
dúli°
, 
DIRSEPS
);

200 
dú
 !
NULL
) {

201 
size_t
 
dú_Àn
 = 
	`°æí
(
dú
);

203 
	`addöcdú
(
dú
, dir);

207 i‡(*
dúli°
 !'/' && 
v≤dús
 > 1) {

210 
i
 = 1; i < 
nvp§cdús
; ++i) {

211 
	`¢¥ötf
(
∑th
, (path), "%.*s/%s",

212 
PATHLEN
 - 2 - 
dú_Àn
,

213 
§cdús
[
i
], 
dú
);

214 
	`addöcdú
(
dú
, 
∑th
);

217 
dú
 = 
	`°πok
(
NULL
, 
DIRSEPS
);

219 
	`‰ì
(
dúli°
);

220 
	}
}

225 
	$addöcdú
(*
«me
, *
∑th
)

227 
°©
 
°©°ru˘
;

230 i‡(
	`l°©
(
	`com∑th
(
∑th
), &
°©°ru˘
) == 0 &&

231 
	`S_ISDIR
(
°©°ru˘
.
°_mode
)) {

232 i‡(
öcdús
 =
NULL
) {

233 
öcdús
 = 
	`mymÆloc
(
möcdús
 * (*));

234 
ö˙ames
 = 
	`mymÆloc
(
möcdús
 * (*));

235 } i‡(
nöcdús
 =
möcdús
) {

236 
möcdús
 +
DIRINC
;

237 
öcdús
 = 
	`myªÆloc
(incdirs,

238 
möcdús
 * (*));

239 
ö˙ames
 = 
	`myªÆloc
(incnames,

240 
möcdús
 * (*));

242 
öcdús
[
nöcdús
] = 
	`my_°rdup
(
∑th
);

243 
ö˙ames
[
nöcdús
++] = 
	`my_°rdup
(
«me
);

245 
	}
}

251 
	$‰ìö˛i°
()

253 i‡(!
öcdús
)

255 
nöcdús
>0) {

256 
	`‰ì
(
öcdús
[--
nöcdús
]);

257 
	`‰ì
(
ö˙ames
[
nöcdús
]);

259 
	`‰ì
(
öcdús
);

260 
	`‰ì
(
ö˙ames
);

261 
	}
}

266 
	$makefûñi°
()

268 
BOOL
 
fú°buûd
 = 
YES
;

269 
FILE
 *
«mes
;

270 
dú
[
PATHLEN
 + 1];

271 
∑th
[
PATHLEN
 + 1];

272 
löe
[
PATHLEN
 * 10];

273 *
fûe
;

274 *
s
;

275 
i
;

277 
	`makevp§cdús
();

280 i‡(
«mefûe
 =
NULL
 && 
fûórgc
 > 0) {

283 
i
 = 0; i < 
fûórgc
; ++i) {

284 
fûe
 = 
fûórgv
[
i
];

285 i‡(
	`öfûñi°
(
fûe
Ë=
NO
) {

286 i‡((
s
 = 
	`övõw∑th
(
fûe
)Ë!
NULL
) {

287 
	`add§cfûe
(
s
);

289 
	`Ârötf
(
°dîr
, "cscope: cannot find file %s\n",

290 
fûe
);

291 
îr‹sfound
 = 
YES
;

299 i‡(
«mefûe
 =
NULL
 && 
	`v∑c˚ss
(
NAMEFILE
, 
READ
) == 0) {

300 
«mefûe
 = 
NAMEFILE
;

303 i‡(
«mefûe
 =
NULL
) {

306 
i
 = 0; i < 
n§cdús
; ++i) {

307 
	`sˇn_dú
(
§cdús
[
i
], 
ªcur£_dú
);

314 i‡(
	`°rcmp
(
«mefûe
, "-") == 0)

315 
«mes
 = 
°dö
;

316 i‡((
«mes
 = 
	`vpf›í
(
«mefûe
, "r")Ë=
NULL
) {

317 
	`ˇ¬Ÿ›í
(
«mefûe
);

318 
	`myexô
(1);

322 
	`fgës
(
löe
, 10*
PATHLEN
, 
«mes
Ë!
NULL
) {

323 *
poöt_ö_löe
 = 
löe
 + (
	`°æí
(line) - 1);

324 
size_t
 
Àngth_of_«me
 = 0;

325 
unföished_›ti⁄
 = 0;

326 
BOOL
 
d⁄e
 = 
NO
;

329 i‡(*
poöt_ö_löe
 == '\n')

330 *
poöt_ö_löe
 = '\0';

333 
poöt_ö_löe
 = 
löe
;

334 
	`ssˇnf
(
poöt_ö_löe
, "%" 
PATHLEN_STR
 "s", 
∑th
) == 1) {

337 
Àngth_of_«me
 = 
	`°æí
(
∑th
);

339 i‡(*
∑th
 == '-') {

340 i‡(
unföished_›ti⁄
) {

343 
	`Ârötf
(
°dîr
, "\
: SyntaxÉrror inÇamelist file %s: unfinished -I or -p option\n",

345 
«mefûe
);

346 
unföished_›ti⁄
 = 0;

349 
i
 = 
∑th
[1];

350 
i
) {

352 
com¥ess
 = 
NO
;

355 
kî√lmode
 = 
YES
;

358 
övîãdödex
 = 
YES
;

361 
åun_syms
 = 
YES
;

365 
s
 = 
∑th
 + 2;

366 i‡(*
s
 == '\0') {

367 
unföished_›ti⁄
 = 
i
;

374 
	#HANDLE_OPTION_ARGUMENT
(
i
, 
s
) \

375 
i
) { \

377 i‡(
fú°buûd
 =
YES
) { \

379 
	`shñÕ©h
(
dú
, (dú), (
s
)); \

380 
	`ö˛udedú
(
dú
); \

382 
unföished_›ti⁄
 = 0; \

383 
d⁄e
 = 
YES
; \

386 i‡(*(
s
) < '0' || *(s) > '9') { \

387 
	`Ârötf
(
°dîr
, \

389 
«mefûe
); \

391 
di•comp⁄íts
 = 
	`©oi
(
s
); \

392 
unföished_›ti⁄
 = 0; \

393 
d⁄e
 = 
YES
; \

396 
d⁄e
 = 
NO
; \

397 }

	)

400 
	`HANDLE_OPTION_ARGUMENT
(
i
, 
s
)

403 
	`Ârötf
(
°dîr
, "cscope: only -I, -c, -k, -p,ánd -T options can be in file %s\n",

404 
«mefûe
);

407 i‡(*
∑th
 == '"') {

409 
size_t
 
ö
 = 1, 
out
 = 0;

410 *
√w∑th
 = 
	`mymÆloc
(
PATHLEN
 + 1);

412 
ö
 < 
PATHLEN
 && 
poöt_ö_löe
[in] != '\0') {

413 i‡(
poöt_ö_löe
[
ö
] == '"') {

414 
√w∑th
[
out
] = '\0';

417 
Àngth_of_«me
 = 
ö
 + 1;

419 } i‡(
poöt_ö_löe
[
ö
] == '\\'

420 && 
ö
 < 
PATHLEN
 - 1

421 && (
poöt_ö_löe
[
ö
 + 1]== '"'

422 || 
poöt_ö_löe
[
ö
 + 1] == '\\')) {

424 
√w∑th
[
out
++] = 
poöt_ö_löe
[
ö
 + 1];

425 
ö
 += 2;

427 
√w∑th
[
out
++] = 
poöt_ö_löe
[
ö
++];

430 i‡(
ö
 >
PATHLEN
) {

431 
√w∑th
[
out
]='\0';

436 
	`HANDLE_OPTION_ARGUMENT
(
unföished_›ti⁄
, 
√w∑th
);

437 i‡(! 
d⁄e
) {

438 i‡((
s
 = 
	`övõw∑th
(
√w∑th
)Ë!
NULL
) {

439 
	`add§cfûe
(
s
);

441 
	`Ârötf
(
°dîr
, "cscope: cannot find file %s\n",

442 
√w∑th
);

443 
îr‹sfound
 = 
YES
;

452 
	`HANDLE_OPTION_ARGUMENT
(
unföished_›ti⁄
, 
∑th
);

453 i‡(!
d⁄e
) {

454 i‡((
s
 = 
	`övõw∑th
(
∑th
)Ë!
NULL
) {

455 
	`add§cfûe
(
s
);

457 
	`Ârötf
(
°dîr
, "cscope: cannot find file %s\n",

458 
∑th
);

459 
îr‹sfound
 = 
YES
;

464 
poöt_ö_löe
 +
Àngth_of_«me
;

465 
	`is•a˚
((Ë*
poöt_ö_löe
))

466 
poöt_ö_löe
 ++;

470 i‡(
«mes
 =
°dö
)

471 
	`˛óªº
(
°dö
);

473 
	`f˛o£
(
«mes
);

474 
fú°buûd
 = 
NO
;

477 
	}
}

481 
	$sˇn_dú
(c⁄° *
adú
, 
BOOL
 
ªcur£_dú
)

483 
DIR
 *
dúfûe
;

484 
adú_Àn
 = 
	`°æí
(
adú
);

488 i‡((
dúfûe
 = 
	`›ídú
(
adú
)Ë!
NULL
) {

489 
dúít
 *
íåy
;

490 
∑th
[
PATHLEN
 + 1];

491 *
fûe
;

493 (
íåy
 = 
	`ªaddú
(
dúfûe
)Ë!
NULL
) {

494 i‡((
	`°rcmp
(".",
íåy
->
d_«me
) != 0)

495 && (
	`°rcmp
("..",
íåy
->
d_«me
) != 0)) {

496 
°©
 
buf
;

498 
	`¢¥ötf
(
∑th
, ’©h), "%s/%.*s", 
adú
,

499 
PATHLEN
 - 2 - 
adú_Àn
,

500 
íåy
->
d_«me
);

502 i‡(
	`l°©
(
∑th
,&
buf
) == 0) {

503 
fûe
 = 
íåy
->
d_«me
;

504 i‡(
ªcur£_dú


505 && 
	`S_ISDIR
(
buf
.
°_mode
) ) {

506 
	`sˇn_dú
(
∑th
, 
ªcur£_dú
);

507 } i‡(
	`is§cfûe
(
∑th
)

508 && 
	`öfûñi°
(
∑th
Ë=
NO


509 && 
	`ac˚ss
(
∑th
, 
R_OK
) == 0) {

510 
	`add§cfûe
(
∑th
);

515 
	`˛o£dú
(
dúfûe
);

518 
	}
}

522 
BOOL


523 
	$is§cfûe
(*
∑th
)

525 
°©
 
°©°ru˘
;

526 *
fûe
 = 
	`myba£«me
(
∑th
);

527 *
s
 = 
	`°ºchr
(
fûe
, '.');

528 
BOOL
 
looks_like_sour˚
 = 
NO
;

531 i‡(
s
 =
NULL
 || *++s == '\0')

532  
NO
;

535 i‡(
fûe
[1] ='.' && fûê+ 2 !
s
) {

536 *
fûe
) {

539 (
NO
);

543 i‡(
s
[1] == '\0') {

544 *
s
) {

553 
looks_like_sour˚
 = 
YES
;

555 } i‡((
s
[2] == '\0')

556 && ((
s
[0] == 'b' && s[1] == 'p')

557 || (
s
[0] == 'q'

558 && (
s
[1] == 'c' || s[1] == 'h'))

559 || (
s
[0] == 's' && s[1] == 'd')

560 || (
s
[0] == 'c' && s[1] == 'c')

561 || (
s
[0] == 'h' && s[1] == 'h'))) {

562 
looks_like_sour˚
 = 
YES
;

564 } if((
s
[3] == '\0')

566 && ((
s
[0] == 't' && s[1] == 'c' && s[2] == 'c' )

568 || (
s
[0] == 'c' && s[1] == 'p' && s[2] == 'p' )

569 || (
s
[0] == 'c' && s[1] == 'x' && s[2] == 'x' )

570 || (
s
[0] == 'h' && s[1] == 'p' && s[2] == 'p' )

571 || (
s
[0] == 'h' && s[1] == 'x' && s[2] == 'x' ))

573 
looks_like_sour˚
 = 
YES
;

576 i‡(
looks_like_sour˚
 !
YES
)

577  
NO
;

580 i‡(
	`l°©
(
∑th
, &
°©°ru˘
) == 0 &&

581 
	`S_ISREG
(
°©°ru˘
.
°_mode
)) {

582 (
YES
);

584  
NO
;

585 
	}
}

590 
	$öcfûe
(*
fûe
, *
ty≥
)

592 
«me
[
PATHLEN
 + 1];

593 
∑th
[
PATHLEN
 + 1];

594 *
s
;

595 
i
;

598 i‡(
	`öfûñi°
(
fûe
Ë=
YES
) {

602 i‡(
ty≥
[0] ='"' && (
s
 = 
	`övõw∑th
(
fûe
)Ë!
NULL
) {

603 
	`add§cfûe
(
s
);

605 
size_t
 
fûe_Àn
 = 
	`°æí
(
fûe
);

608 
i
 = 0; i < 
nöcdús
; ++i) {

610 
	`¢¥ötf
(
«me
, (name), "%.*s/%s",

611 
PATHLEN
 - 2 - 
fûe_Àn
, 
ö˙ames
[
i
],

612 
fûe
);

613 i‡(
	`öfûñi°
(
«me
Ë=
YES
) {

617 
	`¢¥ötf
(
∑th
, (path), "%.*s/%s",

618 
PATHLEN
 - 2 - 
fûe_Àn
, 
öcdús
[
i
],

619 
fûe
);

620 i‡(
	`ac˚ss
(
	`com∑th
(
∑th
), 
READ
) == 0) {

621 
	`add§cfûe
(
∑th
);

626 
	}
}

630 
BOOL


631 
	$öfûñi°
(*
∑th
)

633 
li°ôem
 *
p
;

635 
p
 = 
§˙ames
[
	`hash
(
	`com∑th
(
∑th
)Ë% 
HASHMOD
];

636 
p
 !
NULL
;

637 
p
 =Ö->
√xt
) {

638 i‡(
	`°ªquÆ
(
∑th
, 
p
->
ãxt
)) {

639 (
YES
);

642 (
NO
);

643 
	}
}

648 
BOOL


649 
	$ac˚ssibÀ_fûe
(*
fûe
)

651 i‡(
	`ac˚ss
(
	`com∑th
(
fûe
), 
READ
) == 0) {

652 
°©
 
°©s
;

654 i‡(
	`l°©
(
fûe
, &
°©s
) == 0

655 && 
	`S_ISREG
(
°©s
.
°_mode
)) {

656  
YES
;

659  
NO
;

660 
	}
}

664 
	$övõw∑th
(*
fûe
)

666 
∑th
[
PATHLEN
 + 1];

667 
i
;

670 i‡(
	`ac˚ssibÀ_fûe
(
fûe
)) {

671 (
fûe
);

676 i‡(*
fûe
 !'/' && 
v≤dús
 > 1) {

677 
fûe_Àn
 = 
	`°æí
(
fûe
);

680 
i
 = 1; i < 
nvp§cdús
; ++i) {

681 
	`¢¥ötf
(
∑th
, (path), "%.*s/%s",

682 
PATHLEN
 - 2 - 
fûe_Àn
, 
§cdús
[
i
],

683 
fûe
);

684 i‡(
	`ac˚ssibÀ_fûe
(
∑th
)) {

685 (
∑th
);

689 (
NULL
);

690 
	}
}

695 
	$add§cfûe
(*
∑th
)

697 
li°ôem
 *
p
;

698 
i
;

701 i‡(
n§cfûes
 =
m§cfûes
) {

702 
m§cfûes
 +
SRCINC
;

703 
§cfûes
 = 
	`myªÆloc
(§cfûes, 
m§cfûes
 * (*));

706 
§cfûes
[
n§cfûes
++] = 
	`my_°rdup
(
	`com∑th
(
∑th
));

707 
p
 = 
	`mymÆloc
((
li°ôem
));

708 
p
->
ãxt
 = 
	`my_°rdup
(
	`com∑th
(
∑th
));

709 
i
 = 
	`hash
(
p
->
ãxt
Ë% 
HASHMOD
;

710 
p
->
√xt
 = 
§˙ames
[
i
];

711 
§˙ames
[
i
] = 
p
;

712 
	}
}

717 
	$‰ìfûñi°
()

719 
li°ôem
 *
p
, *
√xç
;

720 
i
;

723 i‡(
isu±od©e
 =
NO
) {

724 
n§cfûes
 > 0) {

725 
	`‰ì
 (
§cfûes
[--
n§cfûes
]);

730 i‡(
n§cfûes
 > 0)

731 
	`‰ì
 (
§cfûes
[0]);

732 
n§cfûes
 = 0;

735 
	`‰ì
 (
§cfûes
);

736 
m§cfûes
 = 0;

737 
§cfûes
=0;

739 
i
 = 0; i < 
HASHMOD
; ++i) {

740 
p
 = 
§˙ames
[
i
];Ö !
NULL
;Ö = 
√xç
) {

742 
	`‰ì
(
p
->
ãxt
);

743 
√xç
 = 
p
->
√xt
;

744 
	`‰ì
(
p
);

746 
§˙ames
[
i
] = 
NULL
;

748 
	}
}

	@display.c

38 
	~"globÆ.h
"

39 
	~"buûd.h
"

40 
	~"Æloc.h
"

42 #ifde‡
CCS


43 
	~"sgs.h
"

45 
	~"vîsi⁄.h
"

48 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

49 
	~<ncur£s.h
>

51 
	~<cur£s.h
>

53 
	~<£tjmp.h
>

54 
	~<°d¨g.h
>

55 
	~<time.h
>

56 
	~<î∫o.h
>

57 
	~<°d¨g.h
>

59 #i‚de‡
HAVE_SIGSETJMP


60 
	#sig£tjmp
(
a
,
b
Ë
	`£tjmp
◊)

	)

61 
	#sigl⁄gjmp
(
a
,
b
Ë
	`l⁄gjmp
◊,b)

	)

62 
jmp_buf
 
	tsigjmp_buf
;

65 c⁄° 
	grcsid
[] = "$Id: display.c,v 1.30 2009/04/10 13:39:23 broeker Exp $";

67 
	gbookÀn
;

68 *
	gdi•löe
;

69 
	gdi•ªfs
;

70 
	gfõld
;

71 
	gfûñí
;

72 
	gf˙Àn
;

73 
	gmdi•ªfs
;

74 
	g√xéöe
;

75 
FILE
 *
	gn⁄globÆªfs
;

76 
	gnumÀn
;

77 
	gt›löe
 = 1;

78 
	gbŸtomlöe
;

79 
	g£¨chcou¡
;

80 
	gsubsy°emÀn
;

81 
	gtŸÆlöes
;

82 
	gÊdcﬁumn
;

84 c⁄° 
	gdi•ch¨s
[] = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

86 
	gÊdlöe
;

87 
sigjmp_buf
 
	gív
;

88 
	gœ°di•löe
;

89 
	gœ°msg
[
MSGLEN
 + 1];

90 
	ghñp°rög
[] = "PressÅhe ? key for help";

91 
	g£Õrom±
[] =

94 * (*
	tFP
)(*);

102 *
	mãxt1
;

103 *
	mãxt2
;

104 
FP
 
	mfödf˙
;

105 } 
	gfõlds
[
FIELDS
 + 1] = {

106 {"FödÅhis", "C symbﬁ", 
födsymbﬁ
},

107 {"FödÅhis", "globÆ deföôi⁄", 
föddef
},

108 {"Föd", "fun˘i⁄†ˇŒed byÅhi†fun˘i⁄", 
födˇŒedby
},

109 {"Föd", "fun˘i⁄†ˇŒögÅhi†fun˘i⁄", 
födˇŒög
},

110 {"FödÅhis", "ãxà°rög", 
föd°rög
},

111 {"Ch™gêthis", "ãxà°rög", 
föd°rög
},

112 {"FödÅhis", "egª∞∑âîn", 
födªgexp
},

113 {"FödÅhis", "fûe", 
födfûe
},

114 {"Föd", "fûe†#ö˛udögÅhi†fûe", 
födö˛ude
},

115 {"FödáŒ", "fun˘i⁄ deföôi⁄s", 
födÆlf˙s
},

119 
RETSIGTYPE
 
jumpback
(
sig
);

124 
	$di•öô
()

127 
œ°di•löe
 = 
FLDLINE
 - 3;

128 
mdi•ªfs
 = 
œ°di•löe
 - 
REFLINE
 + 1;

131 i‡(
mdi•ªfs
 <= 0) {

132 
	`po°Áèl
("%s: s¸ì¿toÿsmÆl\n", 
¨gv0
);

136 i‡(
mou£
 =
NO
 && 
mdi•ªfs
 > 
	`°æí
(
di•ch¨s
))

137 
mdi•ªfs
 = 
	`°æí
(
di•ch¨s
);

140 
di•löe
 = 
	`mymÆloc
(
mdi•ªfs
 * ());

141 
	}
}

146 
	$di•œy
()

148 *
subsy°em
;

149 *
book
;

150 
fûe
[
PATHLEN
 + 1];

151 
fun˘i⁄
[
PATLEN
 + 1];

152 
löíum
[
NUMLEN
 + 1];

153 
s¸ì∆öe
;

154 
width
;

155 
i
;

156 *
s
;

159 
	`îa£
();

160 i‡(
ªfsfound
 =
NULL
) {

161 #i‡
CCS


162 i‡(
di•œyvîsi⁄
 =
YES
) {

163 
	`¥ötw
("csc›ê%s", 
ESG_REL
);

166 
	`¥ötw
("cscope");

169 
	`¥ötw
("Csc›êvîsi⁄ %d%s", 
FILEVERSION
, 
FIXVERSION
);

171 
	`move
(0, 
COLS
 - (Ë(
hñp°rög
));

172 
	`add°r
(
hñp°rög
);

173 } i‡(
tŸÆlöes
 == 0) {

176 
	`add°r
(
œ°msg
);

179 i‡(
ch™gög
 =
YES
) {

180 
	`¥ötw
("Ch™gê\"%s\"Åÿ\"%s\"", 
P©ã∫
, 
√w∑t
);

182 
	`¥ötw
("%c%s: %s", 
	`touµî
(()
fõlds
[
fõld
].
ãxt2
[0]),

183 
fõlds
[
fõld
].
ãxt2
 + 1, 
P©ã∫
);

186 
	`move
(2, 2);

187 i‡(
ogs
 =
YES
 && 
fõld
 !
FILENAME
) {

188 
	`¥ötw
("%-*†", 
subsy°emÀn
, "Subsystem");

189 
	`¥ötw
("%-*†", 
bookÀn
, "Book");

191 i‡(
di•comp⁄íts
 > 0)

192 
	`¥ötw
("%-*†", 
fûñí
, "File");

194 i‡(
fõld
 =
SYMBOL
 || fõld =
CALLEDBY
 || fõld =
CALLING
) {

195 
	`¥ötw
("%-*†", 
f˙Àn
, "Function");

197 i‡(
fõld
 !
FILENAME
) {

198 
	`add°r
("Line");

200 
	`addch
('\n');

203 i‡(
√xéöe
 > 
tŸÆlöes
) {

204 
	`£eklöe
(1);

208 
width
 = 
COLS
 - 
numÀn
 - 3;

210 i‡(
ogs
 =
YES
) {

211 
width
 -
subsy°emÀn
 + 
bookÀn
 + 2;

213 i‡(
di•comp⁄íts
 > 0) {

214 
width
 -
fûñí
 + 1;

216 i‡(
fõld
 =
SYMBOL
 || fõld =
CALLEDBY
 || fõld =
CALLING
) {

217 
width
 -
f˙Àn
 + 1;

222 
t›löe
 = 
√xéöe
;

223 
di•ªfs
 = 0, 
s¸ì∆öe
 = 
REFLINE
;

224 
di•ªfs
 < 
mdi•ªfs
 && 
s¸ì∆öe
 <
œ°di•löe
;

225 ++
di•ªfs
, ++
s¸ì∆öe
) {

227 i‡(
	`fsˇnf
(
ªfsfound
, "%" 
PATHLEN_STR
 "s%" PATHLEN_STR "s%" 
NUMLEN_STR
 "†%" 
TEMPSTRING_LEN_STR
 "[^\n]", 
fûe
, 
fun˘i⁄
,

228 
löíum
, 
ãmp°rög
) < 4) {

231 ++
√xéöe
;

232 
di•löe
[
di•ªfs
] = 
s¸ì∆öe
;

235 i‡(
mou£
 =
YES
) {

236 
	`addch
(' ');

238 
	`¥ötw
("%c", 
di•ch¨s
[
di•ªfs
]);

242 i‡(
ch™gög
 =
YES
 &&

243 
ch™ge
[
t›löe
 + 
di•ªfs
 - 1] =
YES
) {

244 
	`addch
('>');

246 
	`addch
(' ');

250 i‡(
fõld
 =
FILENAME
) {

251 
	`¥ötw
("%-*†", 
fûñí
, 
fûe
);

254 i‡(
ogs
 =
YES
) {

255 
	`og¢ames
(
fûe
, &
subsy°em
, &
book
);

256 
	`¥ötw
("%-*.*†", 
subsy°emÀn
, subsy°emÀn, 
subsy°em
);

257 
	`¥ötw
("%-*.*†", 
bookÀn
, bookÀn, 
book
);

260 i‡(
di•comp⁄íts
 > 0) {

261 
	`¥ötw
("%-*.*†", 
fûñí
, filelen,

262 
	`∑thcomp⁄íts
(
fûe
, 
di•comp⁄íts
));

267 i‡(
fõld
 =
SYMBOL
 || fõld =
CALLEDBY
 || fõld =
CALLING
) {

268 
	`¥ötw
("%-*.*†", 
f˙Àn
, f˙Àn, 
fun˘i⁄
);

270 i‡(
fõld
 =
FILENAME
) {

271 
	`addch
('\n');

276 
	`¥ötw
("%*†", 
numÀn
, 
löíum
);

278 (
s
 = 
	`°rchr
(
ãmp°rög
, '\t')Ë!
NULL
) {

279 *
s
 = ' ';

283 
s
 = 
ãmp°rög
;

286 i‡((
i
 = 
	`°æí
(
s
)Ë> 
width
) {

289 
i
 = 
width
; 
s
[i] != ' ' && i > 0; --i) {

292 i‡(
i
 == 0) {

293 
i
 = 
width
;

297 
	`¥ötw
("%.*s", 
i
, 
s
);

298 
s
 +
i
;

301 i‡(
i
 < 
width
) {

302 
	`addch
('\n');

305 *
s
 == ' ') {

306 ++
s
;

309 i‡(*
s
 == '\0') {

313 i‡(++
s¸ì∆öe
 > 
œ°di•löe
) {

317 i‡(
t›löe
 =
√xéöe
 -1) {

318 
di•ªfs
++;

320 
ídªfs
;

324 --
s¸ì∆öe
 >
di•löe
[
di•ªfs
]) {

325 
	`move
(
s¸ì∆öe
, 0);

326 
	`˛π€ﬁ
();

328 ++
s¸ì∆öe
;

331 --
√xéöe
;

332 
	`£eklöe
(
√xéöe
);

333 
ídªfs
;

336 
	`move
(
s¸ì∆öe
, 
COLS
 - 
width
);

339 
ídªfs
:

341 
i
 = 
FLDLINE
 - 1;

342 i‡(
s¸ì∆öe
 < 
i
) {

343 
	`addch
('\n');

346 
	`move
(
i
, 0);

349 
i
 = 
tŸÆlöes
 - 
√xéöe
 + 1;

350 
bŸtomlöe
 = 
√xéöe
;

351 i‡(
i
 > 0) {

352 
s
 = "s";

353 i‡(
i
 == 1) {

354 
s
 = "";

356 
	`¥ötw
("* %d m‹êlöe%†-Öªs†thê•a˚ b¨Åÿdi•œy m‹ê*", 
i
, 
s
);

359 i‡(
t›löe
 > 1 && 
√xéöe
 > 
tŸÆlöes
) {

360 
	`add°r
("* PressÅhe space barÅo displayÅhe firstÜineságain *");

364 
	`move
(
FLDLINE
, 0);

365 
i
 = 0; i < 
FIELDS
; ++i) {

366 
	`¥ötw
("%†%s:\n", 
fõlds
[
i
].
ãxt1
, fõlds[i].
ãxt2
);

369 i‡(
ch™gög
 =
YES
) {

370 
	`move
(
PRLINE
, 0);

371 
	`add°r
(
£Õrom±
);

373 
	`døws¸ﬁlb¨
(
t›löe
, 
√xéöe
);

374 
	`ª‰esh
();

375 
	}
}

379 
	$£tfõld
()

381 
Êdlöe
 = 
FLDLINE
 + 
fõld
;

382 
Êdcﬁumn
 = 
	`°æí
(
fõlds
[
fõld
].
ãxt1
Ë+ såÀn(fõlds[fõld].
ãxt2
) + 3;

383 
	}
}

388 
	$©fõld
()

390 
	`move
(
Êdlöe
, 
Êdcﬁumn
);

391 
	}
}

396 
	$©ch™ge
()

398 
	`move
(
PRLINE
, (Ë(
£Õrom±
) - 1);

399 
	}
}

404 
RETSIGTYPE


405 
	$jumpback
(
sig
)

409 
	`sig«l
(
sig
, 
jumpback
);

410 
	`sigl⁄gjmp
(
ív
, 1);

411 
	}
}

413 
BOOL


414 
	$£¨ch
()

416 *
födªsu…
 = 
NULL
;

417 
BOOL
 
fun˚xi°
 = 
YES
;

418 
FINDINIT
 
rc
 = 
NOERROR
;

419 
sigh™dÀr_t
 
ßvesig
;

420 
FP
 
f
;

421 
c
;

424 i‡(
	`wrôîefsfound
(Ë=
NO
) {

425 (
NO
);

428 i‡(
löemode
 =
NO
) {

429 
	`po°msg
("Searching");

431 
£¨chcou¡
 = 0;

432 
ßvesig
 = 
	`sig«l
(
SIGINT
, 
jumpback
);

433 i‡(
	`sig£tjmp
(
ív
, 1) == 0) {

434 
f
 = 
fõlds
[
fõld
].
födf˙
;

435 i‡(
f
 =
födªgexp
 || f =
föd°rög
) {

436 
födªsu…
 = (*
f
)(
P©ã∫
);

438 i‡((
n⁄globÆªfs
 = 
	`myf›í
(
ãmp2
, "wb")Ë=
NULL
) {

439 
	`ˇ¬Ÿ›í
(
ãmp2
);

440 (
NO
);

442 i‡((
rc
 = 
	`födöô
(
P©ã∫
)Ë=
NOERROR
) {

443 (Ë
	`db£ek
(0L);

444 
födªsu…
 = (*
f
)(
P©ã∫
);

445 i‡(
f
 =
födˇŒedby
)

446 
fun˚xi°
 = (*
födªsu…
 == 'y');

447 
	`föd˛ónup
();

450 (Ë
	`f˛o£
(
n⁄globÆªfs
);

451 i‡((
n⁄globÆªfs
 = 
	`myf›í
(
ãmp2
, "rb"))

452 =
NULL
) {

453 
	`ˇ¬Ÿ›í
(
ãmp2
);

454 (
NO
);

456 (
c
 = 
	`gëc
(
n⁄globÆªfs
)Ë!
EOF
) {

457 (Ë
	`putc
(
c
, 
ªfsfound
);

460 (Ë
	`f˛o£
(
n⁄globÆªfs
);

463 
	`sig«l
(
SIGINT
, 
ßvesig
);

466 (Ë
	`l£ek
(
symªfs
, () 0, 0);

469 (Ë
	`f˛o£
(
ªfsfound
);

470 i‡((
ªfsfound
 = 
	`myf›í
(
ãmp1
, "rb")Ë=
NULL
) {

471 
	`ˇ¬Ÿ›í
(
ãmp1
);

472 (
NO
);

474 
√xéöe
 = 1;

475 
tŸÆlöes
 = 0;

476 
di•ªfs
 = 0;

479 i‡((
c
 = 
	`gëc
(
ªfsfound
)Ë=
EOF
) {

480 i‡(
födªsu…
 !
NULL
) {

481 (Ë
	`¢¥ötf
(
œ°msg
, (lastmsg), "Egrep %s inÅhisÖattern: %s",

482 
födªsu…
, 
P©ã∫
);

483 } i‡(
rc
 =
NOTSYMBOL
) {

484 (Ë
	`¢¥ötf
(
œ°msg
, (lastmsg), "This isÇotá C symbol: %s",

485 
P©ã∫
);

486 } i‡(
rc
 =
REGCMPERROR
) {

487 (Ë
	`¢¥ötf
(
œ°msg
, (lastmsg), "Error inÅhisÑegcomp(3)ÑegularÉxpression: %s",

488 
P©ã∫
);

490 } i‡(
fun˚xi°
 =
NO
) {

491 (Ë
	`¢¥ötf
(
œ°msg
, (lastmsg), "Function definition doesÇotÉxist: %s",

492 
P©ã∫
);

494 (Ë
	`¢¥ötf
(
œ°msg
, (lastmsg), "CouldÇot findÅhe %s: %s",

495 
fõlds
[
fõld
].
ãxt2
, 
P©ã∫
);

497 (
NO
);

500 (Ë
	`ungëc
(
c
, 
ªfsfound
);

505 
	`cou¡ªfs
();

506 (
YES
);

507 
	}
}

512 
	$¥ogªss
(*
wh©
, 
cuºít
, 
max
)

514 
°¨t
;

515 
now
;

516 
msg
[
MSGLEN
 + 1];

517 
i
;

520 i‡(
£¨chcou¡
 == 0) {

521 
°¨t
 = 
	`time
(
NULL
);

523 i‡((
now
 = 
	`time
(
NULL
)Ë- 
°¨t
 >= 1)

525 i‡(
löemode
 =
NO
)

527 
	`move
(
MSGLINE
, 0);

528 
	`˛π€ﬁ
();

529 
	`add°r
(
wh©
);

530 
	`¢¥ötf
(
msg
, (msg), "%ld", 
cuºít
);

531 
	`move
(
MSGLINE
, (
COLS
 / 2Ë- (
	`°æí
(
msg
) / 2));

532 
	`add°r
(
msg
);

533 
	`¢¥ötf
(
msg
, (msg), "%ld", 
max
);

534 
	`move
(
MSGLINE
, 
COLS
 - 
	`°æí
(
msg
));

535 
	`add°r
(
msg
);

536 
	`ª‰esh
();

538 i‡(
vîbo£mode
 =
YES
)

540 
	`¢¥ötf
(
msg
, (msg), "> %†%ld o‡%ld", 
wh©
, 
cuºít
, 
max
);

543 
°¨t
 = 
now
;

544 i‡((
löemode
 =
NO
Ë&& (
öcur£s
 =
YES
))

546 
	`move
(
MSGLINE
, 0);

547 
i
 = ()
COLS
 * ()
cuºít
 / ()
max
;

549 
	`°™dout
();

550 ; 
i
 > 0; i--)

551 
	`addch
(
	`öch
());

552 
	`°™díd
();

553 
	`ª‰esh
();

556 i‡(
löemode
 =
NO
 || 
vîbo£mode
 =
YES
)

557 
	`po°msg
(
msg
);

559 ++
£¨chcou¡
;

560 
	}
}

565 
	$my≥º‹
(*
ãxt
)

567 
msg
[
MSGLEN
 + 1];

568 *
s
;

570 
s
 = "UnknownÉrror";

571 #ifde‡
HAVE_STRERROR


572 
s
 = 
	`°ªº‹
(
î∫o
);

574 i‡(
î∫o
 < 
sys_√º
) {

575 
s
 = 
sys_îæi°
[
î∫o
];

578 (Ë
	`¢¥ötf
(
msg
, (msg), "%s: %s", 
ãxt
, 
s
);

579 
	`po°msg
(
msg
);

580 
	}
}

586 
	$po°msg
(*
msg
)

588 i‡(
löemode
 =
YES
 || 
öcur£s
 =
NO
) {

589 (Ë
	`¥ötf
("%s\n", 
msg
);

590 
	`fÊush
(
°dout
);

593 
	`˛órmsg
();

594 
	`add°r
(
msg
);

595 
	`ª‰esh
();

597 (Ë
	`°∫˝y
(
œ°msg
, 
msg
, (lastmsg) - 1);

598 
	}
}

603 
	$˛órmsg
()

605 i‡(
löemode
 =
NO
) {

606 
	`move
(
MSGLINE
, 0);

607 
	`˛π€ﬁ
();

609 
	}
}

614 
	$˛órmsg2
()

616 i‡(
löemode
 =
NO
) {

617 
	`move
(
MSGLINE
 + 1, 0);

618 
	`˛π€ﬁ
();

620 
	}
}

625 
	$po°msg2
(*
msg
)

627 i‡(
löemode
 =
YES
) {

628 (Ë
	`¥ötf
("%s\n", 
msg
);

631 
	`˛órmsg2
();

632 
	`add°r
(
msg
);

633 
	`ª‰esh
();

635 
	}
}

639 
	$po°îr
(*
msg
, ...)

641 
va_li°
 
≠
;

642 
îrbuf
[
MSGLEN
];

644 
	`va_°¨t
(
≠
, 
msg
);

645 i‡(
löemode
 =
YES
 || 
öcur£s
 =
NO
)

647 (Ë
	`vÂrötf
(
°dîr
, 
msg
, 
≠
);

648 (Ë
	`Âutc
('\n', 
°dîr
);

650 
	`v¢¥ötf
(
îrbuf
, ”ºbuf), 
msg
, 
≠
);

651 
	`po°msg2
(
îrbuf
);

653 
	}
}

657 
	$po°Áèl
(c⁄° *
msg
, ...)

659 
va_li°
 
≠
;

660 
îrbuf
[
MSGLEN
];

662 
	`va_°¨t
(
≠
, 
msg
);

663 
	`v¢¥ötf
(
îrbuf
, ”ºbuf), 
msg
, 
≠
);

665 i‡(
öcur£s
 =
YES
) {

666 
	`exôcur£s
();

670 
	`Ârötf
(
°dîr
,"%s",
îrbuf
);

673 
	`myexô
(1);

674 
	}
}

679 
	$£eklöe
(
löe
)

681 
c
;

684 i‡(
ªfsfound
 =
NULL
) {

688 
	`ªwöd
(
ªfsfound
);

691 
√xéöe
 = 1;

692 
√xéöe
 < 
löe
 && (
c
 = 
	`gëc
(
ªfsfound
)Ë!
EOF
) {

693 i‡(
c
 == '\n') {

694 
√xéöe
++;

697 
	}
}

702 
	$og¢ames
(*
fûe
, **
subsy°em
, **
book
)

704 
buf
[
PATHLEN
 + 1];

705 *
s
, *
¶ash
;

707 *
subsy°em
 = *
book
 = "";

708 (Ë
	`°r˝y
(
buf
,
fûe
);

709 
s
 = 
buf
;

710 i‡(*
s
 == '/') {

711 ++
s
;

713 (
¶ash
 = 
	`°rchr
(
s
, '/')Ë!
NULL
) {

714 *
¶ash
 = '\0';

715 i‡(()
	`°æí
(
s
Ë>3 && 
	`°∫cmp
(
¶ash
 - 3, ".ss", 3) == 0) {

716 *
subsy°em
 = 
s
;

717 
s
 = 
¶ash
 + 1;

718 i‡((
¶ash
 = 
	`°rchr
(
s
, '/')Ë!
NULL
) {

719 *
book
 = 
s
;

720 *
¶ash
 = '\0';

724 
s
 = 
¶ash
 + 1;

726 
	}
}

731 
	$∑thcomp⁄íts
(*
∑th
, 
comp⁄íts
)

733 
i
;

734 *
s
;

736 
s
 = 
∑th
 + 
	`°æí
(path) - 1;

737 
i
 = 0; i < 
comp⁄íts
; ++i) {

738 
s
 > 
∑th
 && *--s != '/') {

742 i‡(
s
 > 
∑th
 && *s == '/') {

743 ++
s
;

745 (
s
);

746 
	}
}

750 
BOOL


751 
	$wrôîefsfound
()

753 i‡(
ªfsfound
 =
NULL
) {

754 i‡((
ªfsfound
 = 
	`myf›í
(
ãmp1
, "wb")Ë=
NULL
) {

755 
	`ˇ¬Ÿ›í
(
ãmp1
);

756 (
NO
);

759 (Ë
	`f˛o£
(
ªfsfound
);

760 i‡–(
ªfsfound
 = 
	`myf›í
(
ãmp1
, "wb")Ë=
NULL
) {

761 
	`po°msg
("CannotÑeopenÅemporary file");

762 (
NO
);

765 (
YES
);

766 
	}
}

	@edit.c

38 
	~"globÆ.h
"

39 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

40 
	~<ncur£s.h
>

42 
	~<cur£s.h
>

45 c⁄° 
	grcsid
[] = "$Id:Édit.c,v 1.7 2009/04/10 13:39:23 broeker Exp $";

50 
	$edôªf
(
i
)

52 
fûe
[
PATHLEN
 + 1];

53 
löíum
[
NUMLEN
 + 1];

56 i‡(
ªfsfound
 =
NULL
) {

60 
	`£eklöe
(
i
 + 
t›löe
);

63 i‡(
	`fsˇnf
(
ªfsfound
, "%" 
PATHLEN_STR
 "s%*s%" 
NUMLEN_STR
 "s", 
fûe
, 
löíum
) == 2) {

64 
	`edô
(
fûe
, 
löíum
);

66 
	`£eklöe
(
t›löe
);

67 
	}
}

72 
	$edôÆl
()

74 
fûe
[
PATHLEN
 + 1];

75 
löíum
[
NUMLEN
 + 1];

76 
c
;

79 i‡(
ªfsfound
 =
NULL
) {

83 
	`£eklöe
(1);

86 
	`fsˇnf
(
ªfsfound
, "%" 
PATHLEN_STR
 "s%*s%" 
NUMLEN_STR
 "s%*[^\n]", 
fûe
, 
löíum
) == 2) {

87 
	`edô
(
fûe
, 
löíum
);

88 i‡(
edôÆÕrom±
 =
YES
) {

89 
	`add°r
("Type ^DÅo stopÉditingállÜines, orány other characterÅo continue: ");

90 i‡((
c
 = 
	`mygëch
()Ë=
EOF
 || c =
	`˘æ
('D') || c == ctrl('Z')) {

95 
	`£eklöe
(
t›löe
);

96 
	}
}

101 
	$edô
(*
fûe
, *
löíum
)

103 
msg
[
MSGLEN
 + 1];

104 
∂u¢um
[
NUMLEN
 + 20];

105 *
s
;

107 
fûe
 = 
	`fûï©h
(file);

108 (Ë
	`¢¥ötf
(
msg
, (msg), "%†+%†%s", 
	`myba£«me
(
edô‹
), 
löíum
, 
fûe
);

109 
	`po°msg
(
msg
);

110 (Ë
	`¢¥ötf
(
∂u¢um
, ’lu¢um), 
löeÊag
, 
löíum
);

112 i‡(
	`°rcmp
(
s
 = 
	`myba£«me
(
edô‹
), "more") == 0 || strcmp(s, "page") == 0) {

116 (Ë
	`execuã
(
edô‹
,Édô‹, 
∂u¢um
, 
fûe
, "/dev/nuŒ", 
NULL
);

118 i‡(
löeÊaga·îfûe
) {

119 (Ë
	`execuã
(
edô‹
,Édô‹, 
fûe
, 
∂u¢um
, 
NULL
);

122 (Ë
	`execuã
(
edô‹
,Édô‹, 
∂u¢um
, 
fûe
, 
NULL
);

124 
	`˛ór
();

125 
	}
}

130 
	$fûï©h
(*
fûe
)

132 
∑th
[
PATHLEN
 + 1];

134 i‡(
¥ïíd∑th
 !
NULL
 && *
fûe
 != '/') {

135 (Ë
	`¢¥ötf
(
∑th
, ’©h), "%s/%s", 
¥ïíd∑th
, 
fûe
);

136 
fûe
 = 
∑th
;

138 (
fûe
);

139 
	}
}

	@egrep.c

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

114 
	~"globÆ.h
"

115 
	~<˘y≥.h
>

116 
	~<°dio.h
>

118 
	~<£tjmp.h
>

120 
	#√xtch
(Ë(*
öput
++)

	)

122 
	#MAXLIN
 350

	)

123 
	#MAXPOS
 4000

	)

124 
	#NCHARS
 256

	)

125 
	#NSTATES
 128

	)

126 
	#FINAL
 -1

	)

127 
	ggŸo‚
[
NSTATES
][
NCHARS
];

128 
	g°©e
[
NSTATES
];

129 
	gout
[
NSTATES
];

130 
	glöe
;

131 
	g«me
[
MAXLIN
];

132 
	gÀ·
[
MAXLIN
];

133 
	gright
[
MAXLIN
];

134 
	g∑ª¡
[
MAXLIN
];

135 
	gfﬁl
[
MAXLIN
];

136 
	gposôi⁄s
[
MAXPOS
];

137 
	gch¨s
[
MAXLIN
];

138 
	gnxços
;

139 
	gnxtch¨
;

140 
	gtmp°©
[
MAXLIN
];

141 
	göô°©
[
MAXLIN
];

142 
	gx°©e
;

143 
	gcou¡
;

144 
	gicou¡
;

145 *
	göput
;

146 
	g um
;

147 
	giÊag
;

148 
jmp_buf
 
	gív
;

149 *
	gmesßge
;

152 
cfﬁl
(
v
);

153 
cgŸo‚
();

154 
c°©e
(
v
);

155 
membî
(
symb
, 
£t
, 
t‹f
);

156 
nŸö
(
n
);

157 
sy√º‹
();

158 
ovîÊo
();

159 
add
(*
¨øy
, 
n
);

160 
fﬁlow
(
v
);

161 
u«ry
(
x
, 
d
);

162 
node
(
x
, 
l
, 
r
);

163 
c˛íãr
(
x
);

164 
íãr
(
x
);

166 
yyÀx
();

167 
yyîr‹
(*);

174 #i‚de‡
YYDEBUG


175 
	#YYDEBUG
 0

	)

179 #ifde‡
YYERROR_VERBOSE


180 #unde‡
YYERROR_VERBOSE


181 
	#YYERROR_VERBOSE
 1

	)

183 
	#YYERROR_VERBOSE
 0

	)

187 #i‚de‡
YYTOKEN_TABLE


188 
	#YYTOKEN_TABLE
 0

	)

193 #i‚de‡
YYTOKENTYPE


194 
	#YYTOKENTYPE


	)

197 
	eyytokíty≥
 {

198 
	mCHAR
 = 258,

199 
	mDOT
 = 259,

200 
	mCCL
 = 260,

201 
	mNCCL
 = 261,

202 
	mOR
 = 262,

203 
	mCAT
 = 263,

204 
	mSTAR
 = 264,

205 
	mPLUS
 = 265,

206 
	mQUEST
 = 266

210 
	#CHAR
 258

	)

211 
	#DOT
 259

	)

212 
	#CCL
 260

	)

213 
	#NCCL
 261

	)

214 
	#OR
 262

	)

215 
	#CAT
 263

	)

216 
	#STAR
 264

	)

217 
	#PLUS
 265

	)

218 
	#QUEST
 266

	)

223 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


224 
	tYYSTYPE
;

225 
	#YYSTYPE_IS_TRIVIAL
 1

	)

226 
	#yy°y≥
 
YYSTYPE


	)

227 
	#YYSTYPE_IS_DECLARED
 1

	)

241 #ifde‡
YYTYPE_UINT8


242 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

244 
	tyyty≥_uöt8
;

247 #ifde‡
YYTYPE_INT8


248 
YYTYPE_INT8
 
	tyyty≥_öt8
;

249 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

250 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

251 sig√d 
	tyyty≥_öt8
;

253 
	tyyty≥_öt8
;

256 #ifde‡
YYTYPE_UINT16


257 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

259 
	tyyty≥_uöt16
;

262 #ifde‡
YYTYPE_INT16


263 
YYTYPE_INT16
 
	tyyty≥_öt16
;

265 
	tyyty≥_öt16
;

268 #i‚de‡
YYSIZE_T


269 #ifde‡
__SIZE_TYPE__


270 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

271 #ñi‡
deföed
 
size_t


272 
	#YYSIZE_T
 
size_t


	)

273 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

274 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

275 
	~<°ddef.h
>

276 
	#YYSIZE_T
 
size_t


	)

278 
	#YYSIZE_T
 

	)

282 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

284 #i‚de‡
YY_


285 #i‡
YYENABLE_NLS


286 #i‡
ENABLE_NLS


287 
	~<liböé.h
>

288 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

291 #i‚de‡
YY_


292 
	#YY_
(
msgid
Ë
	)
msgid

297 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


298 
	#YYUSE
(
e
Ë((Ë”))

	)

300 
	#YYUSE
(
e
Ë

	)

304 #i‚de‡
löt


305 
	#YYID
(
n
Ë“)

	)

307 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

308 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

310 
	$YYID
 (
yyi
)

313 
	$YYID
 (
yyi
)

314 
yyi
;

317  
yyi
;

318 
	}
}

321 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


325 #ifde‡
YYSTACK_USE_ALLOCA


326 #i‡
YYSTACK_USE_ALLOCA


327 #ifde‡
__GNUC__


328 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

329 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


330 
	~<Æloˇ.h
>

331 #ñi‡
deföed
 
_AIX


332 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

333 #ñi‡
deföed
 
_MSC_VER


334 
	~<mÆloc.h
>

335 
	#Æloˇ
 
_Æloˇ


	)

337 
	#YYSTACK_ALLOC
 
Æloˇ


	)

338 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

339 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

340 
	~<°dlib.h
>

341 #i‚de‡
_STDLIB_H


342 
	#_STDLIB_H
 1

	)

349 #ifde‡
YYSTACK_ALLOC


351 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

352 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


357 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

360 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

361 
	#YYSTACK_FREE
 
YYFREE


	)

362 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


363 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

365 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

366 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

367 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

368 
	~<°dlib.h
>

369 #i‚de‡
_STDLIB_H


370 
	#_STDLIB_H
 1

	)

373 #i‚de‡
YYMALLOC


374 
	#YYMALLOC
 
mÆloc


	)

375 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

376 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

377 *
mÆloc
 (
YYSIZE_T
);

380 #i‚de‡
YYFREE


381 
	#YYFREE
 
‰ì


	)

382 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

383 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

384 
‰ì
 (*);

391 #i‡(! 
deföed
 
yyovîÊow
 \

392 && (! 
deföed
 
	g__˝lu•lus
 \

393 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

396 
	uyyÆloc


398 
yyty≥_öt16
 
	myyss_Æloc
;

399 
YYSTYPE
 
	myyvs_Æloc
;

403 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

407 
	#YYSTACK_BYTES
(
N
) \

408 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

409 + 
YYSTACK_GAP_MAXIMUM
)

	)

413 #i‚de‡
YYCOPY


414 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

415 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

416 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

418 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

421 
YYSIZE_T
 
yyi
; \

422 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

423 (
To
)[
yyi
] = (
From
)[yyi]; \

425 
	`YYID
 (0))

	)

434 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

437 
YYSIZE_T
 
yy√wbyãs
; \

438 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

439 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

440 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

441 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

443 
	`YYID
 (0))

	)

448 
	#YYFINAL
 6

	)

450 
	#YYLAST
 108

	)

453 
	#YYNTOKENS
 14

	)

455 
	#YYNNTS
 5

	)

457 
	#YYNRULES
 18

	)

459 
	#YYNSTATES
 25

	)

462 
	#YYUNDEFTOK
 2

	)

463 
	#YYMAXUTOK
 266

	)

465 
	#YYTRANSLATE
(
YYX
) \

466 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

469 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

500 #i‡
YYDEBUG


503 c⁄° 
yyty≥_uöt8
 
	gyy¥hs
[] =

510 c⁄° 
yyty≥_öt8
 
	gyyrhs
[] =

521 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

528 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


531 c⁄° *c⁄° 
	gyyäame
[] =

539 #ifde‡
YYPRINT


542 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

550 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

557 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

566 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

574 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

581 
	#YYPACT_NINF
 -5

	)

582 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

590 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

599 
	#YYTABLE_NINF
 -14

	)

600 c⁄° 
yyty≥_öt8
 
	gyyèbÀ
[] =

615 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

632 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

639 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

640 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

641 
	#YYEMPTY
 (-2)

	)

642 
	#YYEOF
 0

	)

644 
	#YYACCEPT
 
yyac˚±œb


	)

645 
	#YYABORT
 
yyab‹éab


	)

646 
	#YYERROR
 
yyîr‹œb


	)

653 
	#YYFAIL
 
yyîæab


	)

655 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

657 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

659 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

661 
yych¨
 = (
Tokí
); \

662 
yylvÆ
 = (
VÆue
); \

663 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

664 
	`YYPOPSTACK
 (1); \

665 
yybackup
; \

669 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

670 
YYERROR
; \

672 
	`YYID
 (0))

	)

675 
	#YYTERROR
 1

	)

676 
	#YYERRCODE
 256

	)

683 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

684 #i‚de‡
YYLLOC_DEFAULT


685 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

687 i‡(
	`YYID
 (
N
)) \

689 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

690 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

691 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

692 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

696 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

697 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

698 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

699 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

701 
	`YYID
 (0))

	)

709 #i‚de‡
YY_LOCATION_PRINT


710 #i‡
YYLTYPE_IS_TRIVIAL


711 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

712 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

713 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

714 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

716 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

723 #ifde‡
YYLEX_PARAM


724 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

726 
	#YYLEX
 
	`yyÀx
 ()

	)

730 #i‡
YYDEBUG


732 #i‚de‡
YYFPRINTF


733 
	~<°dio.h
>

734 
	#YYFPRINTF
 
Ârötf


	)

737 
	#YYDPRINTF
(
Args
) \

739 i‡(
yydebug
) \

740 
YYFPRINTF
 
Args
; \

741 } 
	`YYID
 (0))

	)

743 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

745 i‡(
yydebug
) \

747 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

748 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

749 
Ty≥
, 
VÆue
); \

750 
	`YYFPRINTF
 (
°dîr
, "\n"); \

752 } 
	`YYID
 (0))

	)

760 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

761 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

763 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

766 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

767 
FILE
 *
yyouçut
;

768 
yyty≥
;

769 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

772 i‡(!
yyvÆuï
)

774 #ifde‡
YYPRINT


775 i‡(
yyty≥
 < 
YYNTOKENS
)

776 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

778 
	`YYUSE
 (
yyouçut
);

780 
yyty≥
)

785 
	}
}

792 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

793 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

795 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

798 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

799 
FILE
 *
yyouçut
;

800 
yyty≥
;

801 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

804 i‡(
yyty≥
 < 
YYNTOKENS
)

805 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

807 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

809 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

810 
	`YYFPRINTF
 (
yyouçut
, ")");

811 
	}
}

818 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

819 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

821 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

824 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

825 
yyty≥_öt16
 *
yybŸtom
;

826 
yyty≥_öt16
 *
yyt›
;

829 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

830 ; 
yybŸtom
 <
yyt›
; yybottom++)

832 
yybŸ
 = *
yybŸtom
;

833 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

835 
	`YYFPRINTF
 (
°dîr
, "\n");

836 
	}
}

838 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

840 i‡(
yydebug
) \

841 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

842 } 
	`YYID
 (0))

	)

849 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

850 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

852 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

855 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

856 
YYSTYPE
 *
yyv•
;

857 
yyruÀ
;

860 
yyƒhs
 = 
yyr2
[
yyruÀ
];

861 
yyi
;

862 
yy o
 = 
yyæöe
[
yyruÀ
];

863 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

864 
yyruÀ
 - 1, 
yy o
);

866 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

868 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

869 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

870 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

872 
	`YYFPRINTF
 (
°dîr
, "\n");

874 
	}
}

876 
	#YY_REDUCE_PRINT
(
RuÀ
) \

878 i‡(
yydebug
) \

879 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

880 } 
	`YYID
 (0))

	)

884 
	gyydebug
;

886 
	#YYDPRINTF
(
Args
)

	)

887 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

888 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

889 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

894 #i‚def 
YYINITDEPTH


895 
	#YYINITDEPTH
 200

	)

905 #i‚de‡
YYMAXDEPTH


906 
	#YYMAXDEPTH
 10000

	)

911 #i‡
YYERROR_VERBOSE


913 #i‚de‡
yy°æí


914 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


915 
	#yy°æí
 
°æí


	)

918 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

919 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

920 
YYSIZE_T


921 
	$yy°æí
 (c⁄° *
yy°r
)

923 
YYSIZE_T


924 
	$yy°æí
 (
yy°r
)

925 c⁄° *
yy°r
;

928 
YYSIZE_T
 
yyÀn
;

929 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

931  
yyÀn
;

932 
	}
}

936 #i‚de‡
yy°p˝y


937 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


938 
	#yy°p˝y
 
°p˝y


	)

942 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

943 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

945 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

948 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

949 *
yyde°
;

950 c⁄° *
yy§c
;

953 *
yyd
 = 
yyde°
;

954 c⁄° *
yys
 = 
yy§c
;

956 (*
yyd
++ = *
yys
++) != '\0')

959  
yyd
 - 1;

960 
	}
}

964 #i‚de‡
yyäamîr


972 
YYSIZE_T


973 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

975 i‡(*
yy°r
 == '"')

977 
YYSIZE_T
 
yyn
 = 0;

978 c⁄° *
yyp
 = 
yy°r
;

981 *++
yyp
)

985 
do_nŸ_°rù_quŸes
;

988 i‡(*++
yyp
 != '\\')

989 
do_nŸ_°rù_quŸes
;

992 i‡(
yyªs
)

993 
yyªs
[
yyn
] = *
yyp
;

994 
yyn
++;

998 i‡(
yyªs
)

999 
yyªs
[
yyn
] = '\0';

1000  
yyn
;

1002 
do_nŸ_°rù_quŸes
: ;

1005 i‡(! 
yyªs
)

1006  
	`yy°æí
 (
yy°r
);

1008  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1009 
	}
}

1019 
YYSIZE_T


1020 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

1022 
yyn
 = 
yy∑˘
[
yy°©e
];

1024 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

1028 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

1029 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

1030 
YYSIZE_T
 
yysize
 = 
yysize0
;

1031 
YYSIZE_T
 
yysize1
;

1032 
yysize_ovîÊow
 = 0;

1033 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1034 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1035 
yyx
;

1040 
	`YY_
("syntaxÉrror, unexpected %s");

1041 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

1042 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

1043 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

1044 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

1046 *
yyfmt
;

1047 c⁄° *
yyf
;

1048 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

1049 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

1050 c⁄° 
yy‹
[] = " or %s";

1051 
yyf‹m©
[ 
yyu√x≥˘ed


1052 +  
yyex≥˘ög
 - 1

1053 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

1054 * ( 
yy‹
 - 1))];

1055 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

1059 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1062 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1063 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1064 
yycou¡
 = 1;

1066 
yy¨g
[0] = 
yyäame
[
yyty≥
];

1067 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

1069 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1070 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1072 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1074 
yycou¡
 = 1;

1075 
yysize
 = 
yysize0
;

1076 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

1079 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1080 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1081 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1082 
yysize
 = 
yysize1
;

1083 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1084 
yy¥efix
 = 
yy‹
;

1087 
yyf
 = 
	`YY_
(
yyf‹m©
);

1088 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1089 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1090 
yysize
 = 
yysize1
;

1092 i‡(
yysize_ovîÊow
)

1093  
YYSIZE_MAXIMUM
;

1095 i‡(
yyªsu…
)

1100 *
yyp
 = 
yyªsu…
;

1101 
yyi
 = 0;

1102 (*
yyp
 = *
yyf
) != '\0')

1104 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1106 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1107 
yyf
 += 2;

1111 
yyp
++;

1112 
yyf
++;

1116  
yysize
;

1118 
	}
}

1127 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1128 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1130 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1133 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1134 c⁄° *
yymsg
;

1135 
yyty≥
;

1136 
YYSTYPE
 *
yyvÆuï
;

1139 
	`YYUSE
 (
yyvÆuï
);

1141 i‡(!
yymsg
)

1142 
yymsg
 = "Deleting";

1143 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1145 
yyty≥
)

1151 
	}
}

1154 #ifde‡
YYPARSE_PARAM


1155 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1156 
yy∑r£
 (*
YYPARSE_PARAM
);

1158 
yy∑r£
 ();

1161 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1162 
yy∑r£
 ();

1164 
yy∑r£
 ();

1170 
	gyych¨
;

1173 
YYSTYPE
 
	gyylvÆ
;

1176 
	gyy√ºs
;

1184 #ifde‡
YYPARSE_PARAM


1185 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1186 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1188 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1191 
	$yy∑r£
 (
YYPARSE_PARAM
)

1192 *
YYPARSE_PARAM
;

1195 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1196 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1198 
	$yy∑r£
 ()

1201 
	$yy∑r£
 ()

1208 
yy°©e
;

1210 
yyîr°©us
;

1220 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1221 
yyty≥_öt16
 *
yyss
;

1222 
yyty≥_öt16
 *
yys•
;

1225 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1226 
YYSTYPE
 *
yyvs
;

1227 
YYSTYPE
 *
yyv•
;

1229 
YYSIZE_T
 
yy°acksize
;

1231 
yyn
;

1232 
yyªsu…
;

1234 
yytokí
;

1237 
YYSTYPE
 
yyvÆ
;

1239 #i‡
YYERROR_VERBOSE


1241 
yymsgbuf
[128];

1242 *
yymsg
 = 
yymsgbuf
;

1243 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1246 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1250 
yyÀn
 = 0;

1252 
yytokí
 = 0;

1253 
yyss
 = 
yysß
;

1254 
yyvs
 = 
yyvß
;

1255 
yy°acksize
 = 
YYINITDEPTH
;

1257 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1259 
yy°©e
 = 0;

1260 
yyîr°©us
 = 0;

1261 
yy√ºs
 = 0;

1262 
yych¨
 = 
YYEMPTY
;

1268 
yys•
 = 
yyss
;

1269 
yyv•
 = 
yyvs
;

1271 
yy£t°©e
;

1276 
yy√w°©e
:

1279 
yys•
++;

1281 
yy£t°©e
:

1282 *
yys•
 = 
yy°©e
;

1284 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1287 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1289 #ifde‡
yyovîÊow


1294 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1295 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1301 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1302 &
yyss1
, 
yysize
 *  (*
yys•
),

1303 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1304 &
yy°acksize
);

1306 
yyss
 = 
yyss1
;

1307 
yyvs
 = 
yyvs1
;

1310 #i‚de‡
YYSTACK_RELOCATE


1311 
yyexhau°edœb
;

1314 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1315 
yyexhau°edœb
;

1316 
yy°acksize
 *= 2;

1317 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1318 
yy°acksize
 = 
YYMAXDEPTH
;

1321 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1322 
yyÆloc
 *
yy±r
 =

1323 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1324 i‡(! 
yy±r
)

1325 
yyexhau°edœb
;

1326 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1327 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1328 #unde‡
YYSTACK_RELOCATE


1329 i‡(
yyss1
 !
yysß
)

1330 
	`YYSTACK_FREE
 (
yyss1
);

1335 
yys•
 = 
yyss
 + 
yysize
 - 1;

1336 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1338 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1339 (Ë
yy°acksize
));

1341 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1342 
YYABORT
;

1345 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1347 i‡(
yy°©e
 =
YYFINAL
)

1348 
YYACCEPT
;

1350 
yybackup
;

1355 
yybackup
:

1361 
yyn
 = 
yy∑˘
[
yy°©e
];

1362 i‡(
yyn
 =
YYPACT_NINF
)

1363 
yydeÁu…
;

1368 i‡(
yych¨
 =
YYEMPTY
)

1370 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1371 
yych¨
 = 
YYLEX
;

1374 i‡(
yych¨
 <
YYEOF
)

1376 
yych¨
 = 
yytokí
 = 
YYEOF
;

1377 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1381 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1382 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1387 
yyn
 +
yytokí
;

1388 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1389 
yydeÁu…
;

1390 
yyn
 = 
yyèbÀ
[yyn];

1391 i‡(
yyn
 <= 0)

1393 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1394 
yyîæab
;

1395 
yyn
 = -yyn;

1396 
yyªdu˚
;

1401 i‡(
yyîr°©us
)

1402 
yyîr°©us
--;

1405 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1408 
yych¨
 = 
YYEMPTY
;

1410 
yy°©e
 = 
yyn
;

1411 *++
yyv•
 = 
yylvÆ
;

1413 
yy√w°©e
;

1419 
yydeÁu…
:

1420 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1421 i‡(
yyn
 == 0)

1422 
yyîæab
;

1423 
yyªdu˚
;

1429 
yyªdu˚
:

1431 
yyÀn
 = 
yyr2
[
yyn
];

1441 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1444 
	`YY_REDUCE_PRINT
 (
yyn
);

1445 
yyn
)

1451 { 
	`u«ry
(
FINAL
, (
yyv•
[(1) - (1)]));

1452 
löe
--;

1460 { (
yyvÆ
Ë
	`node
(
CAT
, (
yyv•
[(1) - (2)]), (yyvsp[(2) - (2)])); }

1467 { (
yyvÆ
Ë
	`node
(
CAT
, (
yyv•
[(2) - (4)]), (yyvsp[(3) - (4)])); }

1474 { (
yyvÆ
Ë
	`node
(
CAT
, (
yyv•
[(2) - (3)]), (yyvsp[(3) - (3)])); }

1481 { (
yyvÆ
Ë
	`node
(
CAT
, (
yyv•
[(1) - (3)]), (yyvsp[(2) - (3)])); }

1488 { (
yyvÆ
Ë
	`íãr
(
DOT
);

1489 (
yyvÆ
Ë
	`u«ry
(
STAR
, (yyval)); }

1496 { (
yyvÆ
Ë
	`íãr
((
yyv•
[(1) - (1)])); }

1503 { (
yyvÆ
Ë
	`íãr
(
DOT
); }

1510 { (
yyvÆ
Ë
	`c˛íãr
(
CCL
); }

1517 { (
yyvÆ
Ë
	`c˛íãr
(
NCCL
); }

1524 { (
yyvÆ
Ë
	`node
(
OR
, (
yyv•
[(1) - (3)]), (yyvsp[(3) - (3)])); }

1531 { (
yyvÆ
Ë
	`node
(
CAT
, (
yyv•
[(1) - (2)]), (yyvsp[(2) - (2)])); }

1538 { (
yyvÆ
Ë
	`u«ry
(
STAR
, (
yyv•
[(1) - (2)])); }

1545 { (
yyvÆ
Ë
	`u«ry
(
PLUS
, (
yyv•
[(1) - (2)])); }

1552 { (
yyvÆ
Ë
	`u«ry
(
QUEST
, (
yyv•
[(1) - (2)])); }

1559 { (
yyvÆ
Ë(
yyv•
[(2) - (3)]); }

1568 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1570 
	`YYPOPSTACK
 (
yyÀn
);

1571 
yyÀn
 = 0;

1572 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1574 *++
yyv•
 = 
yyvÆ
;

1580 
yyn
 = 
yyr1
[yyn];

1582 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1583 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1584 
yy°©e
 = 
yyèbÀ
[yystate];

1586 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1588 
yy√w°©e
;

1594 
yyîæab
:

1596 i‡(!
yyîr°©us
)

1598 ++
yy√ºs
;

1599 #i‡! 
YYERROR_VERBOSE


1600 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1603 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

1604 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

1606 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

1607 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

1608 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1609 i‡(
yymsg
 !
yymsgbuf
)

1610 
	`YYSTACK_FREE
 (
yymsg
);

1611 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

1612 i‡(
yymsg
)

1613 
yymsg_Æloc
 = 
yyÆloc
;

1616 
yymsg
 = 
yymsgbuf
;

1617 
yymsg_Æloc
 =  
yymsgbuf
;

1621 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

1623 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

1624 
	`yyîr‹
 (
yymsg
);

1628 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1629 i‡(
yysize
 != 0)

1630 
yyexhau°edœb
;

1638 i‡(
yyîr°©us
 == 3)

1643 i‡(
yych¨
 <
YYEOF
)

1646 i‡(
yych¨
 =
YYEOF
)

1647 
YYABORT
;

1651 
	`yyde°ru˘
 ("Error: discarding",

1652 
yytokí
, &
yylvÆ
);

1653 
yych¨
 = 
YYEMPTY
;

1659 
yyîæab1
;

1665 
yyîr‹œb
:

1671 
yyîr‹œb
;

1675 
	`YYPOPSTACK
 (
yyÀn
);

1676 
yyÀn
 = 0;

1677 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1678 
yy°©e
 = *
yys•
;

1679 
yyîæab1
;

1685 
yyîæab1
:

1686 
yyîr°©us
 = 3;

1690 
yyn
 = 
yy∑˘
[
yy°©e
];

1691 i‡(
yyn
 !
YYPACT_NINF
)

1693 
yyn
 +
YYTERROR
;

1694 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1696 
yyn
 = 
yyèbÀ
[yyn];

1697 i‡(0 < 
yyn
)

1703 i‡(
yys•
 =
yyss
)

1704 
YYABORT
;

1707 
	`yyde°ru˘
 ("Error:Öopping",

1708 
yy°os
[
yy°©e
], 
yyv•
);

1709 
	`YYPOPSTACK
 (1);

1710 
yy°©e
 = *
yys•
;

1711 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1714 *++
yyv•
 = 
yylvÆ
;

1718 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1720 
yy°©e
 = 
yyn
;

1721 
yy√w°©e
;

1727 
yyac˚±œb
:

1728 
yyªsu…
 = 0;

1729 
yyªtu∫
;

1734 
yyab‹éab
:

1735 
yyªsu…
 = 1;

1736 
yyªtu∫
;

1738 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


1742 
yyexhau°edœb
:

1743 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

1744 
yyªsu…
 = 2;

1748 
yyªtu∫
:

1749 i‡(
yych¨
 !
YYEMPTY
)

1750 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1751 
yytokí
, &
yylvÆ
);

1754 
	`YYPOPSTACK
 (
yyÀn
);

1755 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1756 
yys•
 !
yyss
)

1758 
	`yyde°ru˘
 ("Cleanup:Öopping",

1759 
yy°os
[*
yys•
], 
yyv•
);

1760 
	`YYPOPSTACK
 (1);

1762 #i‚de‡
yyovîÊow


1763 i‡(
yyss
 !
yysß
)

1764 
	`YYSTACK_FREE
 (
yyss
);

1766 #i‡
YYERROR_VERBOSE


1767 i‡(
yymsg
 !
yymsgbuf
)

1768 
	`YYSTACK_FREE
 (
yymsg
);

1771  
	`YYID
 (
yyªsu…
);

1772 
	}
}

1780 
	$yyîr‹
(*
s
)

1782 
mesßge
 = 
s
;

1783 
	`l⁄gjmp
(
ív
, 1);

1785 
	}
}

1788 
	$yyÀx
()

1790 
c˛˙t
, 
x
;

1791 
c
, 
d
;

1793 
c
 = 
	`√xtch
()) {

1795  (
OR
);

1797  (
STAR
);

1799  (
PLUS
);

1801  (
QUEST
);

1803  (
c
);

1805  (
c
);

1807  (
DOT
);

1811  (
OR
);

1813 
x
 = 
CCL
;

1814 
c˛˙t
 = 0;

1815 
cou¡
 = 
nxtch¨
++;

1816 i‡((
c
 = 
	`√xtch
()) == '^') {

1817 
x
 = 
NCCL
;

1818 
c
 = 
	`√xtch
();

1821 i‡(
c
 == '\0')

1822 
	`sy√º‹
();

1823 i‡(
c
 == '-'

1824 && 
c˛˙t
 > 0

1825 && 
ch¨s
[
nxtch¨
-1] != 0) {

1826 i‡((
d
 = 
	`√xtch
()) != 0) {

1827 
c
 = 
ch¨s
[
nxtch¨
-1];

1828 ()
c
 < ()
d
) {

1829 i‡(
nxtch¨
 >
MAXLIN
)

1830 
	`ovîÊo
();

1831 
ch¨s
[
nxtch¨
++] = ++
c
;

1832 
c˛˙t
++;

1837 i‡(
nxtch¨
 >
MAXLIN
)

1838 
	`ovîÊo
();

1839 
ch¨s
[
nxtch¨
++] = 
c
;

1840 
c˛˙t
++;

1841 } (
c
 = 
	`√xtch
()) != ']');

1842 
ch¨s
[
cou¡
] = 
c˛˙t
;

1843  (
x
);

1845 i‡((
c
 = 
	`√xtch
()) == '\0')

1846 
	`sy√º‹
();

1850 
c
 = '\n';

1853 
yylvÆ
 = 
c
;

1854  (
CHAR
);

1856 
	}
}

1859 
	$sy√º‹
()

1861 
	`yyîr‹
("SyntaxÉrror");

1862 
	}
}

1865 
	$íãr
(
x
)

1867 if(
löe
 >
MAXLIN
)

1868 
	`ovîÊo
();

1869 
«me
[
löe
] = 
x
;

1870 
À·
[
löe
] = 0;

1871 
right
[
löe
] = 0;

1872 (
löe
++);

1873 
	}
}

1876 
	$c˛íãr
(
x
)

1878 
löno
;

1880 
löno
 = 
	`íãr
(
x
);

1881 
right
[
löno
] = 
cou¡
;

1882  (
löno
);

1883 
	}
}

1886 
	$node
(
x
, 
l
, 
r
)

1888 if(
löe
 >
MAXLIN
)

1889 
	`ovîÊo
();

1890 
«me
[
löe
] = 
x
;

1891 
À·
[
löe
] = 
l
;

1892 
right
[
löe
] = 
r
;

1893 
∑ª¡
[
l
] = 
löe
;

1894 
∑ª¡
[
r
] = 
löe
;

1895 (
löe
++);

1896 
	}
}

1899 
	$u«ry
(
x
, 
d
)

1901 if(
löe
 >
MAXLIN
)

1902 
	`ovîÊo
();

1903 
«me
[
löe
] = 
x
;

1904 
À·
[
löe
] = 
d
;

1905 
right
[
löe
] = 0;

1906 
∑ª¡
[
d
] = 
löe
;

1907 (
löe
++);

1908 
	}
}

1911 
	$ovîÊo
()

1913 
	`yyîr‹
("internalÅable overflow");

1914 
	}
}

1917 
	$cfﬁl
(
v
)

1919 
i
;

1921 i‡(
À·
[
v
] == 0) {

1922 
cou¡
 = 0;

1923 
i
 = 1; i <
löe
; i++)

1924 
tmp°©
[
i
] = 0;

1925 
	`fﬁlow
(
v
);

1926 
	`add
(
fﬁl
, 
v
);

1927 } i‡(
right
[
v
] == 0)

1928 
	`cfﬁl
(
À·
[
v
]);

1930 
	`cfﬁl
(
À·
[
v
]);

1931 
	`cfﬁl
(
right
[
v
]);

1933 
	}
}

1936 
	$cgŸo‚
()

1938 
i
, 
n
, 
s
;

1939 
c
, 
k
;

1940 
symbﬁ
[
NCHARS
];

1941 
j
, 
l
, 
pc
, 
pos
;

1942 
nc
;

1943 
cuΩos
;

1944 
num
, 
numbî
, 
√wpos
;

1946 
cou¡
 = 0;

1947 
n
=3;Ç<=
löe
;Ç++)

1948 
tmp°©
[
n
] = 0;

1949 i‡(
	`c°©e
(
löe
-1)==0) {

1950 
tmp°©
[
löe
] = 1;

1951 
cou¡
++;

1952 
out
[0] = 1;

1954 
n
=3;Ç<=
löe
;Ç++)

1955 
öô°©
[
n
] = 
tmp°©
[n];

1956 
cou¡
--;

1957 
icou¡
 = 
cou¡
;

1958 
tmp°©
[1] = 0;

1959 
	`add
(
°©e
, 0);

1960 
n
 = 0;

1961 
s
 = 0; s <
n
; s++) {

1962 i‡(
out
[
s
] == 1)

1964 
i
 = 0; i < 
NCHARS
; i++)

1965 
symbﬁ
[
i
] = 0;

1966 
num
 = 
posôi⁄s
[
°©e
[
s
]];

1967 
cou¡
 = 
icou¡
;

1968 
i
 = 3; i <
löe
; i++)

1969 
tmp°©
[
i
] = 
öô°©
[i];

1970 
pos
 = 
°©e
[
s
] + 1;

1971 
i
 = 0; i < 
num
; i++) {

1972 
cuΩos
 = 
posôi⁄s
[
pos
];

1973 i‡((
c
 = 
«me
[
cuΩos
]) >= 0) {

1974 i‡(
c
 < 
NCHARS
) {

1975 
symbﬁ
[
c
] = 1;

1976 } i‡(
c
 =
DOT
) {

1977 
k
 = 0; k < 
NCHARS
; k++)

1978 i‡(
k
 != '\n')

1979 
symbﬁ
[
k
] = 1;

1980 } i‡(
c
 =
CCL
) {

1981 
nc
 = 
ch¨s
[
right
[
cuΩos
]];

1982 
pc
 = 
right
[
cuΩos
] + 1;

1983 
j
 = 0; j < 
nc
; j++)

1984 
symbﬁ
[()(
ch¨s
[
pc
++])] = 1;

1985 } i‡(
c
 =
NCCL
) {

1986 
nc
 = 
ch¨s
[
right
[
cuΩos
]];

1987 
j
 = 0; j < 
NCHARS
; j++) {

1988 
pc
 = 
right
[
cuΩos
] + 1;

1989 
l
 = 0;Ü < 
nc
;Ü++)

1990 i‡(
j
==()(
ch¨s
[
pc
++]))

1991 
c⁄t
;

1992 i‡(
j
 != '\n')

1993 
symbﬁ
[
j
] = 1;

1994 
c⁄t
:

1999 
pos
++;

2001 
c
=0; c<
NCHARS
; c++) {

2002 i‡(
symbﬁ
[
c
] == 1) {

2004 
cou¡
 = 
icou¡
;

2005 
i
=3; i <
löe
; i++)

2006 
tmp°©
[
i
] = 
öô°©
[i];

2007 
pos
 = 
°©e
[
s
] + 1;

2008 
i
=0; i<
num
; i++) {

2009 
cuΩos
 = 
posôi⁄s
[
pos
];

2010 i‡((
k
 = 
«me
[
cuΩos
]) >= 0)

2011 i‡((
k
 =
c
)

2012 || (
k
 =
DOT
)

2013 || (
k
 =
CCL
 && 
	`membî
(
c
, 
right
[
cuΩos
], 1))

2014 || (
k
 =
NCCL
 && 
	`membî
(
c
, 
right
[
cuΩos
], 0))

2016 
numbî
 = 
posôi⁄s
[
fﬁl
[
cuΩos
]];

2017 
√wpos
 = 
fﬁl
[
cuΩos
] + 1;

2018 
j
 = 0; j < 
numbî
; j++) {

2019 i‡(
tmp°©
[
posôi⁄s
[
√wpos
]] != 1) {

2020 
tmp°©
[
posôi⁄s
[
√wpos
]] = 1;

2021 
cou¡
++;

2023 
√wpos
++;

2026 
pos
++;

2028 i‡(
	`nŸö
(
n
)) {

2029 i‡(
n
 >
NSTATES
)

2030 
	`ovîÊo
();

2031 
	`add
(
°©e
, ++
n
);

2032 i‡(
tmp°©
[
löe
] == 1)

2033 
out
[
n
] = 1;

2034 
gŸo‚
[
s
][
c
] = 
n
;

2036 
gŸo‚
[
s
][
c
] = 
x°©e
;

2041 
	}
}

2044 
	$c°©e
(
v
)

2046 
b
;

2047 i‡(
À·
[
v
] == 0) {

2048 i‡(
tmp°©
[
v
] != 1) {

2049 
tmp°©
[
v
] = 1;

2050 
cou¡
++;

2054 i‡(
right
[
v
] == 0) {

2055 i‡(
	`c°©e
(
À·
[
v
]) == 0)  (0);

2056 i‡(
«me
[
v
] =
PLUS
)  (1);

2059 i‡(
«me
[
v
] =
CAT
) {

2060 i‡(
	`c°©e
(
À·
[
v
]Ë=0 && c°©e(
right
[v]) == 0)  (0);

2064 
b
 = 
	`c°©e
(
right
[
v
]);

2065 i‡(
	`c°©e
(
À·
[
v
]Ë=0 || 
b
 == 0)  (0);

2068 
	}
}

2071 
	$membî
(
symb
, 
£t
, 
t‹f
)

2073 
i
, 
num
, 
pos
;

2075 
num
 = 
ch¨s
[
£t
];

2076 
pos
 = 
£t
 + 1;

2077 
i
 = 0; i < 
num
; i++)

2078 i‡(
symb
 =()(
ch¨s
[
pos
++]))

2079  (
t‹f
);

2080  (!
t‹f
);

2081 
	}
}

2084 
	$nŸö
(
n
)

2086 
i
, 
j
, 
pos
;

2087 
i
=0; i<=
n
; i++) {

2088 i‡(
posôi⁄s
[
°©e
[
i
]] =
cou¡
) {

2089 
pos
 = 
°©e
[
i
] + 1;

2090 
j
=0; j < 
cou¡
; j++)

2091 i‡(
tmp°©
[
posôi⁄s
[
pos
++]] !1Ë
nxt
;

2092 
x°©e
 = 
i
;

2095 
nxt
: ;

2098 
	}
}

2101 
	$add
(*
¨øy
, 
n
)

2103 
i
;

2105 i‡(
nxços
 + 
cou¡
 > 
MAXPOS
)

2106 
	`ovîÊo
();

2107 
¨øy
[
n
] = 
nxços
;

2108 
posôi⁄s
[
nxços
++] = 
cou¡
;

2109 
i
=3; i <
löe
; i++) {

2110 i‡(
tmp°©
[
i
] == 1) {

2111 
posôi⁄s
[
nxços
++] = 
i
;

2114 
	}
}

2117 
	$fﬁlow
(
v
)

2119 
p
;

2121 i‡(
v
 =
löe
)

2123 
p
 = 
∑ª¡
[
v
];

2124 
«me
[
p
]) {

2125 
STAR
:

2126 
PLUS
: 
	`c°©e
(
v
);

2127 
	`fﬁlow
(
p
);

2130 
OR
:

2131 
QUEST
: 
	`fﬁlow
(
p
);

2134 
CAT
:

2135 i‡(
v
 =
À·
[
p
]) {

2136 i‡(
	`c°©e
(
right
[
p
]) == 0) {

2137 
	`fﬁlow
(
p
);

2141 
	`fﬁlow
(
p
);

2143 
FINAL
:

2144 i‡(
tmp°©
[
löe
] != 1) {

2145 
tmp°©
[
löe
] = 1;

2146 
cou¡
++;

2150 
	}
}

2153 
	$egªpöô
(*
egªµ©
)

2156 
	`mem£t
(
gŸo‚
, 0, (gotofn));

2157 
	`mem£t
(
°©e
, 0, (state));

2158 
	`mem£t
(
out
, 0, (out));

2159 
löe
 = 1;

2160 
	`mem£t
(
«me
, 0, (name));

2161 
	`mem£t
(
À·
, 0, (left));

2162 
	`mem£t
(
right
, 0, (right));

2163 
	`mem£t
(
∑ª¡
, 0, (parent));

2164 
	`mem£t
(
fﬁl
, 0, (foll));

2165 
	`mem£t
(
posôi⁄s
, 0, (positions));

2166 
	`mem£t
(
ch¨s
, 0, (chars));

2167 
nxços
 = 0;

2168 
nxtch¨
 = 0;

2169 
	`mem£t
(
tmp°©
, 0, (tmpstat));

2170 
	`mem£t
(
öô°©
, 0, (initstat));

2171 
x°©e
 = 0;

2172 
cou¡
 = 0;

2173 
icou¡
 = 0;

2174 
öput
 = 
egªµ©
;

2175 
mesßge
 = 
NULL
;

2176 i‡(
	`£tjmp
(
ív
) == 0) {

2177 
	`yy∑r£
();

2178 
	`cfﬁl
(
löe
-1);

2179 
	`cgŸo‚
();

2181 (
mesßge
);

2182 
	}
}

2185 
	$egªp
(*
fûe
, 
FILE
 *
ouçut
, *
f‹m©
)

2187 *
p
;

2188 
c°©
;

2189 
ccou¡
;

2190 
buf
[2*
BUFSIZ
];

2191 *
∆p
;

2192 
i°©
;

2193 
ö_löe
;

2194 
FILE
 *
Âå
;

2196 i‡((
Âå
 = 
	`myf›í
(
fûe
, "r")Ë=
NULL
)

2199 
ccou¡
 = 0;

2200 
 um
 = 1;

2201 
ö_löe
 = 0;

2202 
p
 = 
buf
;

2203 
∆p
 = 
p
;

2204 i‡((
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
)) <= 0)

2205 
d⁄e
;

2206 
ö_löe
 = 1;

2207 
i°©
 = 
c°©
 = (Ë
gŸo‚
[0]['\n'];

2208 i‡(
out
[
c°©
])

2209 
found
;

2211 i‡(!
iÊag
)

2212 
c°©
 = (Ë
gŸo‚
[c°©][()*
p
&0377];

2215 
c°©
 = (Ë
gŸo‚
[c°©][
	`tﬁowî
(()*
p
&0377)];

2217 i‡(
out
[
c°©
]) {

2218 
found
:

2220 i‡(*
p
++ == '\n') {

2221 
ö_löe
 = 0;

2222 
suc˚ed
:

2223 
	`Ârötf
(
ouçut
, 
f‹m©
, 
fûe
, 
 um
);

2224 i‡(
p
 <
∆p
) {

2225 
∆p
 < &
buf
[2*
BUFSIZ
])

2226 
	`putc
(*
∆p
++, 
ouçut
);

2227 
∆p
 = 
buf
;

2229 
∆p
 < 
p
)

2230 
	`putc
(*
∆p
++, 
ouçut
);

2231 
 um
++;

2232 
∆p
 = 
p
;

2233 i‡((
out
[(
c°©
=
i°©
)]) == 0)

2234 
brk2
;

2236 
cfound
:

2237 i‡(--
ccou¡
 <= 0) {

2238 i‡(
p
 <&
buf
[
BUFSIZ
]) {

2239 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

2240 } i‡(
p
 =&
buf
[2*
BUFSIZ
]) {

2241 
p
 = 
buf
;

2242 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

2244 
ccou¡
 = 
	`‰ód
(
p
, (), &
buf
[2*
BUFSIZ
] -Ö,

2245 
Âå
);

2247 i‡(
ccou¡
 <= 0) {

2248 i‡(
ö_löe
) {

2249 
ö_löe
 = 0;

2250 
suc˚ed
;

2252 
d⁄e
;

2255 
ö_löe
 = 1;

2259 i‡(*
p
++ == '\n') {

2260 
ö_löe
 = 0;

2261 
 um
++;

2262 
∆p
 = 
p
;

2263 i‡(
out
[(
c°©
=
i°©
)])

2264 
cfound
;

2266 
brk2
:

2267 i‡(--
ccou¡
 <= 0) {

2268 i‡(
p
 <&
buf
[
BUFSIZ
]) {

2269 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

2270 } i‡(
p
 =&
buf
[2*
BUFSIZ
]) {

2271 
p
 = 
buf
;

2272 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

2274 
ccou¡
 = 
	`‰ód
(
p
, (), &
buf
[2*
BUFSIZ
] -Ö, 
Âå
);

2276 i‡(
ccou¡
 <= 0)

2279 
ö_löe
 = 1;

2281 
d⁄e
:

2282 
	`f˛o£
(
Âå
);

2284 
	}
}

2288 #i‡!
STDC_HEADERS
 && !
deföed
(
HAVE_MEMSET
Ë&& !deföed(
HAVE_MEMORY_H
)

2295 
	$mem£t
(*
•
, 
c
, 
n
)

2297 *
•0
 = 
•
;

2299 --
n
 >= 0)

2300 *
•
++ = 
c
;

2301  (
•0
);

2302 
	}
}

2306 
	$egªpˇ£Àss
(
i
)

2308 
iÊag
 = 
i
;

2309 
	}
}

	@egrep.y

41 %
tokí
 
CHAR
 
DOT
 
CCL
 
NCCL
 
OR
 
CAT
 
STAR
 
PLUS
 
QUEST


42 %
À·
 
OR


43 %
À·
 
CHAR
 
DOT
 
CCL
 
NCCL
 '('

44 %
À·
 
CAT


45 %
À·
 
STAR
 
PLUS
 
QUEST


48 
	~"globÆ.h
"

49 
	~<˘y≥.h
>

50 
	~<°dio.h
>

52 
	~<£tjmp.h
>

54 
	#√xtch
(Ë(*
öput
++)

	)

56 
	#MAXLIN
 350

	)

57 
	#MAXPOS
 4000

	)

58 
	#NCHARS
 256

	)

59 
	#NSTATES
 128

	)

60 
	#FINAL
 -1

	)

61 
	ggŸo‚
[
NSTATES
][
NCHARS
];

62 
	g°©e
[
NSTATES
];

63 
	gout
[
NSTATES
];

64 
	glöe
;

65 
	g«me
[
MAXLIN
];

66 
	gÀ·
[
MAXLIN
];

67 
	gright
[
MAXLIN
];

68 
	g∑ª¡
[
MAXLIN
];

69 
	gfﬁl
[
MAXLIN
];

70 
	gposôi⁄s
[
MAXPOS
];

71 
	gch¨s
[
MAXLIN
];

72 
	gnxços
;

73 
	gnxtch¨
;

74 
	gtmp°©
[
MAXLIN
];

75 
	göô°©
[
MAXLIN
];

76 
	gx°©e
;

77 
	gcou¡
;

78 
	gicou¡
;

79 *
	göput
;

80 
	g um
;

81 
	giÊag
;

82 
jmp_buf
 
	gív
;

83 *
	gmesßge
;

86 
cfﬁl
(
v
);

87 
cgŸo‚
();

88 
c°©e
(
v
);

89 
membî
(
symb
, 
£t
, 
t‹f
);

90 
nŸö
(
n
);

91 
sy√º‹
();

92 
ovîÊo
();

93 
add
(*
¨øy
, 
n
);

94 
fﬁlow
(
v
);

95 
u«ry
(
x
, 
d
);

96 
node
(
x
, 
l
, 
r
);

97 
c˛íãr
(
x
);

98 
íãr
(
x
);

100 
yyÀx
();

101 
yyîr‹
(*);

104 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

105 
s
: 
t


106 { 
	`u«ry
(
FINAL
, 
$1
);

107 
löe
--;

110 
t
: 
b
 
r


111 { 
$$
 = 
	`node
(
CAT
, 
$1
, 
$2
); }

112 | 
OR
 
b
 
r
 OR

113 { 
$$
 = 
	`node
(
CAT
, 
$2
, 
$3
); }

114 | 
OR
 
b
 
r


115 { 
$$
 = 
	`node
(
CAT
, 
$2
, 
$3
); }

116 | 
b
 
r
 
OR


117 { 
$$
 = 
	`node
(
CAT
, 
$1
, 
$2
); }

119 
b
:

120 { 
$$
 = 
	`íãr
(
DOT
);

121 
$$
 = 
	`u«ry
(
STAR
, $$); }

123 
r
: 
CHAR


124 { 
$$
 = 
	`íãr
(
$1
); }

125 | 
DOT


126 { 
$$
 = 
	`íãr
(
DOT
); }

127 | 
CCL


128 { 
$$
 = 
	`c˛íãr
(
CCL
); }

129 | 
NCCL


130 { 
$$
 = 
	`c˛íãr
(
NCCL
); }

133 
r
:Ñ 
OR
Ñ

134 { 
$$
 = 
	`node
(
OR
, 
$1
, 
$3
); }

135 | 
r
Ñ %
¥ec
 
CAT


136 { 
$$
 = 
	`node
(
CAT
, 
$1
, 
$2
); }

137 | 
r
 
STAR


138 { 
$$
 = 
	`u«ry
(
STAR
, 
$1
); }

139 | 
r
 
PLUS


140 { 
$$
 = 
	`u«ry
(
PLUS
, 
$1
); }

141 | 
r
 
QUEST


142 { 
$$
 = 
	`u«ry
(
QUEST
, 
$1
); }

143 | '(' 
r
 ')'

144 { 
$$
 = 
$2
; }

145 | 
îr‹


148 
	}
%%

150 
	$yyîr‹
(*
s
)

152 
mesßge
 = 
s
;

153 
	`l⁄gjmp
(
ív
, 1);

155 
	}
}

158 
	$yyÀx
()

160 
c˛˙t
, 
x
;

161 
c
, 
d
;

163 
c
 = 
	`√xtch
()) {

165  (
OR
);

167  (
STAR
);

169  (
PLUS
);

171  (
QUEST
);

173  (
c
);

175  (
c
);

177  (
DOT
);

181  (
OR
);

183 
x
 = 
CCL
;

184 
c˛˙t
 = 0;

185 
cou¡
 = 
nxtch¨
++;

186 i‡((
c
 = 
	`√xtch
()) == '^') {

187 
x
 = 
NCCL
;

188 
c
 = 
	`√xtch
();

191 i‡(
c
 == '\0')

192 
	`sy√º‹
();

193 i‡(
c
 == '-'

194 && 
c˛˙t
 > 0

195 && 
ch¨s
[
nxtch¨
-1] != 0) {

196 i‡((
d
 = 
	`√xtch
()) != 0) {

197 
c
 = 
ch¨s
[
nxtch¨
-1];

198 ()
c
 < ()
d
) {

199 i‡(
nxtch¨
 >
MAXLIN
)

200 
	`ovîÊo
();

201 
ch¨s
[
nxtch¨
++] = ++
c
;

202 
c˛˙t
++;

207 i‡(
nxtch¨
 >
MAXLIN
)

208 
	`ovîÊo
();

209 
ch¨s
[
nxtch¨
++] = 
c
;

210 
c˛˙t
++;

211 } (
c
 = 
	`√xtch
()) != ']');

212 
ch¨s
[
cou¡
] = 
c˛˙t
;

213  (
x
);

215 i‡((
c
 = 
	`√xtch
()) == '\0')

216 
	`sy√º‹
();

220 
c
 = '\n';

223 
yylvÆ
 = 
c
;

224  (
CHAR
);

226 
	}
}

229 
	$sy√º‹
()

231 
	`yyîr‹
("SyntaxÉrror");

232 
	}
}

235 
	$íãr
(
x
)

237 if(
löe
 >
MAXLIN
)

238 
	`ovîÊo
();

239 
«me
[
löe
] = 
x
;

240 
À·
[
löe
] = 0;

241 
right
[
löe
] = 0;

242 (
löe
++);

243 
	}
}

246 
	$c˛íãr
(
x
)

248 
löno
;

250 
löno
 = 
	`íãr
(
x
);

251 
right
[
löno
] = 
cou¡
;

252  (
löno
);

253 
	}
}

256 
	$node
(
x
, 
l
, 
r
)

258 if(
löe
 >
MAXLIN
)

259 
	`ovîÊo
();

260 
«me
[
löe
] = 
x
;

261 
À·
[
löe
] = 
l
;

262 
right
[
löe
] = 
r
;

263 
∑ª¡
[
l
] = 
löe
;

264 
∑ª¡
[
r
] = 
löe
;

265 (
löe
++);

266 
	}
}

269 
	$u«ry
(
x
, 
d
)

271 if(
löe
 >
MAXLIN
)

272 
	`ovîÊo
();

273 
«me
[
löe
] = 
x
;

274 
À·
[
löe
] = 
d
;

275 
right
[
löe
] = 0;

276 
∑ª¡
[
d
] = 
löe
;

277 (
löe
++);

278 
	}
}

281 
	$ovîÊo
()

283 
	`yyîr‹
("internalÅable overflow");

284 
	}
}

287 
	$cfﬁl
(
v
)

289 
i
;

291 i‡(
À·
[
v
] == 0) {

292 
cou¡
 = 0;

293 
i
 = 1; i <
löe
; i++)

294 
tmp°©
[
i
] = 0;

295 
	`fﬁlow
(
v
);

296 
	`add
(
fﬁl
, 
v
);

297 } i‡(
right
[
v
] == 0)

298 
	`cfﬁl
(
À·
[
v
]);

300 
	`cfﬁl
(
À·
[
v
]);

301 
	`cfﬁl
(
right
[
v
]);

303 
	}
}

306 
	$cgŸo‚
()

308 
i
, 
n
, 
s
;

309 
c
, 
k
;

310 
symbﬁ
[
NCHARS
];

311 
j
, 
l
, 
pc
, 
pos
;

312 
nc
;

313 
cuΩos
;

314 
num
, 
numbî
, 
√wpos
;

316 
cou¡
 = 0;

317 
n
=3;Ç<=
löe
;Ç++)

318 
tmp°©
[
n
] = 0;

319 i‡(
	`c°©e
(
löe
-1)==0) {

320 
tmp°©
[
löe
] = 1;

321 
cou¡
++;

322 
out
[0] = 1;

324 
n
=3;Ç<=
löe
;Ç++)

325 
öô°©
[
n
] = 
tmp°©
[n];

326 
cou¡
--;

327 
icou¡
 = 
cou¡
;

328 
tmp°©
[1] = 0;

329 
	`add
(
°©e
, 0);

330 
n
 = 0;

331 
s
 = 0; s <
n
; s++) {

332 i‡(
out
[
s
] == 1)

334 
i
 = 0; i < 
NCHARS
; i++)

335 
symbﬁ
[
i
] = 0;

336 
num
 = 
posôi⁄s
[
°©e
[
s
]];

337 
cou¡
 = 
icou¡
;

338 
i
 = 3; i <
löe
; i++)

339 
tmp°©
[
i
] = 
öô°©
[i];

340 
pos
 = 
°©e
[
s
] + 1;

341 
i
 = 0; i < 
num
; i++) {

342 
cuΩos
 = 
posôi⁄s
[
pos
];

343 i‡((
c
 = 
«me
[
cuΩos
]) >= 0) {

344 i‡(
c
 < 
NCHARS
) {

345 
symbﬁ
[
c
] = 1;

346 } i‡(
c
 =
DOT
) {

347 
k
 = 0; k < 
NCHARS
; k++)

348 i‡(
k
 != '\n')

349 
symbﬁ
[
k
] = 1;

350 } i‡(
c
 =
CCL
) {

351 
nc
 = 
ch¨s
[
right
[
cuΩos
]];

352 
pc
 = 
right
[
cuΩos
] + 1;

353 
j
 = 0; j < 
nc
; j++)

354 
symbﬁ
[()(
ch¨s
[
pc
++])] = 1;

355 } i‡(
c
 =
NCCL
) {

356 
nc
 = 
ch¨s
[
right
[
cuΩos
]];

357 
j
 = 0; j < 
NCHARS
; j++) {

358 
pc
 = 
right
[
cuΩos
] + 1;

359 
l
 = 0;Ü < 
nc
;Ü++)

360 i‡(
j
==()(
ch¨s
[
pc
++]))

361 
c⁄t
;

362 i‡(
j
 != '\n')

363 
symbﬁ
[
j
] = 1;

364 
c⁄t
:

369 
pos
++;

371 
c
=0; c<
NCHARS
; c++) {

372 i‡(
symbﬁ
[
c
] == 1) {

374 
cou¡
 = 
icou¡
;

375 
i
=3; i <
löe
; i++)

376 
tmp°©
[
i
] = 
öô°©
[i];

377 
pos
 = 
°©e
[
s
] + 1;

378 
i
=0; i<
num
; i++) {

379 
cuΩos
 = 
posôi⁄s
[
pos
];

380 i‡((
k
 = 
«me
[
cuΩos
]) >= 0)

381 i‡((
k
 =
c
)

382 || (
k
 =
DOT
)

383 || (
k
 =
CCL
 && 
	`membî
(
c
, 
right
[
cuΩos
], 1))

384 || (
k
 =
NCCL
 && 
	`membî
(
c
, 
right
[
cuΩos
], 0))

386 
numbî
 = 
posôi⁄s
[
fﬁl
[
cuΩos
]];

387 
√wpos
 = 
fﬁl
[
cuΩos
] + 1;

388 
j
 = 0; j < 
numbî
; j++) {

389 i‡(
tmp°©
[
posôi⁄s
[
√wpos
]] != 1) {

390 
tmp°©
[
posôi⁄s
[
√wpos
]] = 1;

391 
cou¡
++;

393 
√wpos
++;

396 
pos
++;

398 i‡(
	`nŸö
(
n
)) {

399 i‡(
n
 >
NSTATES
)

400 
	`ovîÊo
();

401 
	`add
(
°©e
, ++
n
);

402 i‡(
tmp°©
[
löe
] == 1)

403 
out
[
n
] = 1;

404 
gŸo‚
[
s
][
c
] = 
n
;

406 
gŸo‚
[
s
][
c
] = 
x°©e
;

411 
	}
}

414 
	$c°©e
(
v
)

416 
b
;

417 i‡(
À·
[
v
] == 0) {

418 i‡(
tmp°©
[
v
] != 1) {

419 
tmp°©
[
v
] = 1;

420 
cou¡
++;

424 i‡(
right
[
v
] == 0) {

425 i‡(
	`c°©e
(
À·
[
v
]) == 0)  (0);

426 i‡(
«me
[
v
] =
PLUS
)  (1);

429 i‡(
«me
[
v
] =
CAT
) {

430 i‡(
	`c°©e
(
À·
[
v
]Ë=0 && c°©e(
right
[v]) == 0)  (0);

434 
b
 = 
	`c°©e
(
right
[
v
]);

435 i‡(
	`c°©e
(
À·
[
v
]Ë=0 || 
b
 == 0)  (0);

438 
	}
}

441 
	$membî
(
symb
, 
£t
, 
t‹f
)

443 
i
, 
num
, 
pos
;

445 
num
 = 
ch¨s
[
£t
];

446 
pos
 = 
£t
 + 1;

447 
i
 = 0; i < 
num
; i++)

448 i‡(
symb
 =()(
ch¨s
[
pos
++]))

449  (
t‹f
);

450  (!
t‹f
);

451 
	}
}

454 
	$nŸö
(
n
)

456 
i
, 
j
, 
pos
;

457 
i
=0; i<=
n
; i++) {

458 i‡(
posôi⁄s
[
°©e
[
i
]] =
cou¡
) {

459 
pos
 = 
°©e
[
i
] + 1;

460 
j
=0; j < 
cou¡
; j++)

461 i‡(
tmp°©
[
posôi⁄s
[
pos
++]] !1Ë
nxt
;

462 
x°©e
 = 
i
;

465 
nxt
: ;

468 
	}
}

471 
	$add
(*
¨øy
, 
n
)

473 
i
;

475 i‡(
nxços
 + 
cou¡
 > 
MAXPOS
)

476 
	`ovîÊo
();

477 
¨øy
[
n
] = 
nxços
;

478 
posôi⁄s
[
nxços
++] = 
cou¡
;

479 
i
=3; i <
löe
; i++) {

480 i‡(
tmp°©
[
i
] == 1) {

481 
posôi⁄s
[
nxços
++] = 
i
;

484 
	}
}

487 
	$fﬁlow
(
v
)

489 
p
;

491 i‡(
v
 =
löe
)

493 
p
 = 
∑ª¡
[
v
];

494 
«me
[
p
]) {

495 
STAR
:

496 
PLUS
: 
	`c°©e
(
v
);

497 
	`fﬁlow
(
p
);

500 
OR
:

501 
QUEST
: 
	`fﬁlow
(
p
);

504 
CAT
:

505 i‡(
v
 =
À·
[
p
]) {

506 i‡(
	`c°©e
(
right
[
p
]) == 0) {

507 
	`fﬁlow
(
p
);

511 
	`fﬁlow
(
p
);

513 
FINAL
:

514 i‡(
tmp°©
[
löe
] != 1) {

515 
tmp°©
[
löe
] = 1;

516 
cou¡
++;

520 
	}
}

523 
	$egªpöô
(*
egªµ©
)

526 
	`mem£t
(
gŸo‚
, 0, (gotofn));

527 
	`mem£t
(
°©e
, 0, (state));

528 
	`mem£t
(
out
, 0, (out));

529 
löe
 = 1;

530 
	`mem£t
(
«me
, 0, (name));

531 
	`mem£t
(
À·
, 0, (left));

532 
	`mem£t
(
right
, 0, (right));

533 
	`mem£t
(
∑ª¡
, 0, (parent));

534 
	`mem£t
(
fﬁl
, 0, (foll));

535 
	`mem£t
(
posôi⁄s
, 0, (positions));

536 
	`mem£t
(
ch¨s
, 0, (chars));

537 
nxços
 = 0;

538 
nxtch¨
 = 0;

539 
	`mem£t
(
tmp°©
, 0, (tmpstat));

540 
	`mem£t
(
öô°©
, 0, (initstat));

541 
x°©e
 = 0;

542 
cou¡
 = 0;

543 
icou¡
 = 0;

544 
öput
 = 
egªµ©
;

545 
mesßge
 = 
NULL
;

546 i‡(
	`£tjmp
(
ív
) == 0) {

547 
	`yy∑r£
();

548 
	`cfﬁl
(
löe
-1);

549 
	`cgŸo‚
();

551 (
mesßge
);

552 
	}
}

555 
	$egªp
(*
fûe
, 
FILE
 *
ouçut
, *
f‹m©
)

557 *
p
;

558 
c°©
;

559 
ccou¡
;

560 
buf
[2*
BUFSIZ
];

561 *
∆p
;

562 
i°©
;

563 
ö_löe
;

564 
FILE
 *
Âå
;

566 i‡((
Âå
 = 
	`myf›í
(
fûe
, "r")Ë=
NULL
)

569 
ccou¡
 = 0;

570 
 um
 = 1;

571 
ö_löe
 = 0;

572 
p
 = 
buf
;

573 
∆p
 = 
p
;

574 i‡((
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
)) <= 0)

575 
d⁄e
;

576 
ö_löe
 = 1;

577 
i°©
 = 
c°©
 = (Ë
gŸo‚
[0]['\n'];

578 i‡(
out
[
c°©
])

579 
found
;

581 i‡(!
iÊag
)

582 
c°©
 = (Ë
gŸo‚
[c°©][()*
p
&0377];

585 
c°©
 = (Ë
gŸo‚
[c°©][
	`tﬁowî
(()*
p
&0377)];

587 i‡(
out
[
c°©
]) {

588 
found
:

590 i‡(*
p
++ == '\n') {

591 
ö_löe
 = 0;

592 
suc˚ed
:

593 
	`Ârötf
(
ouçut
, 
f‹m©
, 
fûe
, 
 um
);

594 i‡(
p
 <
∆p
) {

595 
∆p
 < &
buf
[2*
BUFSIZ
])

596 
	`putc
(*
∆p
++, 
ouçut
);

597 
∆p
 = 
buf
;

599 
∆p
 < 
p
)

600 
	`putc
(*
∆p
++, 
ouçut
);

601 
 um
++;

602 
∆p
 = 
p
;

603 i‡((
out
[(
c°©
=
i°©
)]) == 0)

604 
brk2
;

606 
cfound
:

607 i‡(--
ccou¡
 <= 0) {

608 i‡(
p
 <&
buf
[
BUFSIZ
]) {

609 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

610 } i‡(
p
 =&
buf
[2*
BUFSIZ
]) {

611 
p
 = 
buf
;

612 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

614 
ccou¡
 = 
	`‰ód
(
p
, (), &
buf
[2*
BUFSIZ
] -Ö,

615 
Âå
);

617 i‡(
ccou¡
 <= 0) {

618 i‡(
ö_löe
) {

619 
ö_löe
 = 0;

620 
suc˚ed
;

622 
d⁄e
;

625 
ö_löe
 = 1;

629 i‡(*
p
++ == '\n') {

630 
ö_löe
 = 0;

631 
 um
++;

632 
∆p
 = 
p
;

633 i‡(
out
[(
c°©
=
i°©
)])

634 
cfound
;

636 
brk2
:

637 i‡(--
ccou¡
 <= 0) {

638 i‡(
p
 <&
buf
[
BUFSIZ
]) {

639 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

640 } i‡(
p
 =&
buf
[2*
BUFSIZ
]) {

641 
p
 = 
buf
;

642 
ccou¡
 = 
	`‰ód
(
p
, (), 
BUFSIZ
, 
Âå
);

644 
ccou¡
 = 
	`‰ód
(
p
, (), &
buf
[2*
BUFSIZ
] -Ö, 
Âå
);

646 i‡(
ccou¡
 <= 0)

649 
ö_löe
 = 1;

651 
d⁄e
:

652 
	`f˛o£
(
Âå
);

654 
	}
}

658 #i‡!
STDC_HEADERS
 && !
deföed
(
HAVE_MEMSET
Ë&& !deföed(
HAVE_MEMORY_H
)

665 
	$mem£t
(*
•
, 
c
, 
n
)

667 *
•0
 = 
•
;

669 --
n
 >= 0)

670 *
•
++ = 
c
;

671  (
•0
);

672 
	}
}

676 
	$egªpˇ£Àss
(
i
)

678 
iÊag
 = 
i
;

679 
	}
}

	@exec.c

38 
	~<uni°d.h
>

39 
	~"globÆ.h
"

40 
	~<°d¨g.h
>

41 
	~<sys/waô.h
>

42 
	~<sys/ty≥s.h
>

43 #ifde‡
__DJGPP__


44 
	~<¥o˚ss.h
>

46 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

47 
	~<ncur£s.h
>

49 
	~<cur£s.h
>

52 c⁄° 
	grcsid
[] = "$Id:Éxec.c,v 1.12 2009/04/10 13:39:23 broeker Exp $";

54 
sigh™dÀr_t
 
	gﬁdsigquô
;

55 
sigh™dÀr_t
 
	gﬁdsighup
;

56 
sigh™dÀr_t
 
	gﬁdsigt°p
;

58 #i‚de‡
__MSDOS__


59 
joö
(
pid_t
 
p
);

60 
myexecvp
(*
a
, **
¨gs
);

61 
pid_t
 
myf‹k
();

70 
	$execuã
(*
a
, ...)

72 
va_li°
 
≠
;

73 
exôcode
 = -1;

74 *
¨gv
[
BUFSIZ
];

75 
pid_t
 
p
;

78 
	`ídwö
();

79 
	`mou£˛ónup
();

80 
	`fÊush
(
°dout
);

81 
	`va_°¨t
(
≠
, 
a
);

82 
p
 = 0; (
¨gv
[p] = 
	`va_¨g
(
≠
, *)) != 0;Ö++)

84 #ifde‡
__MSDOS__


87 
exôcode
 = 
	`•awnvp
(
P_WAIT
, 
a
, 
¨gv
);

89 i‡((
p
 = 
	`myf‹k
()) == 0) {

90 
	`myexecvp
(
a
, 
¨gv
);

93 
exôcode
 = 
	`joö
(
p
);

98 #i‡
UNIXPC
 || !
TERMINFO


99 #i‚de‡
__DJGPP__


100 
	`n⁄l
();

102 
	`øw
();

103 
	`n€cho
();

105 
	`mou£míu
();

106 
	`døws¸ﬁlb¨
(
t›löe
, 
√xéöe
);

107 
	`va_íd
(
≠
);

108 (
exôcode
);

109 
	}
}

111 #i‚de‡
__MSDOS__


117 
	$myexecvp
(*
a
, **
¨gs
)

119 
msg
[
MSGLEN
 + 1];

122 
¨gs
[0] = 
	`myba£«me
(args[0]);

125 
	`execvp
(
a
, 
¨gs
);

126 
	`¢¥ötf
(
msg
, (msg), "\nC™nŸÉxe¯%s", 
a
);

127 
	`≥º‹
(
msg
);

128 
	`askf‹ªtu∫
();

129 
	`myexô
(1);

131 
	}
}

135 
pid_t


136 
	$myf‹k
()

138 
pid_t
 
p
;

140 
p
 = 
	`f‹k
();

143 i‡(
p
 > 0) {

144 
ﬁdsigquô
 = 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

145 
ﬁdsighup
 = 
	`sig«l
(
SIGHUP
, 
SIG_IGN
);

146 #ifde‡
SIGTSTP


147 
ﬁdsigt°p
 = 
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

151 i‡(
p
 == 0) {

152 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

153 
	`sig«l
(
SIGQUIT
, 
SIG_DFL
);

154 
	`sig«l
(
SIGHUP
, 
SIG_DFL
);

155 #ifde‡
SIGTSTP


156 
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

160 i‡(
p
 == -1) {

161 
	`my≥º‹
("Cannot fork");

163  
p
;

164 
	}
}

169 
	$joö
(
pid_t
 
p
)

171 
°©us
;

172 
pid_t
 
w
;

176 
w
 = 
	`waô
(&
°©us
);

177 } 
p
 !-1 && 
w
 !=Ö);

180 
	`sig«l
(
SIGQUIT
, 
ﬁdsigquô
);

181 
	`sig«l
(
SIGHUP
, 
ﬁdsighup
);

182 #ifde‡
SIGTSTP


183 
	`sig«l
(
SIGTSTP
, 
ﬁdsigt°p
);

187 (
°©us
 >> 8);

188 
	}
}

	@find.c

38 
	~"globÆ.h
"

40 
	~"buûd.h
"

41 
	~"sˇ¬î.h
"

43 
	~<as£π.h
>

44 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

45 
	~<ncur£s.h
>

47 
	~<cur£s.h
>

49 
	~<ªgex.h
>

51 c⁄° 
	grcsid
[] = "$Id: find.c,v 1.21 2009/04/10 13:39:23 broeker Exp $";

61 *
	gblockp
;

62 
	gblock
[
BUFSIZ
 + 2];

63 
	gblockÀn
;

64 
	gblockm¨k
;

65 
	gblocknumbî
;

67 
	gglobÆ
[] = "<global>";

68 
	g˝©ã∫
[
PATLEN
 + 1];

69 
	gœ°f˙off£t
;

70 
POSTING
 *
	gpo°ögp
;

71 
	gpo°ögsfound
;

72 
ªgex_t
 
	gªgexp
;

73 
BOOL
 
	gi§egexp_vÆid
 = 
NO
;

75 
BOOL
 
m©ch
();

76 
BOOL
 
m©chª°
();

77 
POSTING
 *
gëpo°ög
();

78 *
lˇsify
(*
s
);

79 
födˇŒedbysub
(*
fûe
, 
BOOL
 
ma¸o
);

80 
födãrm
(*
∑âîn
);

81 
puéöe
(
FILE
 *
ouçut
);

82 
puço°ögªf
(
POSTING
 *
p
, *
∑t
);

83 
puåef
(
£em‹e
, *
fûe
, *
func
);

84 
putsour˚
(
£em‹e
, 
FILE
 *
ouçut
);

89 
	$födsymbﬁ
(*
∑âîn
)

91 
fûe
[
PATHLEN
 + 1];

92 
fun˘i⁄
[
PATLEN
 + 1];

93 
ma¸o
[
PATLEN
 + 1];

94 
symbﬁ
[
PATLEN
 + 1];

95 *
˝
;

96 *
s
;

97 
size_t
 
s_Àn
 = 0;

98 
fú°ch¨
;

99 
BOOL
 
f˙def
 = 
NO
;

101 i‡(
övîãdödex
 =
YES
) {

102 
œ°löe
 = 0;

103 
POSTING
 *
p
;

105 
	`födãrm
(
∑âîn
);

106 (
p
 = 
	`gëpo°ög
()Ë!
NULL
) {

107 i‡(
p
->
ty≥
 !
INCLUDE
 &&Ö->
löeoff£t
 !
œ°löe
) {

108 
	`puço°ögªf
(
p
, 0);

109 
œ°löe
 = 
p
->
löeoff£t
;

112  
NULL
;

115 (Ë
	`sˇ≈a°
('\t');

116 
	`skùªfch¨
();

117 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

118 
	`°r˝y
(
fun˘i⁄
, 
globÆ
);

119 
	`°r˝y
(
ma¸o
, 
globÆ
);

124 
˝
 = 
blockp
;

126 
	`£tm¨k
('\n');

128 *
˝
 != '\n') {

129 ++
˝
;

131 } *(
˝
 + 1Ë='\0' && (˝ = 
	`ªad_block
()Ë!
NULL
);

134 i‡(
˝
 !
NULL
 && *(++cp + 1) == '\0') {

135 
˝
 = 
	`ªad_block
();

137 i‡(
˝
 =
NULL
) {

141 i‡(*
˝
 == '\t') {

142 
blockp
 = 
˝
;

143 
	`gëªfch¨
()) {

145 
NEWFILE
:

148 
	`skùªfch¨
();

149 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

152 i‡(*
fûe
 == '\0') {

153  
NULL
;

155 
	`¥ogªss
("Sórch", 
£¨chcou¡
, 
n§cfûes
);

158 
FCNEND
:

159 (Ë
	`°r˝y
(
fun˘i⁄
, 
globÆ
);

160 
nŸm©ched
;

162 
FCNDEF
:

163 
f˙def
 = 
YES
;

164 
s
 = 
fun˘i⁄
;

165 
s_Àn
 = (
fun˘i⁄
);

168 
DEFINE
:

169 i‡(
fûevîsi⁄
 >= 10) {

170 
s
 = 
ma¸o
;

171 
s_Àn
 = (
ma¸o
);

173 
s
 = 
symbﬁ
;

174 
s_Àn
 = (
symbﬁ
);

178 
DEFINEEND
:

179 (Ë
	`°r˝y
(
ma¸o
, 
globÆ
);

180 
nŸm©ched
;

182 
INCLUDE
:

183 
nŸm©ched
;

186 
s
 = 
symbﬁ
;

187 
s_Àn
 = (
symbﬁ
);

190 
	`skùªfch¨
();

191 
	`„tch_°rög_‰om_dba£
(
s
, 
s_Àn
);

194 i‡(
i§egexp_vÆid
 =
YES
) {

195 i‡(
ˇ£Àss
 =
YES
) {

196 
s
 = 
	`lˇsify
(s);

198 i‡(*
s
 !'\0' && 
	`ªgexec
 (&
ªgexp
, s, (
size_t
)0, 
NULL
, 0) == 0) {

199 
m©ched
;

203 i‡(
	`°ªquÆ
(
∑âîn
, 
s
)) {

204 
m©ched
;

206 
nŸm©ched
;

209 i‡(
i§egexp_vÆid
 =
YES
) {

220 i‡(*
˝
 & 0200) {

221 
fú°ch¨
 = 
dich¨1
[(*
˝
 & 0177) / 8];

224 
fú°ch¨
 = *
˝
;

227 i‡(
	`ißÕha
(()
fú°ch¨
) || firstchar == '_') {

228 
blockp
 = 
˝
;

229 
	`„tch_°rög_‰om_dba£
(
symbﬁ
, (symbol));

230 i‡(
ˇ£Àss
 =
YES
) {

231 
s
 = 
	`lˇsify
(
symbﬁ
);

234 
s
 = 
symbﬁ
;

238 i‡(*
s
 !'\0' && 
	`ªgexec
 (&
ªgexp
, s, (
size_t
)0, 
NULL
, 0) == 0) {

239 
m©ched
;

241 
nŸm©ched
;

245 i‡(*
˝
 =
˝©ã∫
[0]) {

246 
blockp
 = 
˝
;

249 i‡(
	`m©chª°
()) {

250 
s
 = 
NULL
;

251 
m©ched
:

253 i‡(
	`°rcmp
(
ma¸o
, 
globÆ
Ë&& 
s
 != macro) {

254 
	`puåef
(0, 
fûe
, 
ma¸o
);

256 i‡(
f˙def
 =
YES
 || 
s
 !
fun˘i⁄
) {

257 
f˙def
 = 
NO
;

258 
	`puåef
(0, 
fûe
, 
fun˘i⁄
);

261 
	`puåef
(0, 
fûe
, 
globÆ
);

263 i‡(
blockp
 =
NULL
) {

264  
NULL
;

267 
nŸm©ched
:

268 
˝
 = 
blockp
;

271 
blockp
 = 
˝
;

273  
NULL
;

274 
	}
}

278 
	$föddef
(*
∑âîn
)

280 
fûe
[
PATHLEN
 + 1];

282 i‡(
övîãdödex
 =
YES
) {

283 
POSTING
 *
p
;

285 
	`födãrm
(
∑âîn
);

286 (
p
 = 
	`gëpo°ög
()Ë!
NULL
) {

287 
p
->
ty≥
) {

288 
DEFINE
:

289 
FCNDEF
:

290 
CLASSDEF
:

291 
ENUMDEF
:

292 
MEMBERDEF
:

293 
STRUCTDEF
:

294 
TYPEDEF
:

295 
UNIONDEF
:

296 
GLOBALDEF
:

297 
	`puço°ögªf
(
p
, 
∑âîn
);

300  
NULL
;

305 
	`sˇ≈a°
('\t'Ë!
NULL
) {

306 *
blockp
) {

308 
NEWFILE
:

309 
	`skùªfch¨
();

310 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

311 i‡(*
fûe
 == '\0') {

312  
NULL
;

314 
	`¥ogªss
("Sórch", 
£¨chcou¡
, 
n§cfûes
);

317 
DEFINE
:

318 
FCNDEF
:

319 
CLASSDEF
:

320 
ENUMDEF
:

321 
MEMBERDEF
:

322 
STRUCTDEF
:

323 
TYPEDEF
:

324 
UNIONDEF
:

325 
GLOBALDEF
:

326 
	`skùªfch¨
();

327 i‡(
	`m©ch
()) {

330 
	`puåef
(0, 
fûe
, 
∑âîn
);

336  
NULL
;

337 
	}
}

341 
	$födÆlf˙s
(*
dummy
)

343 
fûe
[
PATHLEN
 + 1];

344 
fun˘i⁄
[
PATLEN
 + 1];

346 (Ë
dummy
;

349 
	`sˇ≈a°
('\t'Ë!
NULL
) {

350 *
blockp
) {

352 
NEWFILE
:

353 
	`skùªfch¨
();

354 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

355 i‡(*
fûe
 == '\0') {

356  
NULL
;

358 
	`¥ogªss
("Sórch", 
£¨chcou¡
, 
n§cfûes
);

361 
FCNEND
:

362 (Ë
	`°r˝y
(
fun˘i⁄
, 
globÆ
);

365 
FCNDEF
:

366 
CLASSDEF
:

367 
	`skùªfch¨
();

368 
	`„tch_°rög_‰om_dba£
(
fun˘i⁄
, (function));

371 
	`puåef
(0, 
fûe
, 
fun˘i⁄
);

375  
NULL
;

376 
	}
}

381 
	$födˇŒög
(*
∑âîn
)

383 
fûe
[
PATHLEN
 + 1];

384 
fun˘i⁄
[
PATLEN
 + 1];

385 
tmpfunc
[10][
PATLEN
 + 1];

386 
ma¸o
[
PATLEN
 + 1];

387 *
tmpblockp
;

388 
m‹efuns
, 
i
;

390 i‡(
övîãdödex
 =
YES
) {

391 
POSTING
 *
p
;

393 
	`födãrm
(
∑âîn
);

394 (
p
 = 
	`gëpo°ög
()Ë!
NULL
) {

395 i‡(
p
->
ty≥
 =
FCNCALL
) {

396 
	`puço°ögªf
(
p
, 0);

399  
NULL
;

402 *
ma¸o
 = '\0';

403 
tmpblockp
 = 0;

404 
m‹efuns
 = 0;

405 
i
 = 0; i < 10; i++Ë*(
tmpfunc
[i]) = '\0';

406 
	`sˇ≈a°
('\t'Ë!
NULL
) {

407 *
blockp
) {

409 
NEWFILE
:

410 
	`skùªfch¨
();

411 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

412 i‡(*
fûe
 == '\0') {

413  
NULL
;

415 
	`¥ogªss
("Sórch", 
£¨chcou¡
, 
n§cfûes
);

416 (Ë
	`°r˝y
(
fun˘i⁄
, 
globÆ
);

419 
DEFINE
:

420 i‡(
fûevîsi⁄
 >= 10) {

421 
	`skùªfch¨
();

422 
	`„tch_°rög_‰om_dba£
(
ma¸o
, (macro));

426 
DEFINEEND
:

427 *
ma¸o
 = '\0';

430 
FCNDEF
:

431 
	`skùªfch¨
();

432 
	`„tch_°rög_‰om_dba£
(
fun˘i⁄
, (function));

433 
i
 = 0; i < 
m‹efuns
; i++)

434 i‡–!
	`°rcmp
(
tmpfunc
[
i
], 
fun˘i⁄
) )

436 i‡(
i
 =
m‹efuns
) {

437 (Ë
	`°r˝y
(
tmpfunc
[
m‹efuns
], 
fun˘i⁄
);

438 i‡(++
m‹efuns
 >= 10) morefuns = 9;

442 
FCNEND
:

443 
i
 = 0; i < 
m‹efuns
; i++)

444 *(
tmpfunc
[
i
]) = '\0';

445 
m‹efuns
 = 0;

448 
FCNCALL
:

449 
	`skùªfch¨
();

450 i‡(
	`m©ch
()) {

453 i‡(*
ma¸o
 != '\0') {

454 
	`puåef
(1, 
fûe
, 
ma¸o
);

457 
tmpblockp
 = 
blockp
;

458 
i
 = 0; i < 
m‹efuns
; i++) {

459 
blockp
 = 
tmpblockp
;

460 
	`puåef
(1, 
fûe
, 
tmpfunc
[
i
]);

466 
m‹efuns
 = 0;

468  
NULL
;

469 
	}
}

474 
	$föd°rög
(*
∑âîn
)

476 
egªµ©
[2 * 
PATLEN
];

477 *
˝
, *
µ
;

480 
˝
 = 
egªµ©
;

481 
µ
 = 
∑âîn
; *pp != '\0'; ++pp) {

482 i‡(
	`°rchr
(".*[\\^$+?|()", *
µ
Ë!
NULL
) {

483 *
˝
++ = '\\';

485 *
˝
++ = *
µ
;

487 *
˝
 = '\0';

490 (
	`födªgexp
(
egªµ©
));

491 
	}
}

496 
	$födªgexp
(*
egªµ©
)

498 
i
;

499 *
egª≥º‹
;

502 i‡((
egª≥º‹
 = 
	`egªpöô
(
egªµ©
)Ë=
NULL
) {

505 
i
 = 0; i < 
n§cfûes
; ++i) {

506 *
fûe
 = 
	`fûï©h
(
§cfûes
[
i
]);

508 
	`¥ogªss
("Sórch", 
£¨chcou¡
, 
n§cfûes
);

509 i‡(
	`egªp
(
fûe
, 
ªfsfound
, "%s <unknown> %ld ") < 0) {

510 
	`po°îr
 ("C™nŸ o≥¿fûê%s", 
fûe
);

514 (
egª≥º‹
);

515 
	}
}

520 
	$födfûe
(*
dummy
)

522 
i
;

524 (Ë
dummy
;

526 
i
 = 0; i < 
n§cfûes
; ++i) {

527 *
s
;

529 i‡(
ˇ£Àss
 =
YES
) {

530 
s
 = 
	`lˇsify
(
§cfûes
[
i
]);

532 
s
 = 
§cfûes
[
i
];

534 i‡(
	`ªgexec
 (&
ªgexp
, 
s
, (
size_t
)0, 
NULL
, 0) == 0) {

535 (Ë
	`Ârötf
(
ªfsfound
, "%s <unknown> 1 <unknown>\n",

536 
§cfûes
[
i
]);

540  
NULL
;

541 
	}
}

546 
	$födö˛ude
(*
∑âîn
)

548 
fûe
[
PATHLEN
 + 1];

550 i‡(
övîãdödex
 =
YES
) {

551 
POSTING
 *
p
;

553 
	`födãrm
(
∑âîn
);

554 (
p
 = 
	`gëpo°ög
()Ë!
NULL
) {

555 i‡(
p
->
ty≥
 =
INCLUDE
) {

556 
	`puço°ögªf
(
p
, 0);

559  
NULL
;

563 
	`sˇ≈a°
('\t'Ë!
NULL
) {

564 *
blockp
) {

566 
NEWFILE
:

567 
	`skùªfch¨
();

568 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

569 i‡(*
fûe
 == '\0') {

570  
NULL
;

572 
	`¥ogªss
("Sórch", 
£¨chcou¡
, 
n§cfûes
);

575 
INCLUDE
:

576 
	`skùªfch¨
();

577 
	`skùªfch¨
();

578 i‡(
	`m©ch
()) {

581 
	`puåef
(0, 
fûe
, 
globÆ
);

586  
NULL
;

587 
	}
}

591 
FINDINIT


592 
	$födöô
(*
∑âîn
)

594 
buf
[
PATLEN
 + 3];

595 
BOOL
 
i§egexp
 = 
NO
;

596 
i
;

597 *
s
;

598 
c
;

601 if(
i§egexp_vÆid
 =
YES
)

602 
	`ªg‰ì
(&
ªgexp
);

604 
i§egexp_vÆid
 = 
NO
;

607 
s
 = 
∑âîn
 + 
	`°æí
(pattern) - 1;

608 
	`is•a˚
(()*
s
);

609 --
s
) {

610 *
s
 = '\0';

616 i‡(
ˇ£Àss
 =
YES
) {

617 
∑âîn
 = 
	`lˇsify
(pattern);

621 i‡(
fõld
 =
FILENAME
 || fõld =
INCLUDES
) {

622 i‡(
	`ªgcomp
 (&
ªgexp
, 
∑âîn
, 
REG_EXTENDED
 | 
REG_NOSUB
) != 0) {

623 (
REGCMPERROR
);

625 
i§egexp_vÆid
 = 
YES
;

627 (
NOERROR
);

630 i‡(
	`°Ωbrk
(
∑âîn
, "^.[{*+$"Ë!
NULL
) {

631 
i§egexp
 = 
YES
;

634 
s
 = 
∑âîn
;

635 i‡(!
	`ißÕha
(()*
s
) && *s != '_') {

636 (
NOTSYMBOL
);

638 *++
s
 != '\0') {

639 i‡(!
	`iß um
(()*
s
) && *s != '_') {

640 (
NOTSYMBOL
);

645 i‡(
åun_syms
 =
YES
 && 
isu±od©e
 == YES &&

646 
dbåunˇãd
 =
NO
 && 
s
 - 
∑âîn
 >= 8) {

647 (Ë
	`°r˝y
(
∑âîn
 + 8, ".*");

648 
i§egexp
 = 
YES
;

653 i‡(
i§egexp
 =
YES
 || 
ˇ£Àss
 =YES || 
övîãdödex
 == YES) {

656 
s
 = 
∑âîn
;

657 i‡(*
s
 == '^') {

658 (Ë
	`°r˝y
(
√w∑t
, 
s
 + 1);

659 (Ë
	`°r˝y
(
s
, 
√w∑t
);

662 
i
 = 
	`°æí
(
s
) - 1;

663 i‡(
s
[
i
] == '$') {

664 i‡(
i
 > 0 && 
s
[i-1] == '\\' ) {

665 
s
[
i
-1] = '$';

667 
s
[
i
] = '\0';

670 i‡(
åun_syms
 =
YES
 && 
	`°Ωbrk
(
s
, "[{*+"Ë=
NULL
) {

671 
s
[8] = '\0';

676 (Ë
	`¢¥ötf
(
buf
, (buf), "^%s$", 
s
);

677 i‡(
	`ªgcomp
 (&
ªgexp
, 
buf
, 
REG_EXTENDED
 | 
REG_NOSUB
) != 0) {

678 (
REGCMPERROR
);

682 
i§egexp_vÆid
 = 
YES
;

687 i‡(
åun_syms
 =
YES
 && 
fõld
 <
CALLING
) {

688 
∑âîn
[8] = '\0';

691 
s
 = 
˝©ã∫
;

692 
i
 = 0; (
c
 = 
∑âîn
[i]) != '\0'; ++i) {

693 i‡(
	`IS_A_DICODE
(
c
, 
∑âîn
[
i
 + 1])) {

694 
c
 = 
	`DICODE_COMPRESS
(c, 
∑âîn
[
i
 + 1]);

695 ++
i
;

697 *
s
++ = 
c
;

699 *
s
 = '\0';

701 (
NOERROR
);

702 
	}
}

705 
	$föd˛ónup
()

708 
	}
}

712 
BOOL


713 
	$m©ch
()

715 
°rög
[
PATLEN
 + 1];

718 i‡(
i§egexp_vÆid
 =
YES
) {

719 
	`„tch_°rög_‰om_dba£
(
°rög
, (string));

720 i‡(*
°rög
 == '\0') {

721 (
NO
);

723 i‡(
ˇ£Àss
 =
YES
) {

724  (
	`ªgexec
 (&
ªgexp
, 
	`lˇsify
(
°rög
), (
size_t
)0, 
NULL
, 0Ë? 
NO
 : 
YES
);

727  (
	`ªgexec
 (&
ªgexp
, 
°rög
, (
size_t
)0, 
NULL
, 0Ë? 
NO
 : 
YES
);

731 ((
BOOL
Ë(*
blockp
 =
˝©ã∫
[0] && 
	`m©chª°
()));

732 
	}
}

736 
BOOL


737 
	$m©chª°
()

739 
i
 = 1;

741 
	`skùªfch¨
();

743 *
blockp
 =
˝©ã∫
[
i
]) {

744 ++
blockp
;

745 ++
i
;

747 } *(
blockp
 + 1Ë='\0' && 
	`ªad_block
(Ë!
NULL
);

749 i‡(*
blockp
 ='\n' && 
˝©ã∫
[
i
] == '\0') {

750 (
YES
);

752 (
NO
);

753 
	}
}

758 
	$puåef
(
£em‹e
, *
fûe
, *
func
)

760 
FILE
 *
ouçut
;

762 i‡(
	`°rcmp
(
func
, 
globÆ
) == 0) {

763 
ouçut
 = 
ªfsfound
;

766 
ouçut
 = 
n⁄globÆªfs
;

768 (Ë
	`Ârötf
(
ouçut
, "%†%†", 
fûe
, 
func
);

769 
	`putsour˚
(
£em‹e
, 
ouçut
);

770 
	}
}

775 
	$putsour˚
(
£em‹e
, 
FILE
 *
ouçut
)

777 *
tmpblockp
;

778 *
˝
, 
√xtc
 = '\0';

779 
BOOL
 
Ch™ge
 = 
NO
, 
ªåót
 = NO;

781 i‡(
fûevîsi⁄
 <= 5) {

782 (Ë
	`sˇ≈a°
(' ');

783 
	`puéöe
(
ouçut
);

784 (Ë
	`putc
('\n', 
ouçut
);

788 
˝
 = 
tmpblockp
 = 
blockp
;

789 *
˝
 !'\n' || 
√xtc
 != '\n') {

790 
√xtc
 = *
˝
;

791 i‡(--
˝
 < 
block
) {

792 
ªåót
 = 
YES
;

794 (Ë
	`db£ek
((
blocknumbî
 - 1Ë* 
BUFSIZ
);

795 
˝
 = &
block
[
BUFSIZ
 - 1];

798 
blockp
 = 
˝
;

799 i‡(*
blockp
 !'\n' || 
	`gëªfch¨
() != '\n' ||

800 (!
	`isdigô
(
	`gëªfch¨
()Ë&& 
fûevîsi⁄
 >= 12)) {

801 
	`po°Áèl
("InternalÉrror: cannot get sourceÜine from database");

807 i‡(*
blockp
 == '\t') {

812 i‡(
£em‹e
 && 
Ch™ge
 =
NO
 && 
ªåót
 == NO &&

813 
blockp
 > 
tmpblockp
) {

814 
Ch™ge
 = 
YES
;

815 
˝
 = 
blockp
;

817 
	`skùªfch¨
();

818 
	`skùªfch¨
();

821 
	`puéöe
(
ouçut
);

822 i‡(
ªåót
 =
YES
Ëªåóà
NO
;

823 } 
blockp
 !
NULL
 && 
	`gëªfch¨
() != '\n');

824 (Ë
	`putc
('\n', 
ouçut
);

825 i‡(
Ch™ge
 =
YES
Ë
blockp
 = 
˝
;

826 
	}
}

831 
	$puéöe
(
FILE
 *
ouçut
)

833 *
˝
;

834 
c
;

836 
	`£tm¨k
('\n');

837 
˝
 = 
blockp
;

839 (
c
 = ()(*
˝
)) != '\n') {

842 i‡(
c
 > '\177') {

843 
c
 &= 0177;

844 (Ë
	`putc
(
dich¨1
[
c
 / 8], 
ouçut
);

845 (Ë
	`putc
(
dich¨2
[
c
 & 7], 
ouçut
);

848 i‡(
c
 < ' ') {

849 (Ë
	`Âuts
(
keyw‹d
[
c
].
ãxt
, 
ouçut
);

850 i‡(
keyw‹d
[
c
].
dñim
 != '\0') {

851 (Ë
	`putc
(' ', 
ouçut
);

853 i‡(
keyw‹d
[
c
].
dñim
 == '(') {

854 (Ë
	`putc
('(', 
ouçut
);

858 (Ë
	`putc
((Ë
c
, 
ouçut
);

860 ++
˝
;

862 } *(
˝
 + 1Ë='\0' && (˝ = 
	`ªad_block
()Ë!
NULL
);

863 
blockp
 = 
˝
;

864 
	}
}

869 
	$„tch_°rög_‰om_dba£
(*
s
, 
size_t
 
Àngth
)

871 *
˝
;

872 
c
;

874 
	`as£π
(
Àngth
 >  (*));

876 
	`£tm¨k
('\n');

877 
˝
 = 
blockp
;

879 
Àngth
 > 1 && (
c
 = ()(*
˝
)) != '\n') {

880 i‡(
c
 >0x80 && 
Àngth
 > 2) {

881 
c
 &= 0x7f;

882 *
s
++ = 
dich¨1
[
c
 / 8];

883 *
s
++ = 
dich¨2
[
c
 & 7];

884 
Àngth
 -= 2;

886 *
s
++ = 
c
;

887 
Àngth
--;

889 ++
˝
;

891 } 
Àngth
 > 0 && 
˝
[1] ='\0' && (˝ = 
	`ªad_block
()Ë!
NULL
);

892 
blockp
 = 
˝
;

893 *
s
 = '\0';

894 
	}
}

899 
	$sˇ≈a°
(
c
)

901 *
˝
;

903 
	`£tm¨k
(
c
);

904 
˝
 = 
blockp
;

906 *
˝
 !
c
) {

907 ++
˝
;

909 } *(
˝
 + 1Ë='\0' && (˝ = 
	`ªad_block
()Ë!
NULL
);

910 
blockp
 = 
˝
;

911 i‡(
˝
 !
NULL
) {

912 
	`skùªfch¨
();

914 (
blockp
);

915 
	}
}

920 
	$ªad_block
()

923 
blockÀn
 = 
	`ªad
(
symªfs
, 
block
, 
BUFSIZ
);

924 
blockp
 = 
block
;

927 
block
[
blockÀn
] = 
blockm¨k
;

928 
block
[
blockÀn
 + 1] = '\0';

931 i‡(
blockÀn
 == 0) {

932 
blockp
 = 
NULL
;

935 ++
blocknumbî
;

937 (
blockp
);

938 
	}
}

941 
	$lˇsify
(*
s
)

943 
ls
[
PATLEN
+1];

944 *
Õå
 = 
ls
;

946 *
s
) {

947 *
Õå
 = 
	`tﬁowî
(()*
s
);

948 
Õå
++;

949 
s
++;

951 *
Õå
 = '\0';

952 (
ls
);

953 
	}
}

963 
	$födˇŒedby
(*
∑âîn
)

965 
fûe
[
PATHLEN
 + 1];

966 
found_ˇŒî
 = 'n';

967 
BOOL
 
ma¸o
 = 
NO
;

969 i‡(
övîãdödex
 =
YES
) {

970 
POSTING
 *
p
;

972 
	`födãrm
(
∑âîn
);

973 (
p
 = 
	`gëpo°ög
()Ë!
NULL
) {

974 
p
->
ty≥
) {

975 
DEFINE
:

976 
FCNDEF
:

977 i‡(
	`db£ek
(
p
->
löeoff£t
) != -1 &&

978 
	`sˇ≈a°
('\t'Ë!
NULL
) {

979 
found_ˇŒî
 = 'y';

980 
	`födˇŒedbysub
(
§cfûes
[
p
->
fûeödex
], 
ma¸o
);

984 (&
found_ˇŒî
);

987 
	`sˇ≈a°
('\t'Ë!
NULL
) {

988 *
blockp
) {

990 
NEWFILE
:

991 
	`skùªfch¨
();

992 
	`„tch_°rög_‰om_dba£
(
fûe
, (file));

993 i‡(*
fûe
 == '\0') {

994 (&
found_ˇŒî
);

996 
	`¥ogªss
("Sórch", 
£¨chcou¡
, 
n§cfûes
);

999 
DEFINE
:

1000 i‡(
fûevîsi⁄
 < 10) {

1003 
ma¸o
 = 
YES
;

1006 
FCNDEF
:

1007 
	`skùªfch¨
();

1008 i‡(
	`m©ch
()) {

1009 
found_ˇŒî
 = 'y';

1010 
	`födˇŒedbysub
(
fûe
, 
ma¸o
);

1016  (&
found_ˇŒî
);

1017 
	}
}

1022 
	$födãrm
(*
∑âîn
)

1024 *
s
;

1025 
Àn
;

1026 
¥efix
[
PATLEN
 + 1];

1027 
ãrm
[
PATLEN
 + 1];

1029 
≈o°ögs
 = 0;

1030 
œ°f˙off£t
 = 0;

1031 
	`boﬁ˛ór
();

1034 (Ë
	`°r˝y
(
¥efix
, 
∑âîn
);

1035 i‡((
s
 = 
	`°Ωbrk
(
¥efix
, ".[{*+")Ë!
NULL
) {

1036 *
s
 = '\0';

1039 i‡(
ˇ£Àss
 =
YES
) {

1043 
s
 = 
¥efix
;

1044 *
s
 != '\0') {

1045 *
s
 = 
	`touµî
(()*s);

1046 ++
s
;

1050 (Ë
	`övföd
(&
övc⁄åﬁ
, 
¥efix
);

1051 i‡(
ˇ£Àss
 =
YES
) {

1052 (Ë
	`°r˝y
(
¥efix
, 
	`lˇsify
(prefix));

1056 i‡(*
¥efix
 == '\0') {

1057 (Ë
	`övf‹w¨d
(&
övc⁄åﬁ
);

1059 
Àn
 = 
	`°æí
(
¥efix
);

1061 (Ë
	`övãrm
(&
övc⁄åﬁ
, 
ãrm
);

1062 
s
 = 
ãrm
;

1063 i‡(
ˇ£Àss
 =
YES
) {

1064 
s
 = 
	`lˇsify
(s);

1067 i‡(
	`ªgexec
 (&
ªgexp
, 
s
, (
size_t
)0, 
NULL
, 0) == 0) {

1070 i‡((
po°ögp
 = 
	`boﬁfûe
(&
övc⁄åﬁ
, &
≈o°ögs
, 
BOOL_OR
)Ë=
NULL
) {

1075 i‡(
Àn
 > 0) {

1079 i‡(
ˇ£Àss
 =
YES
) {

1080 i‡(
	`°∫cmp
(
ãrm
, 
¥efix
, 
Àn
) > 0) {

1085 i‡(
	`°∫cmp
(
ãrm
, 
¥efix
, 
Àn
) != 0) {

1090 i‡(++
£¨chcou¡
 % 50 == 0) {

1091 
	`¥ogªss
("Symbﬁ†m©ched", 
£¨chcou¡
, 
tŸÆãrms
);

1093 } 
	`övf‹w¨d
(&
övc⁄åﬁ
));

1096 
£¨chcou¡
 = 0;

1097 
po°ögsfound
 = 
≈o°ögs
;

1098 
	}
}

1102 
POSTING
 *

1103 
	$gëpo°ög
()

1105 i‡(
≈o°ögs
-- <= 0) {

1106 (
NULL
);

1109 i‡(++
£¨chcou¡
 % 100 == 0) {

1110 
	`¥ogªss
("PossibÀÑe„ªn˚†ªåõved", 
£¨chcou¡
,

1111 
po°ögsfound
);

1113 (
po°ögp
++);

1114 
	}
}

1119 
	$puço°ögªf
(
POSTING
 *
p
, *
∑t
)

1121 
fun˘i⁄
[
PATLEN
 + 1];

1123 i‡(
p
->
f˙off£t
 == 0) {

1124 i‡(
p
->
ty≥
 =
FCNDEF
) {

1125 i‡(
	`db£ek
(
p
->
löeoff£t
) != -1) {

1126 
	`sˇ≈a°
(
FCNDEF
);

1127 
	`„tch_°rög_‰om_dba£
(
fun˘i⁄
,

1128 (
fun˘i⁄
));

1131 i‡(
p
->
ty≥
 !
FCNCALL
) {

1132 
	`°r˝y
(
fun˘i⁄
, 
globÆ
);

1135 i‡(
p
->
f˙off£t
 !
œ°f˙off£t
) {

1136 i‡(
	`db£ek
(
p
->
f˙off£t
) != -1) {

1137 
	`„tch_°rög_‰om_dba£
(
fun˘i⁄
, (function));

1138 
œ°f˙off£t
 = 
p
->
f˙off£t
;

1141 i‡(
	`db£ek
(
p
->
löeoff£t
) != -1) {

1142 i‡(
∑t
)

1143 
	`puåef
(0, 
§cfûes
[
p
->
fûeödex
], 
∑t
);

1145 
	`puåef
(0, 
§cfûes
[
p
->
fûeödex
], 
fun˘i⁄
);

1147 
	}
}

1152 
	$db£ek
(
off£t
)

1154 
n
;

1155 
rc
 = 0;

1157 i‡((
n
 = 
off£t
 / 
BUFSIZ
Ë!
blocknumbî
) {

1158 i‡((
rc
 = 
	`l£ek
(
symªfs
, 
n
 * 
BUFSIZ
, 0)) == -1) {

1159 
	`my≥º‹
("Lseek failed");

1160 (Ë
	`¶ìp
(3);

1161 (
rc
);

1163 (Ë
	`ªad_block
();

1164 
blocknumbî
 = 
n
;

1166 
blockp
 = 
block
 + 
off£t
 % 
BUFSIZ
;

1167 (
rc
);

1168 
	}
}

1171 
	$födˇŒedbysub
(*
fûe
, 
BOOL
 
ma¸o
)

1174 
	`sˇ≈a°
('\t'Ë!
NULL
) {

1175 *
blockp
) {

1177 
DEFINE
:

1178 i‡(
fûevîsi⁄
 >= 10) {

1179 
	`sˇ≈a°
('\t'Ë!
NULL
 &&

1180 *
blockp
 !
DEFINEEND
)

1185 
FCNCALL
:

1188 (Ë
	`Ârötf
(
ªfsfound
, "%†", 
fûe
);

1191 
	`skùªfch¨
();

1192 
	`puéöe
(
ªfsfound
);

1193 (Ë
	`putc
(' ', 
ªfsfound
);

1196 
	`putsour˚
(1, 
ªfsfound
);

1199 
DEFINEEND
:

1201 i‡(
övîãdödex
 =
NO
) {

1202 i‡(
ma¸o
 =
YES
) {

1209 
FCNDEF
:

1211 i‡(
övîãdödex
 =
NO
) ;

1214 
FCNEND
:

1215 
NEWFILE
:

1219 
	}
}

	@fscanner.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 5

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

59 #i‚de‡
INT8_MIN


60 
	#INT8_MIN
 (-128)

	)

62 #i‚de‡
INT16_MIN


63 
	#INT16_MIN
 (-32767-1)

	)

65 #i‚de‡
INT32_MIN


66 
	#INT32_MIN
 (-2147483647-1)

	)

68 #i‚de‡
INT8_MAX


69 
	#INT8_MAX
 (127)

	)

71 #i‚de‡
INT16_MAX


72 
	#INT16_MAX
 (32767)

	)

74 #i‚de‡
INT32_MAX


75 
	#INT32_MAX
 (2147483647)

	)

77 #i‚de‡
UINT8_MAX


78 
	#UINT8_MAX
 (255U)

	)

80 #i‚de‡
UINT16_MAX


81 
	#UINT16_MAX
 (65535U)

	)

83 #i‚de‡
UINT32_MAX


84 
	#UINT32_MAX
 (4294967295U)

	)

89 #ifde‡
__˝lu•lus


92 
	#YY_USE_CONST


	)

97 #i‡
deföed
 (
__STDC__
)

99 
	#YY_USE_CONST


	)

104 #ifde‡
YY_USE_CONST


105 
	#yyc⁄°
 c⁄°

	)

107 
	#yyc⁄°


	)

111 
	#YY_NULL
 0

	)

118 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

124 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

130 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

131 
	#YYSTATE
 
YY_START


	)

134 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

137 
	#YY_NEW_FILE
 
	`yyª°¨t
(
yyö
 )

	)

139 
	#YY_END_OF_BUFFER_CHAR
 0

	)

142 #i‚de‡
YY_BUF_SIZE


143 
	#YY_BUF_SIZE
 16384

	)

148 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

150 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


151 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

152 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

155 
yyÀng
;

157 
FILE
 *
yyö
, *
yyout
;

159 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

160 
	#EOB_ACT_END_OF_FILE
 1

	)

161 
	#EOB_ACT_LAST_MATCH
 2

	)

163 
	#YY_LESS_LINENO
(
n
)

	)

166 
	#yyÀss
(
n
) \

170 
yyÀss_ma¸o_¨g
 = (
n
); \

171 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

172 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

173 
YY_RESTORE_YY_MORE_OFFSET
 \

174 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

175 
YY_DO_BEFORE_ACTION
; \

177  0 )

	)

179 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

181 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


182 
	#YY_TYPEDEF_YY_SIZE_T


	)

183 
size_t
 
	tyy_size_t
;

186 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


187 
	#YY_STRUCT_YY_BUFFER_STATE


	)

188 
	syy_buf„r_°©e


190 
FILE
 *
	myy_öput_fûe
;

192 *
	myy_ch_buf
;

193 *
	myy_buf_pos
;

198 
yy_size_t
 
	myy_buf_size
;

203 
	myy_n_ch¨s
;

209 
	myy_is_our_buf„r
;

216 
	myy_is_öãø˘ive
;

222 
	myy_©_bﬁ
;

224 
	myy_bs_löío
;

225 
	myy_bs_cﬁumn
;

230 
	myy_fûl_buf„r
;

232 
	myy_buf„r_°©us
;

234 
	#YY_BUFFER_NEW
 0

	)

235 
	#YY_BUFFER_NORMAL
 1

	)

246 
	#YY_BUFFER_EOF_PENDING
 2

	)

252 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

253 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

254 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

262 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

263 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

264 : 
NULL
)

	)

269 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

272 
	gyy_hﬁd_ch¨
;

273 
	gyy_n_ch¨s
;

274 
	gyyÀng
;

277 *
	gyy_c_buf_p
 = (*) 0;

278 
	gyy_öô
 = 0;

279 
	gyy_°¨t
 = 0;

284 
	gyy_did_buf„r_swôch_⁄_eof
;

286 
yyª°¨t
 (
FILE
 *
öput_fûe
 );

287 
yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

288 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

289 
yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

290 
yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

291 
yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

292 
yyp›_buf„r_°©e
 ();

294 
yyísuª_buf„r_°ack
 ();

295 
yy_lﬂd_buf„r_°©e
 ();

296 
yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

298 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

300 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

301 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

302 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

304 *
yyÆloc
 (
yy_size_t
 );

305 *
yyªÆloc
 (*,
yy_size_t
 );

306 
yy‰ì
 (* );

308 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

310 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

312 i‡–! 
YY_CURRENT_BUFFER
 ){ \

313 
	`yyísuª_buf„r_°ack
 (); \

314 
YY_CURRENT_BUFFER_LVALUE
 = \

315 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

317 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

318 }

	)

320 
	#yy_£t_bﬁ
(
©_bﬁ
) \

322 i‡–! 
YY_CURRENT_BUFFER
 ){\

323 
	`yyísuª_buf„r_°ack
 (); \

324 
YY_CURRENT_BUFFER_LVALUE
 = \

325 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

327 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

328 }

	)

330 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

334 
	#yywøp
(
n
Ë1

	)

335 
	#YY_SKIP_YYWRAP


	)

337 
	tYY_CHAR
;

339 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

341 
	tyy_°©e_ty≥
;

343 
yylöío
;

345 
	gyylöío
 = 1;

347 *
yyãxt
;

348 
	#yyãxt_±r
 
yyãxt


	)

350 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

351 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

352 
yy_gë_√xt_buf„r
 ();

353 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

358 
	#YY_DO_BEFORE_ACTION
 \

359 (
yyãxt_±r
Ë
yy_bp
; \

360 (
yyãxt_±r
Ë-(
yy_m‹e_Àn
); \

361 
yyÀng
 = (
size_t
Ë(
yy_˝
 - (
yyãxt_±r
)); \

362 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

363 *
yy_˝
 = '\0'; \

364 (
yy_c_buf_p
Ë
yy_˝
;

	)

366 
	#YY_NUM_RULES
 66

	)

367 
	#YY_END_OF_BUFFER
 67

	)

370 
	syy_å™s_öfo


372 
Êex_öt32_t
 
	myy_vîify
;

373 
Êex_öt32_t
 
	myy_nxt
;

375 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[2256] =

627 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

659 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[51] =

668 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ba£
[2967] =

998 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[2967] =

1328 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[46511] =

6448 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[46511] =

11568 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

11569 *
	gyy_œ°_ac˚±ög_˝os
;

11571 
yy_Êex_debug
;

11572 
	gyy_Êex_debug
 = 0;

11577 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

11578 
	gyy_m‹e_Êag
 = 0;

11579 
	gyy_m‹e_Àn
 = 0;

11580 
	#yym‹e
(Ë((
yy_m‹e_Êag
Ë1)

	)

11581 
	#YY_MORE_ADJ
 (
yy_m‹e_Àn
)

	)

11582 
	#YY_RESTORE_YY_MORE_OFFSET


	)

11583 *
	gyyãxt
;

11622 
	~"globÆ.h
"

11623 
	~"Æloc.h
"

11624 
	~"sˇ¬î.h
"

11625 
	~"lookup.h
"

11627 
	~<as£π.h
>

11632 #i‚de‡
FLEX_SCANNER


11633 #îr‹ 
S‹ry
, 
this
 
sˇ¬î
 
√eds
 
Êex
. 
It
 
is
 
nŸ
 
ußbÀ
 
wôh
 
AT
&
T
 
Lex
.

11636 
	#IFLEVELINC
 5

	)

11637 
	#YY_NO_TOP_STATE
 1

	)

11639 c⁄° 
	grcsid
[] = "$Id: fscanner.l,v 1.13 2007/01/07 12:41:23 broeker Exp $";

11641 
	gfú°
;

11642 
	gœ°
;

11643 
	glöío
;

11644 
	gmyylöío
 = 1;

11649 
size_t
 
	gmy_yyÀng
 = 0;

11650 *
	gmy_yyãxt
 = 
NULL
;

11652 
BOOL
 
	g¨øydimísi⁄
;

11653 
BOOL
 
	gb∂i°ög
;

11654 
	gbø˚s
;

11655 
BOOL
 
	g˛assdef
;

11656 
BOOL
 
	gñ£ñif
;

11657 
BOOL
 
	gesudef
;

11658 
BOOL
 
	gexã∫Æ
;

11659 
	gexã∫Æbø˚s
;

11660 
BOOL
 
	gf˙def
;

11661 
BOOL
 
	gglobÆ
;

11662 
	giÊevñ
;

11663 
BOOL
 
	göôülizî
;

11664 
	göôülizîbø˚s
;

11665 
BOOL
 
	gÀx
;

11666 
	gmiÊevñ
 = 
IFLEVELINC
;

11667 *
	gmaxifbø˚s
;

11668 *
	g¥eifbø˚s
;

11669 
	g∑ªns
;

11670 
BOOL
 
	gµdeföe
;

11671 
BOOL
 
	gp£ud€lif
;

11672 
BOOL
 
	gﬁdty≥
;

11673 
BOOL
 
	gruÀs
;

11674 
BOOL
 
	gsdl
;

11675 
BOOL
 
	g°ru˘fõld
;

11676 
	gègdef
;

11677 
BOOL
 
	gãm∂©e
;

11678 
	gãm∂©ï¨ís
;

11679 
	gty≥defbø˚s
 = -1;

11680 
	gtokí
;

11681 
	gidít_°¨t
;

11691 
	#COMMENTS_BY_FLEX
 1

	)

11693 #i‡!
COMMENTS_BY_FLEX


11694 
skùcommít_öput
();

11695 
commít
();

11696 
öside°rög_öput
();

11699 
my_yym‹e
();

11701 #i‡
COMMENTS_BY_FLEX


11702 
	#skùcommít_öput
 
öput


	)

11705 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

11707 
c
 = 
	`skùcommít_öput
 (); \

11708 
ªsu…
 = (
c
 =
EOF
Ë? 
YY_NULL
 : (
buf
[0] = c, 1); \

11709 }

	)

11720 
	#INITIAL
 0

	)

11721 
	#SDL
 1

	)

11722 
	#IN_PREPROC
 2

	)

11723 
	#WAS_ENDIF
 3

	)

11724 
	#WAS_IDENTIFIER
 4

	)

11725 
	#WAS_ESU
 5

	)

11726 
	#IN_DQUOTE
 6

	)

11727 
	#IN_SQUOTE
 7

	)

11728 
	#COMMENT
 8

	)

11730 #i‚de‡
YY_NO_UNISTD_H


11735 
	~<uni°d.h
>

11738 #i‚de‡
YY_EXTRA_TYPE


11739 
	#YY_EXTRA_TYPE
 *

	)

11742 
yy_öô_globÆs
 ();

11747 
yyÀx_de°roy
 ();

11749 
yygë_debug
 ();

11751 
yy£t_debug
 (
debug_Êag
 );

11753 
YY_EXTRA_TYPE
 
yygë_exåa
 ();

11755 
yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

11757 
FILE
 *
yygë_ö
 ();

11759 
yy£t_ö
 (
FILE
 * 
ö_°r
 );

11761 
FILE
 *
yygë_out
 ();

11763 
yy£t_out
 (
FILE
 * 
out_°r
 );

11765 
yygë_Àng
 ();

11767 *
yygë_ãxt
 ();

11769 
yygë_löío
 ();

11771 
yy£t_löío
 (
löe_numbî
 );

11777 #i‚de‡
YY_SKIP_YYWRAP


11778 #ifde‡
__˝lu•lus


11779 "C" 
yywøp
 ();

11781 
yywøp
 ();

11785 
yyu≈ut
 (
c
,*
buf_±r
 );

11787 #i‚de‡
yyãxt_±r


11788 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

11791 #ifde‡
YY_NEED_STRLEN


11792 
yy_Êex_°æí
 (
yyc⁄°
 * );

11795 #i‚de‡
YY_NO_INPUT


11797 #ifde‡
__˝lu•lus


11798 
yyöput
 ();

11800 
öput
 ();

11805 
	gyy_°¨t_°ack_±r
 = 0;

11806 
	gyy_°¨t_°ack_dïth
 = 0;

11807 *
	gyy_°¨t_°ack
 = 
NULL
;

11809 
yy_push_°©e
 (
√w_°©e
 );

11811 
yy_p›_°©e
 ();

11813 
yy_t›_°©e
 ();

11816 #i‚de‡
YY_READ_BUF_SIZE


11817 
	#YY_READ_BUF_SIZE
 8192

	)

11821 #i‚de‡
ECHO


11825 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

11831 #i‚de‡
YY_INPUT


11832 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

11833 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

11835 
c
 = '*'; \

11836 
n
; \

11837  
n
 = 0;Ç < 
max_size
 && \

11838 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

11839 
buf
[
n
] = (Ë
c
; \

11840 i‡–
c
 == '\n' ) \

11841 
buf
[
n
++] = (Ë
c
; \

11842 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

11843 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

11844 
ªsu…
 = 
n
; \

11848 
î∫o
=0; \

11849  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
yyö
))==0 && 
	`„º‹
(yyin)) \

11851 if–
î∫o
 !
EINTR
) \

11853 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

11856 
î∫o
=0; \

11857 
	`˛óªº
(
yyö
); \

11861 

	)

11868 #i‚de‡
yyãrmö©e


11869 
	#yyãrmö©e
(Ë 
YY_NULL


	)

11873 #i‚de‡
YY_START_STACK_INCR


11874 
	#YY_START_STACK_INCR
 25

	)

11878 #i‚de‡
YY_FATAL_ERROR


11879 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

11887 #i‚de‡
YY_DECL


11888 
	#YY_DECL_IS_OURS
 1

	)

11890 
yyÀx
 ();

11892 
	#YY_DECL
 
	`yyÀx
 ()

	)

11898 #i‚de‡
YY_USER_ACTION


11899 
	#YY_USER_ACTION


	)

11903 #i‚de‡
YY_BREAK


11904 
	#YY_BREAK
 ;

	)

11907 
	#YY_RULE_SETUP
 \

11908 i‡–
yyÀng
 > 0 ) \

11909 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = \

11910 (
yyãxt
[
yyÀng
 - 1] == '\n'); \

11911 
YY_USER_ACTION


	)

11915 
	gYY_DECL


11917 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

11918 *
	gyy_˝
, *
	gyy_bp
;

11919 
	gyy_a˘
;

11926 i‡–!(
	gyy_öô
) )

11928 (
	gyy_öô
) = 1;

11930 #ifde‡
YY_USER_INIT


11931 
	gYY_USER_INIT
;

11934 i‡–! (
	gyy_°¨t
) )

11935 (
	gyy_°¨t
) = 1;

11937 i‡–! 
	gyyö
 )

11938 
	gyyö
 = 
°dö
;

11940 i‡–! 
	gyyout
 )

11941 
	gyyout
 = 
°dout
;

11943 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

11944 
yyísuª_buf„r_°ack
 ();

11945 
	gYY_CURRENT_BUFFER_LVALUE
 =

11946 
yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

11949 
yy_lﬂd_buf„r_°©e
( );

11954 (
	gyy_m‹e_Àn
) = 0;

11955 i‡–(
	gyy_m‹e_Êag
) )

11957 (
	gyy_m‹e_Àn
Ë(
yy_c_buf_p
Ë- (
yyãxt_±r
);

11958 (
	gyy_m‹e_Êag
) = 0;

11960 
	gyy_˝
 = (
yy_c_buf_p
);

11963 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

11968 
	gyy_bp
 = 
yy_˝
;

11970 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

11971 
	gyy_cuºít_°©e
 +
YY_AT_BOL
();

11972 
	gyy_m©ch
:

11975 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

11976 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

11978 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

11979 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

11981  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

11983 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

11984 i‡–
	gyy_cuºít_°©e
 >= 2256 )

11985 
yy_c
 = 
yy_mëa
[() yy_c];

11987 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

11988 ++
	gyy_˝
;

11990  
	gyy_ba£
[
yy_cuºít_°©e
] != 46460 );

11992 
	gyy_föd_a˘i⁄
:

11993 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

11994 i‡–
	gyy_a˘
 == 0 )

11996 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

11997 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

11998 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

12001 
	gYY_DO_BEFORE_ACTION
;

12003 
	gdo_a˘i⁄
:

12005  
yy_a˘
 )

12009 *
yy_˝
 = (
yy_hﬁd_ch¨
);

12010 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

12011 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

12012 
	gyy_föd_a˘i⁄
;

12015 
YY_RULE_SETUP


12018 
globÆ
 = 
YES
;

12019 
	gm‹e
;

12022 
YY_BREAK


12024 
YY_RULE_SETUP


12027 
globÆ
 = 
NO
;

12028 
	gm‹e
;

12031 
YY_BREAK


12033 
YY_RULE_SETUP


12036 
bø˚s
 = 0;

12037 i‡(
	gruÀs
 =
NO
) {

12039 
ruÀs
 = 
YES
;

12043 
my_yym‹e
();

12046 (Ë
°rˇt
(
my_yyãxt
, " /* ");

12047 
	gfú°
 = 
°æí
(
my_yyãxt
);

12048 i‡(
	gÀx
 =
YES
) {

12049 (Ë
°rˇt
(
my_yyãxt
, "yylex");

12052 *
	gs
 = " yylex()";

12053 *
	g˝
 = 
s
 + 
°æí
(s);

12054 --
	g˝
 >
s
) {

12055 
u≈ut
(*
˝
);

12057 (Ë
°rˇt
(
my_yyãxt
, "yyparse");

12059 
	gœ°
 = 
°æí
(
my_yyãxt
);

12060 (Ë
°rˇt
(
my_yyãxt
, " */");

12061 
	gmy_yyÀng
 = 
°æí
(
my_yyãxt
);

12062 (
	gFCNDEF
);

12065 
	gruÀs
 = 
NO
;

12066 
	gglobÆ
 = 
YES
;

12067 
	gœ°
 = 
fú°
;

12068 
my_yym‹e
();

12069 (
	gFCNEND
);

12073 
YY_BREAK


12075 
YY_RULE_SETUP


12078 
bø˚s
 = 1;

12079 
	gf˙def
 = 
YES
;

12080 
	gtokí
 = 
FCNDEF
;

12081 
	gfödidít
;

12084 
YY_BREAK


12086 
YY_RULE_SETUP


12089 
íd°©e
;

12092 
YY_BREAK


12094 
YY_RULE_SETUP


12097 ++
bø˚s
;

12101 i‡(
	gègdef
) {

12102 i‡(
	gbø˚s
 == 1) {

12103 
esudef
 = 
YES
;

12105 
	gtokí
 = 
ègdef
;

12106 
	gègdef
 = '\0';

12107 
	gœ°
 = 
fú°
;

12108 
my_yym‹e
();

12109 (
	gtokí
);

12111 
	gm‹e
;

12114 
YY_BREAK


12116 
YY_RULE_SETUP


12119 i‡(
ruÀs
 =
NO
)

12120 
BEGIN
(
IN_PREPROC
);

12121 
	gyyÀng
 = 1;

12122 
	gm‹e
;

12125 
YY_BREAK


12127 
YY_RULE_SETUP


12134 
BEGIN
(
WAS_ENDIF
);

12135 
	gm‹e
;

12138 
YY_BREAK


12141 
YY_RULE_SETUP


12154 i‡(
ñ£ñif
 =
YES
) {

12155 
ídif
;

12158 
	gp£ud€lif
 = 
YES
;

12159 
BEGIN
(
INITIAL
);

12160 
yyÀss
(1);

12161 
yy_£t_bﬁ
(1);

12162 
	geﬁ
;

12165 
YY_BREAK


12168 
YY_RULE_SETUP


12171 
ídif
:

12172 i‡(
iÊevñ
 > 0) {

12174 i‡(
bø˚s
 < 
maxifbø˚s
[--
iÊevñ
]) {

12175 
bø˚s
 = 
maxifbø˚s
[
iÊevñ
];

12178 
BEGIN
(
INITIAL
);

12179 
yyÀss
(1);

12180 
yy_£t_bﬁ
(1);

12181 
	geﬁ
;

12184 
YY_BREAK


12190 
YY_RULE_SETUP


12193 
ñ£ñif
 = 
NO
;

12194 i‡(
	gp£ud€lif
 =
YES
) {

12195 
p£ud€lif
 = 
NO
;

12196 
	gñif
;

12200 i‡(
	giÊevñ
 =
miÊevñ
) {

12201 
miÊevñ
 +
IFLEVELINC
;

12202 
	gmaxifbø˚s
 = 
myªÆloc
(
maxifbø˚s
, 
miÊevñ
 * ());

12203 
	g¥eifbø˚s
 = 
myªÆloc
(
¥eifbø˚s
, 
miÊevñ
 * ());

12206 
	g¥eifbø˚s
[
iÊevñ
] = 
bø˚s
;

12207 
	gmaxifbø˚s
[
iÊevñ
++] = 0;

12208 
BEGIN
(
INITIAL
);

12209 
	gm‹e
;

12212 
YY_BREAK


12214 
YY_RULE_SETUP


12217 
ñ£ñif
 = 
YES
;

12218 i‡(
	giÊevñ
 > 0) {

12221 i‡(
	gbø˚s
 > 
	gmaxifbø˚s
[
iÊevñ
 - 1]) {

12222 
	gmaxifbø˚s
[
iÊevñ
 - 1] = 
bø˚s
;

12225 
	gbø˚s
 = 
¥eifbø˚s
[
iÊevñ
 - 1];

12227 
BEGIN
(
INITIAL
);

12228 
	gm‹e
;

12231 
YY_BREAK


12233 
YY_RULE_SETUP


12237 
ñif
:

12238 i‡(
iÊevñ
 > 0) {

12241 i‡(
bø˚s
 > 
maxifbø˚s
[
iÊevñ
 - 1]) {

12242 
maxifbø˚s
[
iÊevñ
 - 1] = 
bø˚s
;

12245 
	gbø˚s
 = 
¥eifbø˚s
[
iÊevñ
 - 1];

12247 
BEGIN
(
INITIAL
);

12248 
	gm‹e
;

12251 
YY_BREAK


12255 
YY_RULE_SETUP


12258 *
s
;

12259 
	gªmembî
 = 
yyãxt
[
yyÀng
-1];

12261 
my_yym‹e
();

12262 
	gs
 = 
°Ωbrk
(
my_yyãxt
, "\"<");

12263 
	gmy_yyãxt
[
my_yyÀng
-1] = '\0';

12264 
öcfûe
(
s
 + 1, s);

12265 
	gmy_yyãxt
[
my_yyÀng
-1] = 
ªmembî
;

12266 
	gfú°
 = 
s
 - 
my_yyãxt
;

12267 
	gœ°
 = 
my_yyÀng
 - 1;

12268 i‡(
	gcom¥ess
 =
YES
) {

12269 
my_yyãxt
[0] = '\2';

12271 
BEGIN
(
INITIAL
);

12272 (
	gINCLUDE
);

12275 
YY_BREAK


12277 
YY_RULE_SETUP


12281 i‡(
bø˚s
 =
öôülizîbø˚s
) {

12282 
öôülizîbø˚s
 = -1;

12283 
	göôülizî
 = 
NO
;

12285 i‡(--
	gbø˚s
 <= 0) {

12286 
íd°©e
:

12287 
bø˚s
 = 0;

12288 
	g˛assdef
 = 
NO
;

12290 i‡(
	gbø˚s
 =0 || (
bø˚s
 =1 && 
˛assdef
 =
YES
)) {

12293 i‡(
esudef
 =
YES
) {

12294 
esudef
 = 
NO
;

12297 i‡(
	gf˙def
 =
YES
) {

12298 
f˙def
 = 
NO
;

12299 
	gœ°
 = 
fú°
;

12300 
my_yym‹e
();

12301 (
	gFCNEND
);

12304 
	gm‹e
;

12307 
YY_BREAK


12309 
YY_RULE_SETUP


12312 ++
∑ªns
;

12313 
	gm‹e
;

12316 
YY_BREAK


12318 
YY_RULE_SETUP


12321 i‡(--
∑ªns
 <= 0) {

12322 
∑ªns
 = 0;

12325 i‡(
	g∑ªns
 =
ãm∂©ï¨ís
) {

12326 
ãm∂©ï¨ís
 = -1;

12327 
	gãm∂©e
 = 
NO
;

12329 
	gm‹e
;

12332 
YY_BREAK


12334 
YY_RULE_SETUP


12337 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] != '#') {

12338 
öôülizîbø˚s
 = 
bø˚s
;

12339 
	göôülizî
 = 
YES
;

12341 
	gm‹e
;

12344 
YY_BREAK


12346 
YY_RULE_SETUP


12349 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] != '#') {

12350 
°ru˘fõld
 = 
YES
;

12352 
	gm‹e
;

12355 
YY_BREAK


12357 
YY_RULE_SETUP


12360 i‡(
bø˚s
 =
öôülizîbø˚s
) {

12361 
öôülizîbø˚s
 = -1;

12362 
	göôülizî
 = 
NO
;

12364 
	g°ru˘fõld
 = 
NO
;

12365 
	gm‹e
;

12368 
YY_BREAK


12370 
YY_RULE_SETUP


12373 i‡(
bø˚s
 == 0) {

12374 
esudef
 = 
NO
;

12377 i‡(
	gbø˚s
 =
ty≥defbø˚s
) {

12378 
ty≥defbø˚s
 = -1;

12381 i‡(
	gbø˚s
 =
exã∫Æbø˚s
) {

12382 
exã∫Æbø˚s
 = -1;

12383 
	gexã∫Æ
 = 
NO
;

12385 
	g°ru˘fõld
 = 
NO
;

12386 
	göôülizî
 = 
NO
;

12387 
	gm‹e
;

12390 
YY_BREAK


12392 
YY_RULE_SETUP


12397 
µdeföe
 = 
YES
;

12398 
	gtokí
 = 
DEFINE
;

12399 i‡(
	gcom¥ess
 =
YES
) {

12400 
my_yyãxt
[0] = '\1';

12402 
	gfödidít
:

12406 
my_yym‹e
();

12407 
	gfú°
 = 
my_yyÀng
 - 1;

12408 
	gmy_yyãxt
[
fú°
] !' ' && 
my_yyãxt
[first] != '\t') {

12409 --
fú°
;

12411 ++
	gfú°
;

12412 
	gœ°
 = 
my_yyÀng
;

12413 
BEGIN
(
INITIAL
);

12414 
	gdeföôi⁄
;

12417 
YY_BREAK


12423 
YY_RULE_SETUP


12426 
BEGIN
(
INITIAL
);

12427 
	gm‹e
;

12430 
YY_BREAK


12433 
YY_RULE_SETUP


12436 
˛assdef
 = 
YES
;

12437 
	gègdef
 = 'c';

12438 
yyÀss
(5);

12439 
yy_£t_bﬁ
(0);

12440 
	gm‹e
;

12443 
YY_BREAK


12445 
YY_RULE_SETUP


12448 
idít_°¨t
 = 
fú°
;

12449 
BEGIN
(
WAS_ESU
);

12450 
	gm‹e
;

12452 
YY_BREAK


12456 
YY_RULE_SETUP


12459 
ègdef
 = 
my_yyãxt
[
idít_°¨t
];

12460 
BEGIN
(
WAS_IDENTIFIER
);

12461 
	gidít
;

12463 
YY_BREAK


12466 
YY_RULE_SETUP


12469 
ègdef
 = 
my_yyãxt
[
idít_°¨t
];

12470 
BEGIN
(
INITIAL
);

12471 i‡(
	gbø˚s
 == 0) {

12472 
esudef
 = 
YES
;

12474 
	gœ°
 = 
fú°
;

12475 
yyÀss
(0);

12476 
	gègdef
 = '\0';

12477 
	gm‹e
;

12479 
YY_BREAK


12485 
YY_RULE_SETUP


12488 
BEGIN
(
WAS_IDENTIFIER
);

12489 
	gidít
;

12491 
YY_BREAK


12495 
YY_RULE_SETUP


12498 
yyÀss
(2);

12499 
yy_£t_bﬁ
(0);

12500 
	gm‹e
;

12502 
YY_BREAK


12504 
YY_RULE_SETUP


12507 
BEGIN
(
WAS_IDENTIFIER
);

12508 
	gidít_°¨t
 = 
fú°
;

12509 
	gm‹e
;

12512 
YY_BREAK


12516 
YY_RULE_SETUP


12530 i‡((
bø˚s
 =0 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] !'#' && 
ruÀs
 == NO) ||

12531 (
bø˚s
 =1 && 
˛assdef
 =
YES
)) {

12532 
f˙def
 = 
YES
;

12533 
	gtokí
 = 
FCNDEF
;

12534 
	gf˙
;

12537 
	gf˙ˇl
;

12540 
YY_BREAK


12543 
YY_RULE_SETUP


12546 
f˙ˇl
: i‡(
f˙def
 =
YES
 || 
µdeföe
 =YES || 
ruÀs
 == YES) {

12547 
tokí
 = 
FCNCALL
;

12548 
	gf˙
;

12551 i‡(
	gãm∂©e
 =
NO
) {

12552 
ãm∂©ï¨ís
 = 
∑ªns
;

12553 
	gãm∂©e
 = 
YES
;

12555 
	gidít
;

12558 
YY_BREAK


12561 
YY_RULE_SETUP


12564 
idít
;

12567 
YY_BREAK


12570 
YY_RULE_SETUP


12573 *
s
;

12575 i‡(
	gglobÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] != '#' &&

12576 
exã∫Æ
 =
NO
 && 
öôülizî
 == NO &&

12577 
¨øydimísi⁄
 =
NO
 && 
°ru˘fõld
 == NO &&

12578 
ãm∂©e
 =
NO
 && 
f˙def
 == NO) {

12579 i‡(
esudef
 =
YES
) {

12581 
tokí
 = 
MEMBERDEF
;

12583 
	gtokí
 = 
GLOBALDEF
;

12586 
	gidít
:

12587 
tokí
 = 
IDENT
;

12589 
	gf˙
:

12590 i‡(
YYSTATE
 =
WAS_IDENTIFIER
) {

12592 
œ°
 = 
fú°
;

12593 
	gfú°
 = 
idít_°¨t
;

12594 
yyÀss
(0);

12600 
yy_£t_bﬁ
(0);

12601 
BEGIN
(
INITIAL
);

12603 
my_yym‹e
();

12604 
	gœ°
 = 
my_yyÀng
;

12606 
	gdeföôi⁄
:

12609 i‡(
yyÀng
 > 
STMTMAX
) {

12610 
c
;

12613 
w¨nög
("lineÅooÜong");

12614 (
	gc
 = 
skùcommít_öput
()Ë> 
LEXEOF
) {

12615 i‡(
c
 == '\n') {

12616 
u≈ut
(
c
);

12622 i‡(
	gyyÀng
 > 
	gPATLEN
) {

12623 
w¨nög
("symbolÅooÜong");

12624 
	gmy_yyÀng
 = 
fú°
 + 
PATLEN
;

12625 
	gmy_yyãxt
[
my_yyÀng
] = '\0';

12629 i‡((
	gs
 = 
lookup
(
my_yyãxt
 + 
fú°
)Ë!
NULL
) {

12630 
fú°
 = 
my_yyÀng
;

12633 i‡(
	gs
 =
ty≥de·ext
) {

12634 
ty≥defbø˚s
 = 
bø˚s
;

12635 
	gﬁdty≥
 = 
YES
;

12640 i‡(
	gs
 =
íumãxt
 || 
s
 =
°ru˘ãxt
 || s =
uni⁄ãxt
) {

12642 } i‡(
s
 =
exã∫ãxt
) {

12644 
exã∫Æbø˚s
 = 
bø˚s
;

12645 
	gexã∫Æ
 = 
YES
;

12646 } i‡(
	gãm∂©ï¨ís
 =
∑ªns
 && 
ãm∂©e
 =
YES
) {

12649 
ãm∂©ï¨ís
 = -1;

12650 
	gãm∂©e
 = 
NO
;

12654 
	gﬁdty≥
 = 
NO
;

12662 i‡(
	gègdef
 && 
°∫ŸequÆ
(
my_yyãxt
 + 
fú°
, "class")) {

12663 
	gtokí
 = 
ègdef
;

12664 
	gègdef
 = '\0';

12665 i‡(
	gbø˚s
 == 0) {

12666 
esudef
 = 
YES
;

12668 } i‡(
	gbø˚s
 =
ty≥defbø˚s
 && 
ﬁdty≥
 =
NO
 &&

12669 
¨øydimísi⁄
 =
NO
) {

12671 
tokí
 = 
TYPEDEF
;

12673 
	gﬁdty≥
 = 
NO
;

12676 (
	gtokí
);

12680 
YY_BREAK


12683 
YY_RULE_SETUP


12686 
¨øydimísi⁄
 = 
YES
;

12687 
	gm‹e
;

12690 
YY_BREAK


12692 
YY_RULE_SETUP


12695 
¨øydimísi⁄
 = 
NO
;

12696 
	gm‹e
;

12699 
YY_BREAK


12702 
YY_RULE_SETUP


12706 
yyÀng
 = 1;

12707 
my_yym‹e
();

12708 
	geﬁ
;

12711 
YY_BREAK


12714 
YY_RULE_SETUP


12717 i‡(
µdeföe
 =
YES
) {

12718 
µdeföe
 = 
NO
;

12719 
yyÀss
(
yyÀng
 - 1);

12720 
	gœ°
 = 
fú°
;

12721 
my_yym‹e
();

12722 (
	gDEFINEEND
);

12726 i‡(
	gb∂i°ög
 =
YES
) {

12727 
c
, 
i
;

12730 
skùcommít_öput
()) {

12733 
i
 = 1; 
	gi
 < 8 && 
skùcommít_öput
(Ë> 
	gLEXEOF
; ++i)

12739 (
c
 = 
skùcommít_öput
()Ë> 
LEXEOF
) {

12740 i‡(
c
 == '\n') {

12741 
u≈ut
(
c
);

12747 
u≈ut
('\n');

12751 
	geﬁ
:

12752 ++
myylöío
;

12753 
	gfú°
 = 0;

12754 
	gœ°
 = 0;

12755 i‡(
	gsymbﬁs
 > 0) {

12757 (
	gNEWLINE
);

12760 i‡(
	gmy_yyãxt
)

12761 *
	gmy_yyãxt
 = '\0';

12762 
	gmy_yyÀng
 = 0;

12763 
	glöío
 = 
myylöío
;

12765 
YY_BREAK


12767 
YY_RULE_SETUP


12770 i‡(
sdl
 =
NO
)

12771 
BEGIN
(
IN_SQUOTE
);

12772 
	gm‹e
;

12775 
YY_BREAK


12777 
YY_RULE_SETUP


12780 
BEGIN
(
INITIAL
);

12781 
	gm‹e
;

12784 
YY_BREAK


12786 
YY_RULE_SETUP


12789 
BEGIN
(
IN_DQUOTE
);

12790 
	gm‹e
;

12793 
YY_BREAK


12795 
YY_RULE_SETUP


12798 
BEGIN
(
INITIAL
);

12799 
	gm‹e
;

12802 
YY_BREAK


12806 
YY_RULE_SETUP


12809 
BEGIN
(
INITIAL
);

12810 
	geﬁ
;

12813 
YY_BREAK


12817 
YY_RULE_SETUP


12820 
m‹e
;

12823 
YY_BREAK


12826 
YY_RULE_SETUP


12829 
myylöío
++;

12830 
	gm‹e
;

12833 
YY_BREAK


12836 
YY_RULE_SETUP


12840 
YY_BREAK


12843 
YY_RULE_SETUP


12846 
u≈ut
('\n');

12848 
YY_BREAK


12850 
YY_RULE_SETUP


12854 
u≈ut
(' ');

12856 
YY_BREAK


12858 
YY_RULE_SETUP


12861 
u≈ut
(' ');

12863 
YY_BREAK


12865 
YY_RULE_SETUP


12867 
yy_push_°©e
(
COMMENT
);

12868 
YY_BREAK


12873 
YY_RULE_SETUP


12876 
YY_BREAK


12882 
YY_RULE_SETUP


12885 i‡(
µdeföe
 =
NO
) {

12886 
eﬁ
;

12888 ++
	gmyylöío
;

12892 
YY_BREAK


12894 
YY_RULE_SETUP


12898 
u≈ut
(' ');

12899 
yy_p›_°©e
();

12901 
YY_BREAK


12905 
YY_RULE_SETUP


12909 
eﬁ
;

12912 
YY_BREAK


12918 
YY_RULE_SETUP


12921 
m‹e
:

12922 
my_yym‹e
();

12923 
	gfú°
 = 
my_yyÀng
;

12925 
YY_BREAK


12927 
YY_RULE_SETUP


12929 
ECHO
;

12930 
	gYY_BREAK


12932 
YY_STATE_EOF
(
INITIAL
):

12933 
YY_STATE_EOF
(
SDL
):

12934 
YY_STATE_EOF
(
IN_PREPROC
):

12935 
YY_STATE_EOF
(
WAS_ENDIF
):

12936 
YY_STATE_EOF
(
WAS_IDENTIFIER
):

12937 
YY_STATE_EOF
(
WAS_ESU
):

12938 
YY_STATE_EOF
(
IN_DQUOTE
):

12939 
YY_STATE_EOF
(
IN_SQUOTE
):

12940 
YY_STATE_EOF
(
COMMENT
):

12941 
yyãrmö©e
();

12943 
	gYY_END_OF_BUFFER
:

12946 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

12949 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

12950 
YY_RESTORE_YY_MORE_OFFSET


12952 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

12963 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

12964 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

12965 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

12975 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

12977 
yy_°©e_ty≥
 
yy_√xt_°©e
;

12979 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

12981 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

12992 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

12994 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

12996 i‡–
	gyy_√xt_°©e
 )

12999 
	gyy_˝
 = ++(
yy_c_buf_p
);

13000 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

13001 
	gyy_m©ch
;

13006 
	gyy_˝
 = (
yy_c_buf_p
);

13007 
	gyy_föd_a˘i⁄
;

13011  
yy_gë_√xt_buf„r
( ) )

13013 
	gEOB_ACT_END_OF_FILE
:

13015 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

13017 i‡–
yywøp
( ) )

13028 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

13030 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

13031 
	gdo_a˘i⁄
;

13036 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

13037 
	gYY_NEW_FILE
;

13042 
	gEOB_ACT_CONTINUE_SCAN
:

13043 (
yy_c_buf_p
) =

13044 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

13046 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

13048 
	gyy_˝
 = (
yy_c_buf_p
);

13049 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

13050 
	gyy_m©ch
;

13052 
	gEOB_ACT_LAST_MATCH
:

13053 (
yy_c_buf_p
) =

13054 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

13056 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

13058 
	gyy_˝
 = (
yy_c_buf_p
);

13059 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

13060 
	gyy_föd_a˘i⁄
;

13066 
YY_FATAL_ERROR
(

13079 
	$yy_gë_√xt_buf„r
 ()

13081 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

13082 *
sour˚
 = (
yyãxt_±r
);

13083 
numbî_to_move
, 
i
;

13084 
ªt_vÆ
;

13086 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

13087 
	`YY_FATAL_ERROR
(

13090 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

13092 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

13097  
EOB_ACT_END_OF_FILE
;

13105  
EOB_ACT_LAST_MATCH
;

13112 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

13114  
i
 = 0; i < 
numbî_to_move
; ++i )

13115 *(
de°
++Ë*(
sour˚
++);

13117 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

13121 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

13125 
num_to_ªad
 =

13126 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

13128  
num_to_ªad
 <= 0 )

13132 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

13134 
yy_c_buf_p_off£t
 =

13135 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

13137 i‡–
b
->
yy_is_our_buf„r
 )

13139 
√w_size
 = 
b
->
yy_buf_size
 * 2;

13141 i‡–
√w_size
 <= 0 )

13142 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

13144 
b
->
yy_buf_size
 *= 2;

13146 
b
->
yy_ch_buf
 = (*)

13148 
	`yyªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

13152 
b
->
yy_ch_buf
 = 0;

13154 i‡–! 
b
->
yy_ch_buf
 )

13155 
	`YY_FATAL_ERROR
(

13158 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

13160 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

13161 
numbî_to_move
 - 1;

13165 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

13166 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

13169 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

13170 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

13172 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

13175 i‡–(
yy_n_ch¨s
) == 0 )

13177 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

13179 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

13180 
	`yyª°¨t
(
yyö
 );

13185 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

13186 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

13187 
YY_BUFFER_EOF_PENDING
;

13192 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

13194 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

13196 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

13197 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

13198 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

13199 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

13202 (
yy_n_ch¨s
Ë+
numbî_to_move
;

13203 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

13204 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

13206 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

13208  
ªt_vÆ
;

13209 
	}
}

13213 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

13215 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

13216 *
yy_˝
;

13218 
yy_cuºít_°©e
 = (
yy_°¨t
);

13219 
yy_cuºít_°©e
 +
	`YY_AT_BOL
();

13221  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

13223 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

13224 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

13226 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

13227 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

13229  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

13231 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

13232 i‡–
yy_cuºít_°©e
 >= 2256 )

13233 
yy_c
 = 
yy_mëa
[() yy_c];

13235 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

13238  
yy_cuºít_°©e
;

13239 
	}
}

13246 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

13248 
yy_is_jam
;

13249 *
yy_˝
 = (
yy_c_buf_p
);

13251 
YY_CHAR
 
yy_c
 = 1;

13252 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

13254 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

13255 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

13257  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

13259 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

13260 i‡–
yy_cuºít_°©e
 >= 2256 )

13261 
yy_c
 = 
yy_mëa
[() yy_c];

13263 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

13264 
yy_is_jam
 = (
yy_cuºít_°©e
 == 2255);

13266  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

13267 
	}
}

13269 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

13271 *
yy_˝
;

13273 
yy_˝
 = (
yy_c_buf_p
);

13276 *
yy_˝
 = (
yy_hﬁd_ch¨
);

13278 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

13281 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

13282 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

13283 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

13284 *
sour˚
 =

13285 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

13287  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

13288 *--
de°
 = *--
sour˚
;

13290 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

13291 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

13292 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

13293 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

13295 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

13296 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

13299 *--
yy_˝
 = (Ë
c
;

13301 (
yyãxt_±r
Ë
yy_bp
;

13302 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

13303 (
yy_c_buf_p
Ë
yy_˝
;

13304 
	}
}

13306 #i‚de‡
YY_NO_INPUT


13307 #ifde‡
__˝lu•lus


13308 
	$yyöput
 ()

13310 
	$öput
 ()

13314 
c
;

13316 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

13318 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

13324 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

13326 *(
yy_c_buf_p
) = '\0';

13330 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

13331 ++(
yy_c_buf_p
);

13333  
	`yy_gë_√xt_buf„r
( ) )

13335 
EOB_ACT_LAST_MATCH
:

13347 
	`yyª°¨t
(
yyö
 );

13351 
EOB_ACT_END_OF_FILE
:

13353 i‡–
	`yywøp
( ) )

13354  
EOF
;

13356 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

13357 
YY_NEW_FILE
;

13358 #ifde‡
__˝lu•lus


13359  
	`yyöput
();

13361  
	`öput
();

13365 
EOB_ACT_CONTINUE_SCAN
:

13366 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

13372 
c
 = *(*Ë(
yy_c_buf_p
);

13373 *(
yy_c_buf_p
) = '\0';

13374 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

13376 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = (
c
 == '\n');

13378  
c
;

13379 
	}
}

13387 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

13390 i‡–! 
YY_CURRENT_BUFFER
 ){

13391 
	`yyísuª_buf„r_°ack
 ();

13392 
YY_CURRENT_BUFFER_LVALUE
 =

13393 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

13396 
	`yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

13397 
	`yy_lﬂd_buf„r_°©e
( );

13398 
	}
}

13404 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

13412 
	`yyísuª_buf„r_°ack
 ();

13413 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

13416 i‡–
YY_CURRENT_BUFFER
 )

13419 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

13420 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

13421 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

13424 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

13425 
	`yy_lﬂd_buf„r_°©e
( );

13432 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

13433 
	}
}

13435 
	$yy_lﬂd_buf„r_°©e
 ()

13437 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

13438 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

13439 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

13440 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

13441 
	}
}

13449 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

13451 
YY_BUFFER_STATE
 
b
;

13453 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

13454 i‡–! 
b
 )

13455 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

13457 
b
->
yy_buf_size
 = 
size
;

13462 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
(b->
yy_buf_size
 + 2 );

13463 i‡–! 
b
->
yy_ch_buf
 )

13464 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

13466 
b
->
yy_is_our_buf„r
 = 1;

13468 
	`yy_öô_buf„r
(
b
,
fûe
 );

13470  
b
;

13471 
	}
}

13477 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

13480 i‡–! 
b
 )

13483 i‡–
b
 =
YY_CURRENT_BUFFER
 )

13484 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

13486 i‡–
b
->
yy_is_our_buf„r
 )

13487 
	`yy‰ì
((*Ë
b
->
yy_ch_buf
 );

13489 
	`yy‰ì
((*Ë
b
 );

13490 
	}
}

13492 #i‚de‡
__˝lu•lus


13493 
ißây
 ();

13500 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

13503 
€ºno
 = 
î∫o
;

13505 
	`yy_Êush_buf„r
(
b
 );

13507 
b
->
yy_öput_fûe
 = 
fûe
;

13508 
b
->
yy_fûl_buf„r
 = 1;

13514 i‡(
b
 !
YY_CURRENT_BUFFER
){

13515 
b
->
yy_bs_löío
 = 1;

13516 
b
->
yy_bs_cﬁumn
 = 0;

13519 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

13521 
î∫o
 = 
€ºno
;

13522 
	}
}

13528 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

13530 i‡–! 
b
 )

13533 
b
->
yy_n_ch¨s
 = 0;

13539 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

13540 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

13542 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

13544 
b
->
yy_©_bﬁ
 = 1;

13545 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

13547 i‡–
b
 =
YY_CURRENT_BUFFER
 )

13548 
	`yy_lﬂd_buf„r_°©e
( );

13549 
	}
}

13557 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

13559 i‡(
√w_buf„r
 =
NULL
)

13562 
	`yyísuª_buf„r_°ack
();

13565 i‡–
YY_CURRENT_BUFFER
 )

13568 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

13569 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

13570 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

13574 i‡(
YY_CURRENT_BUFFER
)

13575 (
yy_buf„r_°ack_t›
)++;

13576 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

13579 
	`yy_lﬂd_buf„r_°©e
( );

13580 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

13581 
	}
}

13587 
	$yyp›_buf„r_°©e
 ()

13589 i‡(!
YY_CURRENT_BUFFER
)

13592 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

13593 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

13594 i‡((
yy_buf„r_°ack_t›
) > 0)

13595 --(
yy_buf„r_°ack_t›
);

13597 i‡(
YY_CURRENT_BUFFER
) {

13598 
	`yy_lﬂd_buf„r_°©e
( );

13599 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

13601 
	}
}

13606 
	$yyísuª_buf„r_°ack
 ()

13608 
num_to_Æloc
;

13610 i‡(!(
yy_buf„r_°ack
)) {

13616 
num_to_Æloc
 = 1;

13617 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


13618 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

13620 i‡–! (
yy_buf„r_°ack
) )

13621 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

13623 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

13625 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

13626 (
yy_buf„r_°ack_t›
) = 0;

13630 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

13633 
grow_size
 = 8 ;

13635 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

13636 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


13637 ((
yy_buf„r_°ack
),

13638 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

13640 i‡–! (
yy_buf„r_°ack
) )

13641 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

13644 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

13645 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

13647 
	}
}

13655 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

13657 
YY_BUFFER_STATE
 
b
;

13659 i‡–
size
 < 2 ||

13660 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

13661 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

13665 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

13666 i‡–! 
b
 )

13667 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

13669 
b
->
yy_buf_size
 = 
size
 - 2;

13670 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

13671 
b
->
yy_is_our_buf„r
 = 0;

13672 
b
->
yy_öput_fûe
 = 0;

13673 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

13674 
b
->
yy_is_öãø˘ive
 = 0;

13675 
b
->
yy_©_bﬁ
 = 1;

13676 
b
->
yy_fûl_buf„r
 = 0;

13677 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

13679 
	`yy_swôch_to_buf„r
(
b
 );

13681  
b
;

13682 
	}
}

13692 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

13695  
	`yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

13696 
	}
}

13705 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

13707 
YY_BUFFER_STATE
 
b
;

13708 *
buf
;

13709 
yy_size_t
 
n
;

13710 
i
;

13713 
n
 = 
_yybyãs_Àn
 + 2;

13714 
buf
 = (*Ë
	`yyÆloc
(
n
 );

13715 i‡–! 
buf
 )

13716 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

13718  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

13719 
buf
[
i
] = 
yybyãs
[i];

13721 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

13723 
b
 = 
	`yy_sˇn_buf„r
(
buf
,
n
 );

13724 i‡–! 
b
 )

13725 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

13730 
b
->
yy_is_our_buf„r
 = 1;

13732  
b
;

13733 
	}
}

13735 
	$yy_push_°©e
 (
√w_°©e
 )

13737 i‡–(
yy_°¨t_°ack_±r
Ë>(
yy_°¨t_°ack_dïth
) )

13739 
yy_size_t
 
√w_size
;

13741 (
yy_°¨t_°ack_dïth
Ë+
YY_START_STACK_INCR
;

13742 
√w_size
 = (
yy_°¨t_°ack_dïth
) * ( );

13744 i‡–! (
yy_°¨t_°ack
) )

13745 (
yy_°¨t_°ack
Ë(*Ë
	`yyÆloc
(
√w_size
 );

13748 (
yy_°¨t_°ack
Ë(*Ë
	`yyªÆloc
((*Ë(yy_°¨t_°ack),
√w_size
 );

13750 i‡–! (
yy_°¨t_°ack
) )

13751 
	`YY_FATAL_ERROR
( "out of memoryÉxpanding start-condition stack" );

13754 (
yy_°¨t_°ack
)[(
yy_°¨t_°ack_±r
)++] = 
YY_START
;

13756 
	`BEGIN
(
√w_°©e
);

13757 
	}
}

13759 
	$yy_p›_°©e
 ()

13761 i‡–--(
yy_°¨t_°ack_±r
) < 0 )

13762 
	`YY_FATAL_ERROR
( "start-condition stack underflow" );

13764 
	`BEGIN
((
yy_°¨t_°ack
)[(
yy_°¨t_°ack_±r
)]);

13765 
	}
}

13767 
	$yy_t›_°©e
 ()

13769  (
yy_°¨t_°ack
)[(
yy_°¨t_°ack_±r
) - 1];

13770 
	}
}

13772 #i‚de‡
YY_EXIT_FAILURE


13773 
	#YY_EXIT_FAILURE
 2

	)

13776 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

13778 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

13779 
	`exô
–
YY_EXIT_FAILURE
 );

13780 
	}
}

13784 #unde‡
yyÀss


13785 
	#yyÀss
(
n
) \

13789 
yyÀss_ma¸o_¨g
 = (
n
); \

13790 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

13791 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

13792 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

13793 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

13794 *(
yy_c_buf_p
) = '\0'; \

13795 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

13797  0 )

	)

13804 
	$yygë_löío
 ()

13807  
yylöío
;

13808 
	}
}

13813 
FILE
 *
	$yygë_ö
 ()

13815  
yyö
;

13816 
	}
}

13821 
FILE
 *
	$yygë_out
 ()

13823  
yyout
;

13824 
	}
}

13829 
	$yygë_Àng
 ()

13831  
yyÀng
;

13832 
	}
}

13838 *
	$yygë_ãxt
 ()

13840  
yyãxt
;

13841 
	}
}

13847 
	$yy£t_löío
 (
löe_numbî
 )

13850 
yylöío
 = 
löe_numbî
;

13851 
	}
}

13859 
	$yy£t_ö
 (
FILE
 * 
ö_°r
 )

13861 
yyö
 = 
ö_°r
 ;

13862 
	}
}

13864 
	$yy£t_out
 (
FILE
 * 
out_°r
 )

13866 
yyout
 = 
out_°r
 ;

13867 
	}
}

13869 
	$yygë_debug
 ()

13871  
yy_Êex_debug
;

13872 
	}
}

13874 
	$yy£t_debug
 (
bdebug
 )

13876 
yy_Êex_debug
 = 
bdebug
 ;

13877 
	}
}

13879 
	$yy_öô_globÆs
 ()

13885 (
yy_buf„r_°ack
) = 0;

13886 (
yy_buf„r_°ack_t›
) = 0;

13887 (
yy_buf„r_°ack_max
) = 0;

13888 (
yy_c_buf_p
) = (*) 0;

13889 (
yy_öô
) = 0;

13890 (
yy_°¨t
) = 0;

13892 (
yy_°¨t_°ack_±r
) = 0;

13893 (
yy_°¨t_°ack_dïth
) = 0;

13894 (
yy_°¨t_°ack
Ë
NULL
;

13897 #ifde‡
YY_STDINIT


13898 
yyö
 = 
°dö
;

13899 
yyout
 = 
°dout
;

13901 
yyö
 = (
FILE
 *) 0;

13902 
yyout
 = (
FILE
 *) 0;

13909 
	}
}

13912 
	$yyÀx_de°roy
 ()

13916 
YY_CURRENT_BUFFER
){

13917 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

13918 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

13919 
	`yyp›_buf„r_°©e
();

13923 
	`yy‰ì
((
yy_buf„r_°ack
) );

13924 (
yy_buf„r_°ack
Ë
NULL
;

13927 
	`yy‰ì
((
yy_°¨t_°ack
) );

13928 (
yy_°¨t_°ack
Ë
NULL
;

13932 
	`yy_öô_globÆs
( );

13935 
	}
}

13941 #i‚de‡
yyãxt_±r


13942 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

13944 
i
;

13945  
i
 = 0; i < 
n
; ++i )

13946 
s1
[
i
] = 
s2
[i];

13947 
	}
}

13950 #ifde‡
YY_NEED_STRLEN


13951 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

13953 
n
;

13954  
n
 = 0; 
s
[n]; ++n )

13957  
n
;

13958 
	}
}

13961 *
	$yyÆloc
 (
yy_size_t
 
size
 )

13963  (*Ë
	`mÆloc
–
size
 );

13964 
	}
}

13966 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

13975  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

13976 
	}
}

13978 
	$yy‰ì
 (* 
±r
 )

13980 
	`‰ì
–(*Ë
±r
 );

13981 
	}
}

13983 
	#YYTABLES_NAME
 "yyèbÀs"

	)

13990 
	$öôsˇ¬î
(*
§cfûe
)

13992 *
s
;

13994 i‡(
maxifbø˚s
 =
NULL
) {

13995 
maxifbø˚s
 = 
	`mymÆloc
(
miÊevñ
 * ());

13996 
¥eifbø˚s
 = 
	`mymÆloc
(
miÊevñ
 * ());

13998 
fú°
 = 0;

13999 
œ°
 = 0;

14000 
löío
 = 1;

14001 
myylöío
 = 1;

14002 
¨øydimísi⁄
 = 
NO
;

14003 
b∂i°ög
 = 
NO
;

14004 
bø˚s
 = 0;

14005 
˛assdef
 = 
NO
;

14006 
ñ£ñif
 = 
NO
;

14007 
esudef
 = 
NO
;

14008 
exã∫Æ
 = 
NO
;

14009 
exã∫Æbø˚s
 = -1;

14010 
f˙def
 = 
NO
;

14011 
globÆ
 = 
YES
;

14012 
iÊevñ
 = 0;

14013 
öôülizî
 = 
NO
;

14014 
öôülizîbø˚s
 = -1;

14015 
Àx
 = 
NO
;

14016 
∑ªns
 = 0;

14017 
µdeföe
 = 
NO
;

14018 
p£ud€lif
 = 
NO
;

14019 
ﬁdty≥
 = 
NO
;

14020 
ruÀs
 = 
NO
;

14021 
sdl
 = 
NO
;

14022 
°ru˘fõld
 = 
NO
;

14023 
ègdef
 = '\0';

14024 
ãm∂©e
 = 
NO
;

14025 
ãm∂©ï¨ís
 = -1;

14026 
ty≥defbø˚s
 = -1;

14027 
idít_°¨t
 = 0;

14029 i‡(
my_yyãxt
)

14030 *
my_yyãxt
 = '\0';

14031 
my_yyÀng
 = 0;

14033 
	`BEGIN
(
INITIAL
);

14036 i‡((
s
 = 
	`°ºchr
(
§cfûe
, '.')Ë!
NULL
) {

14037 *++
s
) {

14039 i‡(
	`°rcmp
(
s
, "bp") == 0) {

14040 
b∂i°ög
 = 
YES
;

14044 i‡(
	`°rcmp
(
s
, "l") == 0) {

14045 
Àx
 = 
YES
;

14046 
globÆ
 = 
NO
;

14050 i‡(
	`°rcmp
(
s
, "sd") == 0) {

14051 
sdl
 = 
YES
;

14052 
	`BEGIN
(
SDL
);

14056 i‡(
	`°rcmp
(
s
, "y") == 0) {

14057 
globÆ
 = 
NO
;

14062 
	}
}

14064 #i‡!
COMMENTS_BY_FLEX


14075 
	g°rög_ãrmö©‹
 = '\0';

14082 
	$öside°rög_öput
(
c
)

14084 
BOOL
 
was_back¶ash
 = 
NO
;

14086 i‡((
c
 ='\\'Ë&& (
was_back¶ash
 =
NO
)) {

14091 
was_back¶ash
 = 
YES
;

14092  
c
;

14095 i‡(((
c
 ='\t'Ë&& (
Àx
 =
YES
))

14097 || ((
c
 ='\n'Ë&& (
was_back¶ash
 =
NO
))

14098 || (
c
 =
EOF
)

14099 || ((
c
 =
°rög_ãrmö©‹
Ë&& (
was_back¶ash
 =
NO
))

14103 
°rög_ãrmö©‹
 = '\0';

14104 } i‡(!
	`i•röt
(()
c
)) {

14106 
c
 = ' ';

14109 
was_back¶ash
 = 
NO
;

14110  
c
;

14111 
	}
}

14116 
	$commít
()

14118 
c
, 
œ°c
;

14123 i‡((
c
 = 
	`gëc
(
yyö
)) == '*') {

14124 
œ°c
 = '\0';

14125 (
c
 = 
	`gëc
(
yyö
)Ë!
EOF


14127 && (
c
 !'/' || 
œ°c
 != '*')

14129 i‡(
c
 == '\n') {

14135 ++
myylöío
;

14137 
œ°c
 = 
c
;

14146 i‡((
c
 = 
	`gëc
(
yyö
)Ë='_' || 
	`iß um
(c)) {

14147 (Ë
	`ungëc
(
c
, 
yyö
);

14148 
c
 = ' ';

14151 } i‡(
c
 == '/') {

14152 (
c
 = 
	`gëc
(
yyö
)Ë!
EOF
 && c != '\n') {

14157 (Ë
	`ungëc
(
c
, 
yyö
);

14158 
c
 = '/';

14164 } 
c
 == '/');

14165 (
c
);

14166 
	}
}

14173 
	$skùcommít_öput
()

14175 
c
;

14177 
c
 = 
	`gëc
 (
yyö
);

14178 i‡(
°rög_ãrmö©‹
 != '\0') {

14180  
	`öside°rög_öput
(
c
);

14181 } i‡(
c
 == '/') {

14183  
	`commít
 ();

14184 } i‡(
c
 == '"' || c == '\'') {

14186 
°rög_ãrmö©‹
 = 
c
;

14189  
c
;

14190 
	}
}

14194 
	#MY_YY_ALLOCSTEP
 1000

	)

14196 
	$my_yym‹e
()

14198 
size_t
 
yyãxt_size
 = 0;

14202 
my_yyÀng
 + 
yyÀng
 + 1 >
yyãxt_size
) {

14203 
my_yyãxt
 = 
	`myªÆloc
(my_yytext,

14204 
yyãxt_size
 +
MY_YY_ALLOCSTEP
);

14207 
	`°∫˝y
 (
my_yyãxt
 + 
my_yyÀng
, 
yyãxt
, 
yyÀng
+1);

14208 
my_yyÀng
 +
yyÀng
;

14209 
	}
}

	@fscanner.l

38 
	~"globÆ.h
"

39 
	~"Æloc.h
"

40 
	~"sˇ¬î.h
"

41 
	~"lookup.h
"

43 
	~<as£π.h
>

48 #i‚de‡
FLEX_SCANNER


49 #îr‹ 
S‹ry
, 
this
 
sˇ¬î
 
√eds
 
Êex
. 
It
 
is
 
nŸ
 
ußbÀ
 
wôh
 
AT
&
T
 
Lex
.

52 
	#IFLEVELINC
 5

	)

53 
	#YY_NO_TOP_STATE
 1

	)

55 c⁄° 
	grcsid
[] = "$Id: fscanner.l,v 1.13 2007/01/07 12:41:23 broeker Exp $";

57 
	gfú°
;

58 
	gœ°
;

59 
	glöío
;

60 
	gmyylöío
 = 1;

65 
size_t
 
	gmy_yyÀng
 = 0;

66 *
	gmy_yyãxt
 = 
NULL
;

68 
BOOL
 
	g¨øydimísi⁄
;

69 
BOOL
 
	gb∂i°ög
;

70 
	gbø˚s
;

71 
BOOL
 
	g˛assdef
;

72 
BOOL
 
	gñ£ñif
;

73 
BOOL
 
	gesudef
;

74 
BOOL
 
	gexã∫Æ
;

75 
	gexã∫Æbø˚s
;

76 
BOOL
 
	gf˙def
;

77 
BOOL
 
	gglobÆ
;

78 
	giÊevñ
;

79 
BOOL
 
	göôülizî
;

80 
	göôülizîbø˚s
;

81 
BOOL
 
	gÀx
;

82 
	gmiÊevñ
 = 
IFLEVELINC
;

83 *
	gmaxifbø˚s
;

84 *
	g¥eifbø˚s
;

85 
	g∑ªns
;

86 
BOOL
 
	gµdeföe
;

87 
BOOL
 
	gp£ud€lif
;

88 
BOOL
 
	gﬁdty≥
;

89 
BOOL
 
	gruÀs
;

90 
BOOL
 
	gsdl
;

91 
BOOL
 
	g°ru˘fõld
;

92 
	gègdef
;

93 
BOOL
 
	gãm∂©e
;

94 
	gãm∂©ï¨ís
;

95 
	gty≥defbø˚s
 = -1;

96 
	gtokí
;

97 
	gidít_°¨t
;

107 
	#COMMENTS_BY_FLEX
 1

	)

109 #i‡!
COMMENTS_BY_FLEX


110 
skùcommít_öput
();

111 
commít
();

112 
öside°rög_öput
();

115 
my_yym‹e
();

117 #i‡
COMMENTS_BY_FLEX


118 
	#skùcommít_öput
 
öput


	)

121 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

123 
c
 = 
	`skùcommít_öput
 (); \

124 
ªsu…
 = (
c
 =
EOF
Ë? 
YY_NULL
 : (
buf
[0] = c, 1); \

125 }

	)

131 
idítifõr
 [
a
-
zA
-
Z_$
][a-zA-
Z_0
-9
$
]*

132 
numbî
 \.?[0-9][.0-9a-
fA
-
FlLuUxX
]*

133 
commít
 "/*"([^*]*("*"+[^/])?)*"*/"|"//"[^\
n
]*\n

134 
ws
 [ \
t
\
r
\
v
\
f
]

135 
w¢l
 [ \
t
\
r
\
v
\
f
\
n
]|{
commít
}

138 %
›ti⁄
 
°ack


139 %
›ti⁄
 
noyywøp


141 %
°¨t
 
SDL


142 %
a
 4000

143 %
o
 7000

146 %
x
 
IN_PREPROC
 
WAS_ENDIF
 
WAS_IDENTIFIER
 
WAS_ESU
 
IN_DQUOTE
 
IN_SQUOTE
 
COMMENT


148 %% /* 
	$yyÀx
 */

151 
globÆ
 = 
YES
;

152 
m‹e
;

156 
globÆ
 = 
NO
;

157 
m‹e
;

161 
bø˚s
 = 0;

162 i‡(
ruÀs
 =
NO
) {

164 
ruÀs
 = 
YES
;

168 
	`my_yym‹e
();

171 (Ë
	`°rˇt
(
my_yyãxt
, " /* ");

172 
fú°
 = 
	`°æí
(
my_yyãxt
);

173 i‡(
Àx
 =
YES
) {

174 (Ë
	`°rˇt
(
my_yyãxt
, "yylex");

177 *
s
 = " yylex()";

178 *
˝
 = 
s
 + 
	`°æí
(s);

179 --
˝
 >
s
) {

180 
	`u≈ut
(*
˝
);

182 (Ë
	`°rˇt
(
my_yyãxt
, "yyparse");

184 
œ°
 = 
	`°æí
(
my_yyãxt
);

185 (Ë
	`°rˇt
(
my_yyãxt
, " */");

186 
my_yyÀng
 = 
	`°æí
(
my_yyãxt
);

187 (
FCNDEF
);

190 
ruÀs
 = 
NO
;

191 
globÆ
 = 
YES
;

192 
œ°
 = 
fú°
;

193 
	`my_yym‹e
();

194 (
FCNEND
);

199 <
SDL
>
STATE
[ \
t
]+({
idítifõr
}|\*) {

200 
bø˚s
 = 1;

201 
f˙def
 = 
YES
;

202 
tokí
 = 
FCNDEF
;

203 
födidít
;

206 <
SDL
>
ENDSTATE
[ \
t
] {

207 
íd°©e
;

212 ++
bø˚s
;

216 i‡(
ègdef
) {

217 i‡(
bø˚s
 == 1) {

218 
esudef
 = 
YES
;

220 
tokí
 = 
ègdef
;

221 
ègdef
 = '\0';

222 
œ°
 = 
fú°
;

223 
	`my_yym‹e
();

224 (
tokí
);

226 
m‹e
;

230 \#{
ws
}* {

231 i‡(
ruÀs
 =
NO
)

232 
	`BEGIN
(
IN_PREPROC
);

233 
yyÀng
 = 1;

234 
m‹e
;

237 <
IN_PREPROC
>
	`ídif
([^
a
-
zA
-
Z0
-9
_$
\
n
].*)? {

242 
	`BEGIN
(
WAS_ENDIF
);

243 
m‹e
;

246 <
WAS_ENDIF
>\
n
{
w¢l
}*#{
ws
}*if(
ndef
|
def
)?{ws}+ {

257 i‡(
ñ£ñif
 =
YES
) {

258 
ídif
;

261 
p£ud€lif
 = 
YES
;

262 
	`BEGIN
(
INITIAL
);

263 
	`yyÀss
(1);

264 
	`yy_£t_bﬁ
(1);

265 
eﬁ
;

268 <
WAS_ENDIF
>\
n
{
w¢l
}* {

269 
ídif
:

270 i‡(
iÊevñ
 > 0) {

272 i‡(
bø˚s
 < 
maxifbø˚s
[--
iÊevñ
]) {

273 
bø˚s
 = 
maxifbø˚s
[
iÊevñ
];

276 
	`BEGIN
(
INITIAL
);

277 
	`yyÀss
(1);

278 
	`yy_£t_bﬁ
(1);

279 
eﬁ
;

283 <
IN_PREPROC
>
i‚def
{
ws
}+ |

284 <
IN_PREPROC
>
ifdef
{
ws
}+ |

285 <
IN_PREPROC
>{
ws
}+ {

286 
ñ£ñif
 = 
NO
;

287 i‡(
p£ud€lif
 =
YES
) {

288 
p£ud€lif
 = 
NO
;

289 
ñif
;

293 i‡(
iÊevñ
 =
miÊevñ
) {

294 
miÊevñ
 +
IFLEVELINC
;

295 
maxifbø˚s
 = 
	`myªÆloc
(maxifbø˚s, 
miÊevñ
 * ());

296 
¥eifbø˚s
 = 
	`myªÆloc
’ªifbø˚s, 
miÊevñ
 * ());

299 
¥eifbø˚s
[
iÊevñ
] = 
bø˚s
;

300 
maxifbø˚s
[
iÊevñ
++] = 0;

301 
	`BEGIN
(
INITIAL
);

302 
m‹e
;

305 <
IN_PREPROC
>({
ws
}.*)? {

306 
ñ£ñif
 = 
YES
;

307 i‡(
iÊevñ
 > 0) {

310 i‡(
bø˚s
 > 
maxifbø˚s
[
iÊevñ
 - 1]) {

311 
maxifbø˚s
[
iÊevñ
 - 1] = 
bø˚s
;

314 
bø˚s
 = 
¥eifbø˚s
[
iÊevñ
 - 1];

316 
	`BEGIN
(
INITIAL
);

317 
m‹e
;

320 <
IN_PREPROC
>
ñif
{
ws
}+ {

322 
ñif
:

323 i‡(
iÊevñ
 > 0) {

326 i‡(
bø˚s
 > 
maxifbø˚s
[
iÊevñ
 - 1]) {

327 
maxifbø˚s
[
iÊevñ
 - 1] = 
bø˚s
;

330 
bø˚s
 = 
¥eifbø˚s
[
iÊevñ
 - 1];

332 
	`BEGIN
(
INITIAL
);

333 
m‹e
;

337 <
IN_PREPROC
>
ö˛ude
{
ws
}*\"[^"\
n
]+\" |

338 <
IN_PREPROC
>
ö˛ude
{
ws
}*<[^>\
n
]+> {

339 *
s
;

340 
ªmembî
 = 
yyãxt
[
yyÀng
-1];

342 
	`my_yym‹e
();

343 
s
 = 
	`°Ωbrk
(
my_yyãxt
, "\"<");

344 
my_yyãxt
[
my_yyÀng
-1] = '\0';

345 
	`öcfûe
(
s
 + 1, s);

346 
my_yyãxt
[
my_yyÀng
-1] = 
ªmembî
;

347 
fú°
 = 
s
 - 
my_yyãxt
;

348 
œ°
 = 
my_yyÀng
 - 1;

349 i‡(
com¥ess
 =
YES
) {

350 
my_yyãxt
[0] = '\2';

352 
	`BEGIN
(
INITIAL
);

353 (
INCLUDE
);

359 i‡(
bø˚s
 =
öôülizîbø˚s
) {

360 
öôülizîbø˚s
 = -1;

361 
öôülizî
 = 
NO
;

363 i‡(--
bø˚s
 <= 0) {

364 
íd°©e
:

365 
bø˚s
 = 0;

366 
˛assdef
 = 
NO
;

368 i‡(
bø˚s
 =0 || (bø˚†=1 && 
˛assdef
 =
YES
)) {

371 i‡(
esudef
 =
YES
) {

372 
esudef
 = 
NO
;

375 i‡(
f˙def
 =
YES
) {

376 
f˙def
 = 
NO
;

377 
œ°
 = 
fú°
;

378 
	`my_yym‹e
();

379 (
FCNEND
);

382 
m‹e
;

387 ++
∑ªns
;

388 
m‹e
;

392 i‡(--
∑ªns
 <= 0) {

393 
∑ªns
 = 0;

396 i‡(
∑ªns
 =
ãm∂©ï¨ís
) {

397 
ãm∂©ï¨ís
 = -1;

398 
ãm∂©e
 = 
NO
;

400 
m‹e
;

404 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] != '#') {

405 
öôülizîbø˚s
 = 
bø˚s
;

406 
öôülizî
 = 
YES
;

408 
m‹e
;

412 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] != '#') {

413 
°ru˘fõld
 = 
YES
;

415 
m‹e
;

419 i‡(
bø˚s
 =
öôülizîbø˚s
) {

420 
öôülizîbø˚s
 = -1;

421 
öôülizî
 = 
NO
;

423 
°ru˘fõld
 = 
NO
;

424 
m‹e
;

428 i‡(
bø˚s
 == 0) {

429 
esudef
 = 
NO
;

432 i‡(
bø˚s
 =
ty≥defbø˚s
) {

433 
ty≥defbø˚s
 = -1;

436 i‡(
bø˚s
 =
exã∫Æbø˚s
) {

437 
exã∫Æbø˚s
 = -1;

438 
exã∫Æ
 = 
NO
;

440 
°ru˘fõld
 = 
NO
;

441 
öôülizî
 = 
NO
;

442 
m‹e
;

445 <
IN_PREPROC
>
deföe
{
ws
}+{
idítifõr
} {

448 
µdeföe
 = 
YES
;

449 
tokí
 = 
DEFINE
;

450 i‡(
com¥ess
 =
YES
) {

451 
my_yyãxt
[0] = '\1';

453 
födidít
:

457 
	`my_yym‹e
();

458 
fú°
 = 
my_yyÀng
 - 1;

459 
my_yyãxt
[
fú°
] != ' ' && my_yytext[first] != '\t') {

460 --
fú°
;

462 ++
fú°
;

463 
œ°
 = 
my_yyÀng
;

464 
	`BEGIN
(
INITIAL
);

465 
deföôi⁄
;

468 <
IN_PREPROC
>.|\
n
 |

469 <
IN_PREPROC
>{
idítifõr
} {

470 
	`BEGIN
(
INITIAL
);

471 
m‹e
;

475 
˛ass
{
w¢l
}+{
idítifõr
}({wsnl}|{identifier}|[():])*\{ {

476 
˛assdef
 = 
YES
;

477 
ègdef
 = 'c';

478 
	`yyÀss
(5);

479 
	`yy_£t_bﬁ
(0);

480 
m‹e
;

485 
idít_°¨t
 = 
fú°
;

486 
	`BEGIN
(
WAS_ESU
);

487 
m‹e
;

489 <
WAS_ESU
>{

490 ({
w¢l
}+{
idítifõr
}){wsnl}*\{ {

491 
ègdef
 = 
my_yyãxt
[
idít_°¨t
];

492 
	`BEGIN
(
WAS_IDENTIFIER
);

493 
idít
;

495 {
w¢l
}*\{ {

496 
ègdef
 = 
my_yyãxt
[
idít_°¨t
];

497 
	`BEGIN
(
INITIAL
);

498 i‡(
bø˚s
 == 0) {

499 
esudef
 = 
YES
;

501 
œ°
 = 
fú°
;

502 
	`yyÀss
(0);

503 
ègdef
 = '\0';

504 
m‹e
;

506 ({
w¢l
}+{
idítifõr
})?{wsnl}* |

507 .|\
n
 {

508 
	`BEGIN
(
WAS_IDENTIFIER
);

509 
idít
;

513 {
w¢l
}*\( {

514 
	`yyÀss
(2);

515 
	`yy_£t_bﬁ
(0);

516 
m‹e
;

519 {
idítifõr
} {

520 
	`BEGIN
(
WAS_IDENTIFIER
);

521 
idít_°¨t
 = 
fú°
;

522 
m‹e
;

526 <
WAS_IDENTIFIER
>{

527 {
ws
}*\(({
w¢l
}|{
idítifõr
}|{
numbî
}|[*&[\]=,.])*\)([()]|{w¢l})*[:
a
-
zA
-
Z_
#{] {

539 i‡((
bø˚s
 =0 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] !'#' && 
ruÀs
 == NO) ||

540 (
bø˚s
 =1 && 
˛assdef
 =
YES
)) {

541 
f˙def
 = 
YES
;

542 
tokí
 = 
FCNDEF
;

543 
f˙
;

546 
f˙ˇl
;

549 {
ws
}*\(([*&[\]=,.]|{
idítifõr
}|{
numbî
}|{
w¢l
})* {

550 
f˙ˇl
: i‡(
f˙def
 =
YES
 || 
µdeföe
 =YES || 
ruÀs
 == YES) {

551 
tokí
 = 
FCNCALL
;

552 
f˙
;

555 i‡(
ãm∂©e
 =
NO
) {

556 
ãm∂©ï¨ís
 = 
∑ªns
;

557 
ãm∂©e
 = 
YES
;

559 
idít
;

562 ("*"|{
w¢l
})+{
idítifõr
} {

563 
idít
;

566 .|\
n
 {

567 *
s
;

569 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
my_yyãxt
[0] != '#' &&

570 
exã∫Æ
 =
NO
 && 
öôülizî
 == NO &&

571 
¨øydimísi⁄
 =
NO
 && 
°ru˘fõld
 == NO &&

572 
ãm∂©e
 =
NO
 && 
f˙def
 == NO) {

573 i‡(
esudef
 =
YES
) {

575 
tokí
 = 
MEMBERDEF
;

577 
tokí
 = 
GLOBALDEF
;

580 
idít
:

581 
tokí
 = 
IDENT
;

583 
f˙
:

584 i‡(
YYSTATE
 =
WAS_IDENTIFIER
) {

586 
œ°
 = 
fú°
;

587 
fú°
 = 
idít_°¨t
;

588 
	`yyÀss
(0);

594 
	`yy_£t_bﬁ
(0);

595 
	`BEGIN
(
INITIAL
);

597 
	`my_yym‹e
();

598 
œ°
 = 
my_yyÀng
;

600 
deföôi⁄
:

603 i‡(
yyÀng
 > 
STMTMAX
) {

604 
c
;

607 
	`w¨nög
("lineÅooÜong");

608 (
c
 = 
	`skùcommít_öput
()Ë> 
LEXEOF
) {

609 i‡(
c
 == '\n') {

610 
	`u≈ut
(
c
);

616 i‡(
yyÀng
 > 
PATLEN
) {

617 
	`w¨nög
("symbolÅooÜong");

618 
my_yyÀng
 = 
fú°
 + 
PATLEN
;

619 
my_yyãxt
[
my_yyÀng
] = '\0';

623 i‡((
s
 = 
	`lookup
(
my_yyãxt
 + 
fú°
)Ë!
NULL
) {

624 
fú°
 = 
my_yyÀng
;

627 i‡(
s
 =
ty≥de·ext
) {

628 
ty≥defbø˚s
 = 
bø˚s
;

629 
ﬁdty≥
 = 
YES
;

634 i‡(
s
 =
íumãxt
 || s =
°ru˘ãxt
 || s =
uni⁄ãxt
) {

636 } i‡(
s
 =
exã∫ãxt
) {

638 
exã∫Æbø˚s
 = 
bø˚s
;

639 
exã∫Æ
 = 
YES
;

640 } i‡(
ãm∂©ï¨ís
 =
∑ªns
 && 
ãm∂©e
 =
YES
) {

643 
ãm∂©ï¨ís
 = -1;

644 
ãm∂©e
 = 
NO
;

648 
ﬁdty≥
 = 
NO
;

656 i‡(
ègdef
 && 
	`°∫ŸequÆ
(
my_yyãxt
 + 
fú°
, "class")) {

657 
tokí
 = 
ègdef
;

658 
ègdef
 = '\0';

659 i‡(
bø˚s
 == 0) {

660 
esudef
 = 
YES
;

662 } i‡(
bø˚s
 =
ty≥defbø˚s
 && 
ﬁdty≥
 =
NO
 &&

663 
¨øydimísi⁄
 =
NO
) {

665 
tokí
 = 
TYPEDEF
;

667 
ﬁdty≥
 = 
NO
;

670 (
tokí
);

677 
¨øydimísi⁄
 = 
YES
;

678 
m‹e
;

682 
¨øydimísi⁄
 = 
NO
;

683 
m‹e
;

686 \\\
n
 {

688 
yyÀng
 = 1;

689 
	`my_yym‹e
();

690 
eﬁ
;

693 \
n
 {

694 i‡(
µdeföe
 =
YES
) {

695 
µdeföe
 = 
NO
;

696 
	`yyÀss
(
yyÀng
 - 1);

697 
œ°
 = 
fú°
;

698 
	`my_yym‹e
();

699 (
DEFINEEND
);

703 i‡(
b∂i°ög
 =
YES
) {

704 
c
, 
i
;

707 
	`skùcommít_öput
()) {

710 
i
 = 1; i < 8 && 
	`skùcommít_öput
(Ë> 
LEXEOF
; ++i)

716 (
c
 = 
	`skùcommít_öput
()Ë> 
LEXEOF
) {

717 i‡(
c
 == '\n') {

718 
	`u≈ut
(
c
);

724 
	`u≈ut
('\n');

728 
eﬁ
:

729 ++
myylöío
;

730 
fú°
 = 0;

731 
œ°
 = 0;

732 i‡(
symbﬁs
 > 0) {

734 (
NEWLINE
);

737 i‡(
my_yyãxt
)

738 *
my_yyãxt
 = '\0';

739 
my_yyÀng
 = 0;

740 
löío
 = 
myylöío
;

744 i‡(
sdl
 =
NO
)

745 
	`BEGIN
(
IN_SQUOTE
);

746 
m‹e
;

749 <
IN_SQUOTE
>\' {

750 
	`BEGIN
(
INITIAL
);

751 
m‹e
;

755 
	`BEGIN
(
IN_DQUOTE
);

756 
m‹e
;

759 <
IN_DQUOTE
>\" {

760 
	`BEGIN
(
INITIAL
);

761 
m‹e
;

764 <
IN_DQUOTE
,
IN_SQUOTE
>{

765 \
n
 {

766 
	`BEGIN
(
INITIAL
);

767 
eﬁ
;

772 
m‹e
;

775 \\\
n
 {

776 
myylöío
++;

777 
m‹e
;

782 ^{
ws
}+ {

785 {
ws
}+\
n
 {

786 
	`u≈ut
('\n');

789 [\
t
\
r
\
v
\
f
]+ {

791 
	`u≈ut
(' ');

794 {
ws
}{2,} {

795 
	`u≈ut
(' ');

798 "/*" 
	`yy_push_°©e
(
COMMENT
);

799 <
COMMENT
>{

800 [^*\
n
]* |

801 "*"+[^*/\
n
]* ;

802 [^*\
n
]*\n |

803 "*"+[^*/\
n
]*\n {

804 i‡(
µdeföe
 =
NO
) {

805 
eﬁ
;

807 ++
myylöío
;

813 
	`u≈ut
(' ');

814 
	`yy_p›_°©e
();

818 "//".*\
n
? {

820 
eﬁ
;

824 {
numbî
} |

825 <
SDL
>
STATE
[ \
t
]+ |

827 
m‹e
:

828 
	`my_yym‹e
();

829 
fú°
 = 
my_yyÀng
;

832 
	}
%%

835 
	$öôsˇ¬î
(*
§cfûe
)

837 *
s
;

839 i‡(
maxifbø˚s
 =
NULL
) {

840 
maxifbø˚s
 = 
	`mymÆloc
(
miÊevñ
 * ());

841 
¥eifbø˚s
 = 
	`mymÆloc
(
miÊevñ
 * ());

843 
fú°
 = 0;

844 
œ°
 = 0;

845 
löío
 = 1;

846 
myylöío
 = 1;

847 
¨øydimísi⁄
 = 
NO
;

848 
b∂i°ög
 = 
NO
;

849 
bø˚s
 = 0;

850 
˛assdef
 = 
NO
;

851 
ñ£ñif
 = 
NO
;

852 
esudef
 = 
NO
;

853 
exã∫Æ
 = 
NO
;

854 
exã∫Æbø˚s
 = -1;

855 
f˙def
 = 
NO
;

856 
globÆ
 = 
YES
;

857 
iÊevñ
 = 0;

858 
öôülizî
 = 
NO
;

859 
öôülizîbø˚s
 = -1;

860 
Àx
 = 
NO
;

861 
∑ªns
 = 0;

862 
µdeföe
 = 
NO
;

863 
p£ud€lif
 = 
NO
;

864 
ﬁdty≥
 = 
NO
;

865 
ruÀs
 = 
NO
;

866 
sdl
 = 
NO
;

867 
°ru˘fõld
 = 
NO
;

868 
ègdef
 = '\0';

869 
ãm∂©e
 = 
NO
;

870 
ãm∂©ï¨ís
 = -1;

871 
ty≥defbø˚s
 = -1;

872 
idít_°¨t
 = 0;

874 i‡(
my_yyãxt
)

875 *
my_yyãxt
 = '\0';

876 
my_yyÀng
 = 0;

878 
	`BEGIN
(
INITIAL
);

881 i‡((
s
 = 
	`°ºchr
(
§cfûe
, '.')Ë!
NULL
) {

882 *++
s
) {

884 i‡(
	`°rcmp
(
s
, "bp") == 0) {

885 
b∂i°ög
 = 
YES
;

889 i‡(
	`°rcmp
(
s
, "l") == 0) {

890 
Àx
 = 
YES
;

891 
globÆ
 = 
NO
;

895 i‡(
	`°rcmp
(
s
, "sd") == 0) {

896 
sdl
 = 
YES
;

897 
	`BEGIN
(
SDL
);

901 i‡(
	`°rcmp
(
s
, "y") == 0) {

902 
globÆ
 = 
NO
;

907 
	}
}

909 #i‡!
COMMENTS_BY_FLEX


920 
	g°rög_ãrmö©‹
 = '\0';

927 
	$öside°rög_öput
(
c
)

929 
BOOL
 
was_back¶ash
 = 
NO
;

931 i‡((
c
 ='\\'Ë&& (
was_back¶ash
 =
NO
)) {

936 
was_back¶ash
 = 
YES
;

937  
c
;

940 i‡(((
c
 ='\t'Ë&& (
Àx
 =
YES
))

942 || ((
c
 ='\n'Ë&& (
was_back¶ash
 =
NO
))

943 || (
c
 =
EOF
)

944 || ((
c
 =
°rög_ãrmö©‹
Ë&& (
was_back¶ash
 =
NO
))

948 
°rög_ãrmö©‹
 = '\0';

949 } i‡(!
	`i•röt
(()
c
)) {

951 
c
 = ' ';

954 
was_back¶ash
 = 
NO
;

955  
c
;

956 
	}
}

961 
	$commít
()

963 
c
, 
œ°c
;

968 i‡((
c
 = 
	`gëc
(
yyö
)) == '*') {

969 
œ°c
 = '\0';

970 (
c
 = 
	`gëc
(
yyö
)Ë!
EOF


972 && (
c
 !'/' || 
œ°c
 != '*')

974 i‡(
c
 == '\n') {

980 ++
myylöío
;

982 
œ°c
 = 
c
;

991 i‡((
c
 = 
	`gëc
(
yyö
)Ë='_' || 
	`iß um
(c)) {

992 (Ë
	`ungëc
(
c
, 
yyö
);

993 
c
 = ' ';

996 } i‡(
c
 == '/') {

997 (
c
 = 
	`gëc
(
yyö
)Ë!
EOF
 && c != '\n') {

1002 (Ë
	`ungëc
(
c
, 
yyö
);

1003 
c
 = '/';

1009 } 
c
 == '/');

1010 (
c
);

1011 
	}
}

1018 
	$skùcommít_öput
()

1020 
c
;

1022 
c
 = 
	`gëc
 (
yyö
);

1023 i‡(
°rög_ãrmö©‹
 != '\0') {

1025  
	`öside°rög_öput
(
c
);

1026 } i‡(
c
 == '/') {

1028  
	`commít
 ();

1029 } i‡(
c
 == '"' || c == '\'') {

1031 
°rög_ãrmö©‹
 = 
c
;

1034  
c
;

1035 
	}
}

1039 
	#MY_YY_ALLOCSTEP
 1000

	)

1041 
	$my_yym‹e
()

1043 
size_t
 
yyãxt_size
 = 0;

1047 
my_yyÀng
 + 
yyÀng
 + 1 >
yyãxt_size
) {

1048 
my_yyãxt
 = 
	`myªÆloc
(my_yytext,

1049 
yyãxt_size
 +
MY_YY_ALLOCSTEP
);

1052 
	`°∫˝y
 (
my_yyãxt
 + 
my_yyÀng
, 
yyãxt
, 
yyÀng
+1);

1053 
my_yyÀng
 +
yyÀng
;

1054 
	}
}

	@global.h

40 #i‚de‡
CSCOPE_GLOBAL_H


41 
	#CSCOPE_GLOBAL_H


	)

43 
	~"c⁄fig.h
"

44 
	~<uni°d.h
>

45 
	~<sys/ty≥s.h
>

46 
	~<˘y≥.h
>

47 
	~<sig«l.h
>

48 
	~<°dio.h
>

49 
	~<°dlib.h
>

53 #ifde‡
HAVE_FLOSS_H


54 
	~<Êoss.h
>

59 #i‡
STDC_HEADERS


60 
	~<°rög.h
>

62 #i‚de‡
HAVE_STRCHR


63 
	#°rchr
 
ödex


	)

64 
	#°ºchr
 
rödex


	)

66 *
°rchr
 (), *
°ºchr
 ();

67 #i‚de‡
HAVE_MEMCPY


68 
	#mem˝y
(
d
, 
s
, 
n
Ë
	`bc›y
 ((s), (d), (n))

	)

69 
	#memmove
(
d
, 
s
, 
n
Ë
	`bc›y
 ((s), (d), (n))

	)

71 #i‚de‡
HAVE_MEMSET


72 #i‚de‡
HAVE_MEMORY_H


73 *
mem£t
();

75 
	~<mem‹y.h
>

80 
	~"c⁄°™ts.h
"

81 
	~"övlib.h
"

82 
	~"libøry.h
"

85 #i‚de‡
RETSIGTYPE


86 #i‡
SVR2
 || 
BSD
 && !
sun


87 
	#RETSIGTYPE
 

	)

89 
	#RETSIGTYPE
 

	)

93 #i‚de‡
HAVE_SIGHANDLER_T


94 
	$RETSIGTYPE
 (*
	tsigh™dÀr_t
)();

97 #i‡
HAVE_STDARG_H


98 
	~<°d¨g.h
>

99 #i‡!
HAVE_VSNPRINTF


100 
	`Ωl_v¢¥ötf
(*, 
size_t
, c⁄° *, 
va_li°
);

102 #i‡!
HAVE_SNPRINTF


103 
	`Ωl_¢¥ötf
(*, 
size_t
, const *, ...);

105 #i‡!
HAVE_VASPRINTF


106 
	`Ωl_va•rötf
(**, c⁄° *, 
va_li°
);

108 #i‡!
HAVE_ASPRINTF


109 
	`Ωl_a•rötf
(**, const *, ...);

114 #i‡
BSD


115 #unde‡
tﬁowî


116 #unde‡
touµî


117 
	#tﬁowî
(
c
Ë(
	`isuµî
(cË? (cË- 'A' + 'a' : (c))

	)

118 
	#touµî
(
c
Ë(
	`i¶owî
(cË? (cË- 'a' + 'A' : (c))

	)

119 #i‡!
sun


120 #i‡!
__FªeBSD__


123 
	#PRINTF_RETVAL_BROKEN
 1

	)

134 #i‚de‡
HAVE_FIXKEYPAD


135 #i‡
SVR2
 && !
BSD
 && !
V9
 && !
u3b2
 && !
sun


136 
	#HAVE_FIXKEYPAD


	)

142 #ifde‡
HAVE_FCNTL_H


143 
	~<f˙é.h
>

148 #i‚de‡
O_TEXT


149 #ifde‡
_O_TEXT


150 
	#O_TEXT
 
_O_TEXT


	)

152 
	#O_TEXT
 0x00

	)

156 #i‚de‡
O_BINARY


157 #ifde‡
_O_BINARY


158 
	#O_BINARY
 
_O_BINARY


	)

160 
	#O_BINARY
 0x00

	)

164 #unde‡
SETMODE


165 #i‡
O_BINARY
 || 
O_TEXT


168 #ifde‡
HAVE_SETMODE


169 
	#SETMODE
(
fûdes
, 
mode
Ë
	`£tmode
(fûdes,mode)

	)

171 #ifde‡
HAVE__SETMODE


172 
	#SETMODE
(
fûdes
, 
mode
Ë
	`_£tmode
(fûdes,mode)

	)

179 #ifde‡
R_OK


180 
	#READ
 
R_OK


	)

182 
	#READ
 4

	)

184 #ifde‡
W_OK


185 
	#WRITE
 
W_OK


	)

187 
	#WRITE
 2

	)

191 #i‚de‡
HAVE_LSTAT


192 
	#l°©
(
fûe
,
buf
Ë
	`°©
(fûe,buf)

	)

196 
NO
,

197 
YES


198 } 
	tBOOL
;

201 
NOERROR
,

202 
NOTSYMBOL
,

203 
REGCMPERROR


204 } 
	tFINDINIT
;

207 
buâ⁄
;

208 
≥r˚¡
;

209 
x1
;

210 
y1
;

211 
x2
;

212 
y2
;

213 } 
	tMOUSE
;

215 
	scmd
 {

216 
cmd
 *
¥ev
, *
√xt
;

217 
fõld
;

218 *
ãxt
;

222 
dich¨1
[];

223 
dich¨2
[];

225 
dicode1
[];

226 
dicode2
[];

230 
	#IS_A_DICODE
(
öch¨1
, 
öch¨2
) \

231 (
dicode1
[()(
öch¨1
)] && 
dicode2
[()(
öch¨2
)])

	)

233 
	#DICODE_COMPRESS
(
öch¨1
, 
öch¨2
) \

234 ((0200 - 2Ë+ 
dicode1
[()(
öch¨1
)] \

235 + 
dicode2
[()(
öch¨2
)])

	)

238 *
edô‹
, *
home
, *
shñl
, *
löeÊag
;

239 *
home
;

240 
BOOL
 
löeÊaga·îfûe
;

241 *
¨gv0
;

242 
BOOL
 
com¥ess
;

243 
BOOL
 
dbåunˇãd
;

244 
di•comp⁄íts
;

245 #i‡
CCS


246 
BOOL
 
di•œyvîsi⁄
;

248 
BOOL
 
edôÆÕrom±
;

249 
fûórgc
;

250 **
fûórgv
;

251 
fûevîsi⁄
;

252 
BOOL
 
öcur£s
;

253 
BOOL
 
övîãdödex
;

254 
BOOL
 
isu±od©e
;

255 
BOOL
 
kî√lmode
;

256 
BOOL
 
löemode
;

257 
BOOL
 
vîbo£mode
;

258 
BOOL
 
ªcur£_dú
;

259 *
«mefûe
;

260 
BOOL
 
ogs
;

261 *
¥ïíd∑th
;

262 
FILE
 *
ªfsfound
;

263 
ãmp1
[];

264 
ãmp2
[];

265 
tŸÆãrms
;

266 
BOOL
 
åun_syms
;

267 
ãmp°rög
[
TEMPSTRING_LEN
 + 1];

268 *
tmpdú
;

271 
BOOL
 
ˇ£Àss
;

272 
BOOL
 *
ch™ge
;

273 
BOOL
 
ch™gög
;

274 
£À˘ög
;

275 
curdi•löe
;

276 
√w∑t
[];

277 
P©ã∫
[];

280 
dboff£t
;

281 
BOOL
 
îr‹sfound
;

282 
löeoff£t
;

283 
≈o°ögs
;

284 
symbﬁs
;

287 
cuºítdú
[];

288 **
öcdús
;

289 **
§cdús
;

290 **
§cfûes
;

291 
nöcdús
;

292 
n§cdús
;

293 
n§cfûes
;

294 
m§cfûes
;

297 
bookÀn
;

298 *
di•löe
;

299 
di•ªfs
;

300 
f˙Àn
;

301 
fõld
;

302 
fûñí
;

303 
Êdcﬁumn
;

304 
mdi•ªfs
;

305 
√xéöe
;

306 
FILE
 *
n⁄globÆªfs
;

307 
numÀn
;

308 
t›löe
;

309 
bŸtomlöe
;

310 
£¨chcou¡
;

311 
subsy°emÀn
;

312 
tŸÆlöes
;

313 c⁄° 
di•ch¨s
[];

316 
block
[];

317 
blockm¨k
;

318 
blocknumbî
;

319 *
blockp
;

320 
blockÀn
;

323 
	skey°ru˘
 {

324 *
ãxt
;

325 
dñim
;

326 
key°ru˘
 *
√xt
;

327 } 
keyw‹d
[];

330 
BOOL
 
mou£
;

332 #i‡
UNIXPC


333 
BOOL
 
unixpcmou£
;

338 *
	`fûï©h
(*
fûe
);

339 *
	`födˇŒedby
(*
∑âîn
);

340 *
	`födˇŒög
(*
∑âîn
);

341 *
	`födÆlf˙s
(*
dummy
);

342 *
	`föddef
(*
∑âîn
);

343 *
	`födfûe
(*
dummy
);

344 *
	`födö˛ude
(*
∑âîn
);

345 *
	`födsymbﬁ
(*
∑âîn
);

346 *
	`födªgexp
(*
egªµ©
);

347 *
	`föd°rög
(*
∑âîn
);

348 *
	`övõw∑th
(*
fûe
);

349 *
	`lookup
(*
idít
);

350 *
	`∑thcomp⁄íts
(*
∑th
, 
comp⁄íts
);

351 *
	`ªad_block
();

352 *
	`sˇ≈a°
(
c
);

355 
	`addcmd
(
f
, *
s
);

356 
	`add§cfûe
(*
∑th
);

357 
	`askf‹ch¨
();

358 
	`askf‹ªtu∫
();

359 
	`©ch™ge
();

360 
	`©fõld
();

361 
	`ˇ¬Ÿwrôe
(*
fûe
);

362 
	`ˇ¬Ÿ›í
(*
fûe
);

363 
	`˛órmsg
();

364 
	`˛órmsg2
();

365 
	`cou¡ªfs
();

366 
	`¸os§ef
(*
§cfûe
);

367 
	`di•öô
();

368 
	`di•œy
();

369 
	`døws¸ﬁlb¨
(
t›
, 
bŸ
);

370 
	`edô
(*
fûe
, *
löíum
);

371 
	`edôÆl
();

372 
	`edôªf
();

373 
	`íãrcur£s
();

374 
	`exôcur£s
();

375 
	`föd˛ónup
();

376 
	`‰ì§˛i°
();

377 
	`‰ìö˛i°
();

378 
	`‰ì¸os§ef
();

379 
	`‰ìfûñi°
();

380 
	`hñp
();

381 
	`öcfûe
(*
fûe
, *
ty≥
);

382 
	`ö˛udedú
(*
_dú«me
);

383 
	`öôsymèb
();

384 
	`makefûñi°
();

385 
	`mou£˛ónup
();

386 
	`mou£míu
();

387 
	`mou£öô
();

388 
	`mou£ªöô
();

389 
	`myexô
(
sig
);

390 
	`my≥º‹
(*
ãxt
);

391 
	`og¢ames
(*
fûe
, **
subsy°em
, **
book
);

392 
	`¥ogªss
(*
wh©
, 
cuºít
, 
max
);

393 
	`putfûíame
(*
§cfûe
);

394 
	`po°msg
(*
msg
);

395 
	`po°msg2
(*
msg
);

396 
	`po°îr
(*
msg
,...);

397 
	`po°Áèl
(c⁄° *
msg
,...);

398 
	`puço°ög
(*
ãrm
, 
ty≥
);

399 
	`„tch_°rög_‰om_dba£
(*, 
size_t
);

400 
	`ª£tcmd
();

401 
	`£eklöe
(
löe
);

402 
	`£tfõld
();

403 
	`shñÕ©h
(*
out
, 
limô
, *
ö
);

404 
	`sour˚dú
(*
dúli°
);

405 
	`myungëch
(
c
);

406 
	`w¨nög
(*
ãxt
);

407 
	`wrôe°rög
(*
s
);

409 
BOOL
 
	`comm™d
(
comm™dc
);

410 
BOOL
 
	`öfûñi°
(*
fûe
);

411 
BOOL
 
	`ªadªfs
(*
fûíame
);

412 
BOOL
 
	`£¨ch
();

413 
BOOL
 
	`wrôîefsfound
();

415 
FINDINIT
 
	`födöô
(*
∑âîn
);

416 
MOUSE
 *
	`gëmou£a˘i⁄
(
Àadög_ch¨
);

417 
cmd
 *
	`cuºítcmd
();

418 
cmd
 *
	`¥evcmd
();

419 
cmd
 *
	`√xtcmd
();

421 
	`egªp
(*
fûe
, 
FILE
 *
ouçut
, *
f‹m©
);

422 
	`mygëlöe
(
p
[], 
s
[], 
size
, 
fú°ch¨
, 
BOOL
 
isˇ£Àss
);

423 
	`mygëch
();

424 
	`hash
(*
ss
);

425 
	`execuã
(*
a
, ...);

426 
	`db£ek
(
off£t
);

	@gscope.c

	@help.c

39 
	~"globÆ.h
"

40 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

41 
	~<ncur£s.h
>

43 
	~<cur£s.h
>

49 
	#MAXHELP
 50

	)

51 c⁄° 
	grcsid
[] = "$Id: help.c,v 1.6 2005/04/29 18:44:31 broeker Exp $";

54 
	$hñp
()

56 **
ï
, *
s
, **
ç
, *
ãxt
[
MAXHELP
];

57 
 
;

59 
ç
 = 
ãxt
;

60 i‡(
ch™gög
 =
NO
) {

61 i‡(
mou£
) {

62 *
ç
++ = "Point withÅhe mouseánd click button 1Åo moveÅoÅhe desired input field,\n";

63 *
ç
++ = "typeÅheÖatternÅo search for,ándÅhenÖressÅhe RETURN key. ForÅhe first 4\n";

64 *
ç
++ = "andÜast 2 input fields,ÅheÖattern can beáÑegcomp(3)ÑegularÉxpression.\n";

65 *
ç
++ = "IfÅhe search is successful, you canÉditÅhe file containingá displayedÜine\n";

66 *
ç
++ = "byÖointing withÅhe mouseánd clicking button 1.\n";

67 *
ç
++ = "\nYou canÉither useÅhe button 2 menu orÅhese single-character commands:\n\n";

69 *
ç
++ = "PressÅhe RETURN keyÑepeatedlyÅo moveÅoÅhe desired input field,ÅypeÅhe\n";

70 *
ç
++ = "patternÅo search for,ándÅhenÖressÅhe RETURN key. ForÅhe first 4ánd\n";

71 *
ç
++ = "last 2 input fields,ÅheÖattern can beáÑegcomp(3)ÑegularÉxpression.\n";

72 *
ç
++ = "IfÅhe search is successful, you can useÅhese single-character commands:\n\n";

73 *
ç
++ = "0-9a-zA-Z\tEditÅhe file containingÅhe displayedÜine.\n";

75 *
ç
++ = "space bar\tDisplayÇext set of matchingÜines.\n";

76 *
ç
++ = "+\t\tDisplayÇext set of matchingÜines.\n";

77 *
ç
++ = "^V\t\tDisplayÇext set of matchingÜines.\n";

78 *
ç
++ = "-\t\tDisplayÖrevious set of matchingÜines.\n";

79 *
ç
++ = "^E\t\tEditállÜines.\n";

80 *
ç
++ = ">\t\tWriteÅheÜist ofÜines being displayedÅoá file.\n";

81 *
ç
++ = ">>\t\tAppendÅheÜist ofÜines being displayedÅoá file.\n";

82 *
ç
++ = "<\t\tReadÜines fromá file.\n";

83 *
ç
++ = "^\t\tFilterállÜinesÅhroughá shell command.\n";

84 *
ç
++ = "|\t\tPipeállÜinesÅoá shell command.\n";

85 i‡(!
mou£
) {

86 *
ç
++ = "\nAtányÅime you can useÅhese single-character commands:\n\n";

87 *
ç
++ = "TAB\t\tSwapÖositions between inputánd outputáreas.\n";

88 *
ç
++ = "RETURN\t\tMoveÅoÅheÇext input field.\n";

89 *
ç
++ = "^N\t\tMoveÅoÅheÇext input field.\n";

90 *
ç
++ = "^P\t\tMoveÅoÅheÖrevious input field.\n";

92 *
ç
++ = "^Y / ^A\t\tSearch withÅheÜastÖatternÅyped.\n";

93 *
ç
++ = "^B\t\tRecallÖrevious input fieldánd searchÖattern.\n";

94 *
ç
++ = "^F\t\tRecallÇext input fieldánd searchÖattern.\n";

95 if(
ˇ£Àss
)

96 *
ç
++ = "^C\t\tToggle ignore/useÜetter case when searching (IGNORE).\n";

98 *
ç
++ = "^C\t\tToggle ignore/useÜetter case when searching (USE).\n";

99 *
ç
++ = "^R\t\tRebuildÅhe cross-reference.\n";

100 *
ç
++ = "!\t\tStartán interactive shell (type ^DÅoÑeturnÅo cscope).\n";

101 *
ç
++ = "^L\t\tRedrawÅhe screen.\n";

102 *
ç
++ = "?\t\tDisplayÅhisÜist of commands.\n";

103 *
ç
++ = "^D\t\tExit cscope.\n";

104 *
ç
++ = "\nNote: IfÅhe first character ofÅheÖattern you wantÅo search for matches\n";

105 *
ç
++ = "a command,Åypeá \\ character first.\n";

106 *
ç
++ = "Note: Some ctrl keys may be occupied by yourÅerminal configuration.\n";

108 i‡(
mou£
) {

109 *
ç
++ = "Point withÅhe mouseánd click button 1Åo mark or unmarkÅheÜineÅo be\n";

110 *
ç
++ = "changed. You canálso useÅhe button 2 menu orÅhese single-character\n";

111 *
ç
++ = "commands:\n\n";

114 *
ç
++ = "When changingÅext, you can useÅhese single-character commands:\n\n";

115 *
ç
++ = "0-9a-zA-Z\tMark or unmarkÅheÜineÅo be changed.\n";

117 *
ç
++ = "*\t\tMark or unmarkáll displayedÜinesÅo be changed.\n";

118 *
ç
++ = "space bar\tDisplayÇext set ofÜines.\n";

119 *
ç
++ = "+\t\tDisplayÇext set ofÜines.\n";

120 *
ç
++ = "-\t\tDisplayÖrevious set ofÜines.\n";

121 *
ç
++ = "^A\t\tMark or unmarkállÜinesÅo be changed.\n";

122 *
ç
++ = "^D\t\tChangeÅhe markedÜinesándÉxit.\n";

123 *
ç
++ = "ESC\t\tExit without changingÅhe markedÜines.\n";

124 *
ç
++ = "!\t\tStartán interactive shell (type ^DÅoÑeturnÅo cscope).\n";

125 *
ç
++ = "^L\t\tRedrawÅhe screen.\n";

126 *
ç
++ = "?\t\tDisplayÅhisÜist of commands.\n";

129 
ï
 = 
ç
;

130 
 
 = 0;

131 
ç
 = 
ãxt
;Å∞< 
ï
; ) {

132 i‡(
 
 < 
LINES
 - 1) {

133 
s
 = *
ç
; *s != '\0'; ++s) {

134 i‡(*
s
 == '\n') {

135 ++
 
;

138 (Ë
	`add°r
(*
ç
++);

141 (Ë
	`add°r
("\n");

142 
	`askf‹ch¨
();

143 (Ë
	`˛ór
();

144 
 
 = 0;

147 i‡(
 
) {

148 (Ë
	`add°r
("\n");

149 
	`askf‹ch¨
();

151 
	}
}

	@history.c

38 
	~"globÆ.h
"

40 
	~"Æloc.h
"

42 c⁄° 
	grcsid
[] = "$Id: history.c,v 1.3 2006/07/23 20:59:20 broeker Exp $";

44 
cmd
 *
	gèû
, *
	gcuºít
;

48 
	$addcmd
(
f
, *
s
)

50 
cmd
 *
h
;

52 
h
 = 
	`mymÆloc
((
cmd
));

53 if–
èû
) {

54 
èû
->
√xt
 = 
h
;

55 
h
->
√xt
 = 0;

56 
h
->
¥ev
 = 
èû
;

57 
èû
 = 
h
;

59 
èû
 = 
h
;

60 
h
->
√xt
 = h->
¥ev
 = 0;

62 
h
->
fõld
 = 
f
;

63 
h
->
ãxt
 = 
	`my_°rdup
–
s
);

64 
cuºít
 = 0;

65 
	}
}

68 
cmd
 *

69 
	$¥evcmd
()

71 if–
cuºít
) {

72 if–
cuºít
->
¥ev
)

73  
cuºít
 = cuºít->
¥ev
;

75  
cuºít
;

76 } if–
èû
)

77  
cuºít
 = 
èû
;

79  
NULL
;

80 
	}
}

83 
cmd
 *

84 
	$√xtcmd
()

86 if–
cuºít
) {

87 if–
cuºít
->
√xt
)

88  
cuºít
 = cuºít->
√xt
;

90  
cuºít
;

92  
NULL
;

93 
	}
}

96 
	$ª£tcmd
()

98 
cuºít
 = 0;

99 
	}
}

101 
cmd
 *

102 
	$cuºítcmd
()

104  
cuºít
;

105 
	}
}

	@input.c

38 
	~"globÆ.h
"

39 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

40 
	~<ncur£s.h
>

42 
	~<cur£s.h
>

44 
	~<£tjmp.h
>

45 
	~<°dlib.h
>

46 
	~<î∫o.h
>

47 #i‡
HAVE_SYS_TERMIOS_H


48 
	~<sys/ãrmios.h
>

51 c⁄° 
	grcsid
[] = "$Id: input.c,v 1.15 2006/08/20 15:00:34 broeker Exp $";

53 
jmp_buf
 
	gív
;

54 
	g¥evch¨
;

57 
RETSIGTYPE
 
ˇtchöt
(
sig
);

62 
RETSIGTYPE


63 
	$ˇtchöt
(
sig
)

65 (Ë
sig
;

67 
	`sig«l
(
SIGINT
, 
ˇtchöt
);

68 
	`l⁄gjmp
(
ív
, 1);

69 
	}
}

73 
	$myungëch
(
c
)

75 
¥evch¨
 = 
c
;

76 
	}
}

80 
	$mygëch
()

82 
sigh™dÀr_t
 
ßvesig
;

83 
c
;

86 i‡(
	`£tjmp
(
ív
) == 0) {

87 
ßvesig
 = 
	`sig«l
(
SIGINT
, 
ˇtchöt
);

88 
	`ª‰esh
();

89 
	`mou£ªöô
();

90 if(
¥evch¨
) {

91 
c
 = 
¥evch¨
;

92 
¥evch¨
 = 0;

94 
c
 = -1;

95 
c
 == -1) {

97 
c
 = 
	`gëch
();

98 i‡((
c
 =-1Ë&& (
î∫o
 !
EINTR
))

103 
c
 = 
KEY_BREAK
;

105 
	`sig«l
(
SIGINT
, 
ßvesig
);

106 (
c
);

107 
	}
}

112 
	$mygëlöe
(
p
[], 
s
[], 
size
, 
fú°ch¨
, 
BOOL
 
isˇ£Àss
)

114 
c
;

115 
i
 = 0, 
j
;

116 *
§ight
;

117 
ri
 = 0;

128 
§ight
 = 
	`ˇŒoc
((), 
size
 );

130 
	`°r˝y
 ( 
s
, 
p
);

131 
i
 +
	`°æí
(
p
);

133 i‡(
fú°ch¨
 != '\0') {

134 if(
isˇ£Àss
 =
YES
) {

135 
fú°ch¨
 = 
	`tﬁowî
(firstchar);

137 
	`addch
(
fú°ch¨
);

138 
s
[
i
++] = 
fú°ch¨
;

141 (
c
 = 
	`mygëch
()Ë!'\r' && c !'\n' && c !
KEY_ENTER
) {

142 i‡(
c
 =
KEY_LEFT
 || c =
	`˘æ
('B')) {

143 i‡(
i
 > 0) {

144 
	`addch
('\b');

146 
§ight
[
ri
++] = 
s
[--
i
];

148 } i‡(
c
 =
KEY_RIGHT
 || c =
	`˘æ
('F')) {

149 i‡(
i
 < 
size
 && 
ri
 > 0) {

151 
s
[
i
++] = 
§ight
[--
ri
];

152 
	`addch
(
s
[
i
-1]);

155 #ifde‡
KEY_HOME


156 
c
 =
KEY_HOME
 ||

158 
c
 =
	`˘æ
('A') ) {

159 
i
 > 0) {

160 
§ight
[
ri
++] = 
s
[--
i
];

161 
	`addch
('\b');

162 
	`addch
(
s
[
i
]);

163 
	`addch
('\b');

166 #ifde‡
KEY_END


167 
c
 =
KEY_END
 ||

169 
c
 =
	`˘æ
('E') ) {

170 
ri
 > 0) {

171 
s
[
i
++] = 
§ight
[--
ri
];

172 
	`addch
(
s
[
i
-1]);

174 } i‡(
c
 =
	`îa£ch¨
(Ë|| c =
KEY_BACKSPACE


175 || 
c
 =
DEL
 || c =
	`˘æ
('H') ) {

177 i‡(
i
 > 0) {

178 i‡(
ri
 == 0) {

179 
	`add°r
("\b \b");

181 
	`addch
('\b');

182 
	`dñch
();

184 
s
[
i
] = '\0';

185 --
i
;

187 } i‡(
c
 =
	`kûlch¨
(Ë|| c =
KEY_BREAK
) {

189 
j
 = 0; j < 
i
; ++j) {

190 
	`addch
('\b');

192 
j
 = 0; j < 
i
; ++j) {

193 
	`addch
(' ');

195 
j
 = 0; j < 
i
; ++j) {

196 
	`addch
('\b');

198 
i
 = 0;

199 } i‡(
	`i•röt
(
c
) || c == '\t') {

201 if(
isˇ£Àss
 =
YES
) {

202 
c
 = 
	`tﬁowî
(c);

205 i‡(
i
 < 
size
) {

206 
s
[
i
++] = 
c
;

207 i‡(
ri
 == 0) {

208 
	`addch
(
c
);

210 
	`ösch
(
c
);

211 
	`addch
(
c
);

214 #i‡
UNIXPC


215 } i‡(
unixpcmou£
 =
YES
 && 
c
 =
ESC
) {

216 
	`gëmou£a˘i⁄
(
ESC
);

218 } i‡(
mou£
 =
YES
 && 
c
 =
	`˘æ
('X')) {

219 
	`gëmou£a˘i⁄
(
	`˘æ
('X'));

220 } i‡(
c
 =
EOF
) {

225 i‡(
fú°ch¨
 !'\0' && (
i
+
ri
) == 0) {

233 
ri
 > 0) {

234 
s
[
i
++] = 
§ight
[--
ri
];

236 
	`‰ì
(
§ight
);

238 
s
[
i
] = '\0';

239 (
i
);

240 
	}
}

245 
	$askf‹ch¨
()

247 
	`add°r
("Typeány characterÅo continue: ");

248 
	`mygëch
();

249 
	}
}

254 
	$askf‹ªtu∫
()

256 
	`Ârötf
(
°dîr
, "PressÅhe RETURN keyÅo continue: ");

257 
	`gëch¨
();

259 i‡(
öcur£s
 =
YES
) {

260 
	`ªdøwwö
(
curs¸
);

262 
	}
}

267 
	$shñÕ©h
(*
out
, 
limô
, *
ö
)

269 *
œ°ch¨
;

270 *
s
, *
v
;

273 
	`is•a˚
(()*
ö
)) {

274 ++
ö
;

276 
œ°ch¨
 = 
out
 + 
limô
 - 1;

280 i‡(*
ö
 == '~') {

281 *
out
++ = *
ö
++;

284 
s
 = 
out
;

285 
s
 < 
œ°ch¨
 && *
ö
 !'/' && *ö !'\0' && !
	`is•a˚
(()*in)) {

286 *
s
++ = *
ö
++;

288 *
s
 = '\0';

291 i‡(*
out
 == '\0') {

292 
v
 = 
	`gëív
("HOME");

294 
v
 = 
	`logdú
(
out
);

297 i‡(
v
 !
NULL
 && 
	`°æí
(vË< (
œ°ch¨
 - 
out
)) {

298 
	`°r˝y
(
out
 - 1, 
v
);

299 
out
 +
	`°æí
(
v
) - 1;

302 
out
 +
	`°æí
(out);

306 
out
 < 
œ°ch¨
 && *
ö
 !'\0' && !
	`is•a˚
(()*in)) {

309 i‡(*
ö
 == '$') {

310 *
out
++ = *
ö
++;

313 
s
 = 
out
;

314 
s
 < 
œ°ch¨
 && *
ö
 != '/' && *in != '\0' &&

315 !
	`is•a˚
(()*
ö
)) {

316 *
s
++ = *
ö
++;

318 *
s
 = '\0';

321 i‡((
v
 = 
	`gëív
(
out
)Ë!
NULL
 && 
	`°æí
(vË< (
œ°ch¨
 - out)) {

322 
	`°r˝y
(
out
 - 1, 
v
);

323 
out
 +
	`°æí
(
v
) - 1;

327 
out
 +
	`°æí
(out);

331 *
out
++ = *
ö
++;

334 *
out
 = '\0';

335 
	}
}

	@invlib.c

34 
	~<˘y≥.h
>

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 #i‡
SHARE


38 
	~<sys/ty≥s.h
>

39 
	~<sys/ùc.h
>

40 
	~<sys/shm.h
>

41 
	#ERR
 -1

	)

43 
	~"övlib.h
"

44 
	~"globÆ.h
"

46 
	~<as£π.h
>

48 
	#DEBUG
 0

	)

49 
	#BLOCKSIZE
 2 * 
BUFSIZ


	)

50 
	#POSTINC
 10000

	)

51 
	#SEP
 ' '

	)

52 
	#SETINC
 100

	)

53 
	#STATS
 0

	)

54 
	#SUPERINC
 10000

	)

55 
	#TERMMAX
 512

	)

56 
	#FMTVERSION
 1

	)

57 
	#ZIPFSIZE
 200

	)

59 c⁄° 
	grcsid
[] = "$Id: invlib.c,v 1.18 2006/09/30 15:38:16 broeker Exp $";

61 #i‡
DEBUG


65 
	gövbªak
;

68 
boﬁªady
();

69 
öv√wãrm
();

70 
öv°ï
(
INVCONTROL
 *
öv˙é
);

71 
övˇ¬ŸÆloc
(
n
);

72 
övˇ¬Ÿ›í
(*
fûe
);

73 
övˇ¬Ÿwrôe
(*
fûe
);

75 #i‡
STATS


76 
	gshowzùf
;

79 
POSTING
 *
	gôem
, *
	gídôem
, *
	gôem1
 = 
NULL
, *
	gôem2
 = NULL;

80 
	g£tsize1
, 
	g£tsize2
;

81 
	gnumôems
, 
	gtŸãrm
, 
	gzîﬁ⁄g
;

82 *
	gödexfûe
, *
	gpo°ögfûe
;

83 
FILE
 *
	goutfûe
, *
	gÂo°
;

84 
	gsu≥rsize
 = 
SUPERINC
, 
	gsupötsize
;

85 
	gnumpo°
, 
	gnumlogblk
, 
	gamtu£d
, 
	g√xço°
;

86 
	gœ°öblk
, 
	gnumövôems
;

87 
POSTING
 *
	gPOST
, *
	gpo°±r
;

88 *
	gSUPINT
, *
	gsupöt
, 
	g√xtsupfög
;

89 *
	gSUPFING
, *
	gsupfög
;

90 
	gthi°îm
[
TERMMAX
];

91 
	ulogiˇlblk
 {

92 
	mövblk
[
BLOCKSIZE
 / ()];

93 
	mchrblk
[
BLOCKSIZE
];

94 } 
	tt_logiˇlblk
;

95 
t_logiˇlblk
 
	glogiˇlblk
;

97 #i‡
DEBUG
 || 
STATS


98 
	gtŸpo°
;

101 #i‡
STATS


102 
	gzùf
[
ZIPFSIZE
 + 1];

106 
	$övmake
(*
öv«me
, *
övpo°
, 
FILE
 *
öfûe
)

108 *
s
;

109 
num
;

110 
i
;

111 
fûeödex
 = 0;

112 
po°size
 = 
POSTINC
 * (
POSTING
);

113 *
öçå
;

114 
löe
[
TERMMAX
];

115 
é⁄g
;

116 
PARAM
 
∑øm
;

117 
POSTING
 
po°ög
;

118 
ãmp
[
BLOCKSIZE
];

119 #i‡
STATS


120 
j
;

121 
maxãrmÀn
 = 0;

124 i‡((
outfûe
 = 
	`vpf›í
(
öv«me
, "w+b")Ë=
NULL
) {

125 
	`övˇ¬Ÿ›í
(
öv«me
);

128 
ödexfûe
 = 
öv«me
;

129 
	`f£ek
(
outfûe
, 
BUFSIZ
, 
SEEK_SET
);

132 i‡((
Âo°
 = 
	`vpf›í
(
övpo°
, "wb")Ë=
NULL
) {

133 
	`övˇ¬Ÿ›í
(
övpo°
);

136 
po°ögfûe
 = 
övpo°
;

137 
√xço°
 = 0;

139 i‡((
POST
 = 
	`mÆloc
(
po°size
)Ë=
NULL
) {

140 
	`övˇ¬ŸÆloc
(
po°size
);

143 
po°±r
 = 
POST
;

145 i‡((
SUPFING
 = 
	`mÆloc
(
su≥rsize
)Ë=
NULL
) {

146 
	`övˇ¬ŸÆloc
(
su≥rsize
);

149 
supfög
 = 
SUPFING
;

151 
supötsize
 = 
su≥rsize
 / 40;

153 i‡((
SUPINT
 = 
	`mÆloc
(
supötsize
 * ())Ë=
NULL
) {

154 
	`övˇ¬ŸÆloc
(
supötsize
 * ());

157 
supöt
 = 
SUPINT
;

158 
supöt
++;

160 
	`°r˝y
(
thi°îm
, "");

161 *
supöt
++ = 0;

162 *
supfög
++ = ' ';

163 *
supfög
++ = '\0';

164 
√xtsupfög
 = 2;

165 #i‡
DEBUG
 || 
STATS


166 
tŸpo°
 = 0L;

168 
tŸãrm
 = 0L;

169 
numpo°
 = 1;

173 
amtu£d
 = 16;

174 
numövôems
 = 0;

175 
numlogblk
 = 0;

176 
œ°öblk
 = (
t_logiˇlblk
);

179 
	`fgës
(
löe
, 
TERMMAX
, 
öfûe
Ë!
NULL
) {

180 #i‡
DEBUG
 || 
STATS


181 ++
tŸpo°
;

183 
s
 = 
	`°rchr
(
löe
, 
SEP
);

184 i‡(
s
 !
NULL
) {

185 *
s
 = '\0';

190 #i‡
STATS


191 i‡((
i
 = 
	`°æí
(
löe
)Ë> 
maxãrmÀn
) {

192 
maxãrmÀn
 = 
i
;

195 #i‡
DEBUG


196 
	`¥ötf
("%ld: %†", 
tŸpo°
, 
löe
);

197 
	`fÊush
(
°dout
);

199 i‡(
	`°rcmp
(
thi°îm
, 
löe
) == 0) {

200 i‡(
po°±r
 + 10 > 
POST
 + 
po°size
 / (
POSTING
)) {

201 
i
 = 
po°±r
 - 
POST
;

202 
po°size
 +
POSTINC
 * (
POSTING
);

203 i‡((
POST
 = 
	`ªÆloc
(POST, 
po°size
)Ë=
NULL
) {

204 
	`övˇ¬ŸÆloc
(
po°size
);

207 
po°±r
 = 
i
 + 
POST
;

208 #i‡
DEBUG


209 
	`¥ötf
("reallocatedÖost spaceÅo %u,Åotpost=%ld\n",

210 
po°size
, 
tŸpo°
);

213 
numpo°
++;

216 i‡(!
	`öv√wãrm
()) {

219 
	`°r˝y
(
thi°îm
, 
löe
);

220 
numpo°
 = 1;

221 
po°±r
 = 
POST
;

222 
fûeödex
 = 0;

225 
num
 = *++
s
 - '!';

226 
i
 = 1;

228 
num
 = 
BASE
 *Çum + *++
s
 - '!';

229 } ++
i
 < 
PRECISION
);

230 
po°ög
.
löeoff£t
 = 
num
;

231 ++
fûeödex
 < 
n§coff£t
 && 
num
 > 
§coff£t
[fileindex]) {

234 
po°ög
.
fûeödex
 = --fileindex;

235 
po°ög
.
ty≥
 = *++
s
;

236 
num
 = *++
s
 - '!';

237 i‡(*
s
 != '\n') {

238 
num
 = *++
s
 - '!';

239 *++
s
 != '\n') {

240 
num
 = 
BASE
 *Çum + *
s
 - '!';

242 
po°ög
.
f˙off£t
 = 
num
;

245 
po°ög
.
f˙off£t
 = 0;

247 *
po°±r
++ = 
po°ög
;

248 #i‡
DEBUG


249 
	`¥ötf
("%ld %ld %ld %ld\n", 
po°ög
.
fûeödex
,

250 
po°ög
.
f˙off£t
,Öo°ög.
löeoff£t
,Öo°ög.
ty≥
);

251 
	`fÊush
(
°dout
);

254 i‡(!
	`öv√wãrm
()) {

258 
logiˇlblk
.
övblk
[0] = 
numövôems
;

260 
logiˇlblk
.
övblk
[1] = 0;

261 
logiˇlblk
.
övblk
[2] = 
numlogblk
 - 1;

262 i‡(
	`fwrôe
(&
logiˇlblk
, (
t_logiˇlblk
), 1, 
outfûe
) == 0) {

263 
ˇ¬Ÿwrôe
;

265 
numlogblk
++;

267 i‡(
	`fwrôe
(&
logiˇlblk
, (
t_logiˇlblk
), 1, 
outfûe
) == 0) {

268 
ˇ¬Ÿwrôe
;

271 *
SUPINT
 = 
numlogblk
;

273 
öçå
 = (
SUPINT
 + 1);

274 
i
 = (*)
supöt
 - (*)
SUPINT
;

275 
öçå
 < 
supöt
)

276 *
öçå
++ +
i
;

278 i‡(
	`fwrôe
(
SUPINT
, (*SUPINT), 
numlogblk
 + 1, 
outfûe
) == 0 ||

279 
	`fwrôe
(
SUPFING
, 1, 
supfög
 - SUPFING, 
outfûe
) == 0) {

280 
ˇ¬Ÿwrôe
;

283 
√xtsupfög
 = (Ë+ (Ë* 
numlogblk
 + (
supfög
 - 
SUPFING
);

287 
i
 = 
√xtsupfög
 % (
t_logiˇlblk
);

289 i‡(
	`fwrôe
(
ãmp
, (
t_logiˇlblk
Ë- 
i
, 1, 
outfûe
) == 0 ||

290 
	`fÊush
(
outfûe
Ë=
EOF
) {

291 
ˇ¬Ÿwrôe
;

294 
	`ªwöd
(
outfûe
);

295 
∑øm
.
vîsi⁄
 = 
FMTVERSION
;

296 
∑øm
.
fûe°©
 = 0;

297 
∑øm
.
sizeblk
 = (
t_logiˇlblk
);

298 
∑øm
.
°¨tbyã
 = (
numlogblk
 + 1Ë* (
t_logiˇlblk
Ë+ 
BUFSIZ
;;

299 
∑øm
.
supsize
 = 
√xtsupfög
;

300 
∑øm
.
˙ésize
 = 
BUFSIZ
;

301 
∑øm
.
sh¨e
 = 0;

302 i‡(
	`fwrôe
(&
∑øm
, ’¨am), 1, 
outfûe
) == 0) {

303 
ˇ¬Ÿwrôe
;

305 
i
 = 0; i < 10; i++)

306 i‡(
	`fwrôe
(&
zîﬁ⁄g
, (zîﬁ⁄g), 1, 
outfûe
) == 0) {

307 
ˇ¬Ÿwrôe
;

311 i‡(
	`fÊush
(
outfûe
Ë=
EOF
) {

312 
ˇ¬Ÿwrôe
;

315 
	`f£ek
(
outfûe
, 
BUFSIZ
 + 2 * (), 
SEEK_SET
);

316 
é⁄g
 = 
numlogblk
 - 1;

317 i‡(
	`fwrôe
(&
é⁄g
, —l⁄g), 1, 
outfûe
) == 0 ||

318 
	`f˛o£
(
outfûe
Ë=
EOF
) {

319 
ˇ¬Ÿwrôe
:

320 
	`övˇ¬Ÿwrôe
(
öv«me
);

323 i‡(
	`f˛o£
(
Âo°
Ë=
EOF
) {

324 
	`övˇ¬Ÿwrôe
(
po°ögfûe
);

327 --
tŸãrm
;

328 #i‡
STATS


329 
	`¥ötf
("logical blocks = %d,Öostings = %ld,Åerms = %ld, maxÅermÜength = %d\n",

330 
numlogblk
, 
tŸpo°
, 
tŸãrm
, 
maxãrmÀn
);

331 i‡(
showzùf
) {

332 
	`¥ötf
("\n************* ZIPF curve ****************\n");

333 
j
 = 
ZIPFSIZE
; j > 1; j--)

334 i‡(
zùf
[
j
])

336 
i
 = 1; i < 
j
; ++i) {

337 
	`¥ötf
("%3d -%6d ", 
i
, 
zùf
[i]);

338 i‡(
i
 % 6 =0Ë
	`putch¨
('\n');

340 
	`¥ötf
(">%d-%6d\n", 
ZIPFSIZE
, 
zùf
[0]);

344 
	`‰ì
(
POST
);

345 
	`‰ì
(
SUPFING
);

346 
	`‰ì
(
SUPINT
);

347 (
tŸãrm
);

348 
	}
}

353 
	$öv√wãrm
()

355 
backupÊag
, 
i
, 
j
, 
hﬁdôems
, 
goodôems
, 
howÁr
;

356 
maxback
, 
Àn
, 
numwûlu£
, 
wdÀn
;

357 *
çå
, *
çå2
, *
çå3
;

360 
∑ckw‹d
[2];

361 
ENTRY
 
e
;

362 } 
ôemöfo
;

364 
goodôems
 = 0;

365 
tŸãrm
++;

366 #i‡
STATS


368 i‡(
numpo°
 <
ZIPFSIZE
)

369 
zùf
[
numpo°
]++;

371 
zùf
[0]++;

373 
Àn
 = 
	`°æí
(
thi°îm
);

374 
wdÀn
 = (
Àn
 + (() - 1)) / ();

376 
numwûlu£
 = (
wdÀn
 + 3) * ();

378 i‡(
numövôems
 && 
numwûlu£
 + 
amtu£d
 > (
t_logiˇlblk
)) {

380 i‡(
supfög
 + 500 > 
SUPFING
 + 
su≥rsize
) {

381 
i
 = 
supfög
 - 
SUPFING
;

382 
su≥rsize
 += 20000;

383 i‡((
SUPFING
 = (*)
	`ªÆloc
(SUPFING, 
su≥rsize
)Ë=
NULL
) {

384 
	`övˇ¬ŸÆloc
(
su≥rsize
);

387 
supfög
 = 
i
 + 
SUPFING
;

388 #i‡
DEBUG


389 
	`¥ötf
("reallocated superfinger spaceÅo %d,Åotpost=%ld\n",

390 
su≥rsize
, 
tŸpo°
);

395 i‡((
numlogblk
 + 10Ë> 
supötsize
) {

396 
i
 = 
supöt
 - 
SUPINT
;

397 
supötsize
 +
SUPERINC
;

398 i‡((
SUPINT
 = 
	`ªÆloc
(SUPINT, 
supötsize
 * ())Ë=
NULL
) {

399 
	`övˇ¬ŸÆloc
(
supötsize
 * ());

402 
supöt
 = 
i
 + 
SUPINT
;

403 #i‡
DEBUG


404 
	`¥ötf
("reallocated superfinger offsetÅo %d,Åotpost = %ld\n",

405 
supötsize
 * (), 
tŸpo°
);

409 
backupÊag
 = 0;

410 
maxback
 = (Ë
	`°æí
(
thi°îm
) / 10;

411 
hﬁdôems
 = 
numövôems
;

412 i‡(
maxback
 > 
numövôems
)

413 
maxback
 = 
numövôems
 - 2;

414 
howÁr
 = 0;

415 
maxback
-- > 1) {

416 
howÁr
++;

417 
ôemöfo
.
∑ckw‹d
[0] =

418 
logiˇlblk
.
övblk
[--
hﬁdôems
 * 2 + (() - 1)];

419 i‡((
i
 = 
ôemöfo
.
e
.
size
 / 10Ë< 
maxback
) {

420 
maxback
 = 
i
;

421 
backupÊag
 = 
howÁr
;

422 
goodôems
 = 
hﬁdôems
;

423 
çå2
 = 
logiˇlblk
.
chrblk
 + 
ôemöfo
.
e
.
off£t
;

427 i‡(
backupÊag
) {

428 
numövôems
 = 
goodôems
;

430 
logiˇlblk
.
övblk
[0] = 
numövôems
;

432 
logiˇlblk
.
övblk
[1] = 
numlogblk
 + 1;

434 
logiˇlblk
.
övblk
[2] = 
numlogblk
 - 1;

435 i‡(
	`fwrôe
(
logiˇlblk
.
chrblk
, 1, (
t_logiˇlblk
), 
outfûe
) == 0) {

436 
	`övˇ¬Ÿwrôe
(
ödexfûe
);

439 
amtu£d
 = 16;

440 
numlogblk
++;

442 i‡(
backupÊag
) {

444 
ôemöfo
.
∑ckw‹d
[0] = 
logiˇlblk
.
övblk
[
numövôems
*2+1];

445 
çå3
 = 
logiˇlblk
.
chrblk
 + 
ôemöfo
.
e
.
off£t
;

447 
i
 = 3; i <(
backupÊag
 * 2 + 2); i++)

448 
logiˇlblk
.
övblk
[
i
] =Üogiˇlblk.övblk[
numövôems
*2+i];

450 
ôemöfo
.
∑ckw‹d
[0] = 
logiˇlblk
.
övblk
[3];

451 
ôemöfo
.
∑ckw‹d
[1] = 
logiˇlblk
.
övblk
[4];

452 
çå2
 = 
logiˇlblk
.
chrblk
 + 
ôemöfo
.
e
.
off£t
;

453 
	`°∫˝y
(
supfög
, 
çå2
, (Ë
ôemöfo
.
e
.
size
);

454 *(
supfög
 + 
ôemöfo
.
e
.
size
) = '\0';

455 #i‡
DEBUG


456 
	`¥ötf
("backup %dátÅerm=%sÅoÅerm=%s\n",

457 
backupÊag
, 
thi°îm
, 
supfög
);

459 *
supöt
++ = 
√xtsupfög
;

460 
√xtsupfög
 +
	`°æí
(
supfög
) + 1;

461 
supfög
 +
	`°æí
(supfing) + 1;

463 
çå
 = 
logiˇlblk
.
chrblk
 + 
œ°öblk
;

464 
œ°öblk
 = (
t_logiˇlblk
);

465 
çå2
 = 
logiˇlblk
.
chrblk
 + 
œ°öblk
;

466 
j
 = 
çå3
 - 
çå
;

467 
çå3
 > 
çå
)

468 *--
çå2
 = *--
çå3
;

469 
œ°öblk
 -
j
;

470 
amtu£d
 +(8 * 
backupÊag
 + 
j
);

471 
i
 = 3; i < (
backupÊag
 * 2 + 2); i += 2) {

472 
ôemöfo
.
∑ckw‹d
[0] = 
logiˇlblk
.
övblk
[
i
];

473 
ôemöfo
.
e
.
off£t
 +(
çå2
 - 
çå3
);

474 
logiˇlblk
.
övblk
[
i
] = 
ôemöfo
.
∑ckw‹d
[0];

476 
numövôems
 = 
backupÊag
;

478 
numövôems
 = 0;

479 
œ°öblk
 = (
t_logiˇlblk
);

481 
	`°r˝y
(
supfög
, 
thi°îm
);

482 
supfög
 +
	`°æí
(
thi°îm
) + 1;

483 *
supöt
++ = 
√xtsupfög
;

484 
√xtsupfög
 +
	`°æí
(
thi°îm
) + 1;

489 
œ°öblk
 -(
numwûlu£
 - 2 * ());

490 
ôemöfo
.
e
.
off£t
 = 
œ°öblk
;

491 
ôemöfo
.
e
.
size
 = 
Àn
;

492 
ôemöfo
.
e
.
•a˚
 = 0;

493 
ôemöfo
.
e
.
po°
 = 
numpo°
;

494 
	`°∫˝y
(
logiˇlblk
.
chrblk
 + 
œ°öblk
, 
thi°îm
, 
Àn
);

495 
amtu£d
 +
numwûlu£
;

496 
logiˇlblk
.
övblk
[(
œ°öblk
/())+
wdÀn
] = 
√xço°
;

497 i‡((
i
 = 
po°±r
 - 
POST
) > 0) {

498 i‡(
	`fwrôe
(
POST
, (
POSTING
), 
i
, 
Âo°
) == 0) {

499 
	`övˇ¬Ÿwrôe
(
po°ögfûe
);

502 
√xço°
 +
i
 * (
POSTING
);

504 
logiˇlblk
.
övblk
[3+2*
numövôems
++] = 
ôemöfo
.
∑ckw‹d
[0];

505 
logiˇlblk
.
övblk
[2+2*
numövôems
] = 
ôemöfo
.
∑ckw‹d
[1];

507 
	}
}

516 
	$övÊù«me
(* 
öv«me
, c⁄° *
‰om
, c⁄° *
to
)

518 *
ãmp
, *
i
 = 
NULL
;

520 
	`as£π
(
	`°æí
(
‰om
Ë=°æí(
to
));

522 
ãmp
 = 
öv«me
 - 1;

523  (
ãmp
 = 
	`°r°r
—em∞+ 1, 
‰om
)))

524 
i
 = 
ãmp
;

525 i‡(!
i
 || i[
	`°æí
(
‰om
)] != '\0')

527 *
to
)

528 *
i
++ = *
to
++;

530 
	}
}

533 
	$öv›í
(
INVCONTROL
 *
öv˙é
, *
öv«me
, *
övpo°
, 
°©
)

535 
ªad_ödex
;

537 i‡((
öv˙é
->
övfûe
 = 
	`vpf›í
(
öv«me
, ((
°©
 =0Ë? "rb" : "r+b"))Ë=
NULL
) {

541 i‡(!
	`övÊù«me
(
öv«me
, 
INVNAME2
, 
INVNAME
)) {

542 i‡((
öv˙é
->
övfûe
 = 
	`vpf›í
(
öv«me
, ((
°©
 == 0) ? "rb" : "r+b"))))

543 
›íedöv«me
;

544 
	`övÊù«me
(
öv«me
, 
INVNAME
, 
INVNAME2
);

549 i‡(!
	`övÊù«me
(
öv«me
, 
INVNAME
, 
INVNAME2
)) {

550 i‡((
öv˙é
->
övfûe
 = 
	`vpf›í
(
öv«me
, ((
°©
 == 0) ? "rb" : "r+b"))))

551 
›íedöv«me
;

552 
	`övÊù«me
(
öv«me
, 
INVNAME2
, 
INVNAME
);

554 
	`övˇ¬Ÿ›í
(
öv«me
);

557 
›íedöv«me
:

558 i‡(
	`‰ód
(&
öv˙é
->
∑øm
, (öv˙é->∑øm), 1, inv˙é->
övfûe
) == 0) {

559 
	`Ârötf
(
°dîr
, "%s:Ém±y invîãd fûe\n", 
¨gv0
);

560 
˛o£öv
;

562 i‡(
öv˙é
->
∑øm
.
vîsi⁄
 !
FMTVERSION
) {

563 
	`Ârötf
(
°dîr
, "%s: c™nŸÑód old index f‹m©; u£ -U o±i⁄Åÿf‹˚ d©aba£Åÿªbuûd\n", 
¨gv0
);

564 
˛o£öv
;

566 
	`as£π
(
öv˙é
->
∑øm
.
sizeblk
 =(
t_logiˇlblk
));

568 i‡(
°©
 =0 && 
öv˙é
->
∑øm
.
fûe°©
 =
INVALONE
) {

569 
	`Ârötf
(
°dîr
, "%s: invîãd fûêi†locked\n", 
¨gv0
);

570 
˛o£öv
;

572 i‡((
öv˙é
->
po°fûe
 = 
	`vpf›í
(
övpo°
, ((
°©
 =0Ë? "rb" : "r+b"))Ë=
NULL
) {

574 i‡(!
	`övÊù«me
(
övpo°
, 
INVPOST2
, 
INVPOST
)) {

575 i‡((
öv˙é
->
po°fûe
 = 
	`vpf›í
(
övpo°
, ((
°©
 == 0) ? "rb" : "r+b"))))

576 
›íedövpo°
;

577 
	`övÊù«me
(
övpo°
, 
INVPOST
, 
INVPOST2
);

578 } i‡(!
	`övÊù«me
(
övpo°
, 
INVPOST
, 
INVPOST2
)) {

579 i‡((
öv˙é
->
po°fûe
 = 
	`vpf›í
(
övpo°
,((
°©
 == 0)?"rb":"r+b"))))

580 
›íedövpo°
;

581 
	`övÊù«me
(
övpo°
, 
INVPOST2
, 
INVPOST
);

583 
	`övˇ¬Ÿ›í
(
övpo°
);

584 
˛o£öv
;

586 
›íedövpo°
:

588 i‡((
öv˙é
->
logblk
 = 
	`mÆloc
((Ëöv˙é->
∑øm
.
sizeblk
)Ë=
NULL
) {

589 
	`övˇ¬ŸÆloc
((Ë
öv˙é
->
∑øm
.
sizeblk
);

590 
˛o£bŸh
;

593 
ªad_ödex
 = 1;

594 
öv˙é
->
iödex
 = 
NULL
;

595 #i‡
SHARE


596 i‡(
öv˙é
->
∑øm
.
sh¨e
 == 1) {

597 
key_t
 
shm_key
;

598 
shmid_ds
 
shm_buf
;

599 
shm_id
;

602 
shm_key
 = 
	`·ok
(
öv«me
, 2);

603 
shm_id
 = 
	`shmgë
(
shm_key
, 0, 0);

605 i‡(
shm_id
 == -1) {

607 
shm_id
 = 
	`shmgë
(
shm_key
, 
öv˙é
->
∑øm
.
supsize
 + (), 
IPC_CREAT
 | 0666);

608 i‡(
shm_id
 == -1)

609 
	`≥º‹
("CouldÇot create shared memory segment");

611 
ªad_ödex
 = 0;

613 i‡(
shm_id
 != -1) {

614 
öv˙é
->
iödex
 = 
	`shm©
(
shm_id
, 0, ((
ªad_ödex
Ë? 0 : 
SHM_RDONLY
));

615 i‡(
öv˙é
->
iödex
 =(*)
ERR
) {

616 
	`Ârötf
(
°dîr
, "%s: sh¨ed mem‹yÜök faûed\n", 
¨gv0
);

617 
öv˙é
->
iödex
 = 
NULL
;

618 
ªad_ödex
 = 1;

623 i‡(
öv˙é
->
iödex
 =
NULL
)

625 
öv˙é
->
iödex
 = 
	`mÆloc
((Ëöv˙é->
∑øm
.
supsize


627 i‡(
öv˙é
->
iödex
 =
NULL
) {

628 
	`övˇ¬ŸÆloc
((Ë
öv˙é
->
∑øm
.
supsize
);

629 
	`‰ì
(
öv˙é
->
logblk
);

630 
˛o£bŸh
;

632 i‡(
ªad_ödex
) {

633 
	`f£ek
(
öv˙é
->
övfûe
, inv˙é->
∑øm
.
°¨tbyã
, 
SEEK_SET
);

634 
	`‰ód
(
öv˙é
->
iödex
, (Ëöv˙é->
∑øm
.
supsize
, 1,

635 
öv˙é
->
övfûe
);

637 
öv˙é
->
numblk
 = -1;

638 i‡(
	`boﬁªady
() == -1) {

639 
˛o£bŸh
:

640 
	`f˛o£
(
öv˙é
->
po°fûe
);

641 
˛o£öv
:

642 
	`f˛o£
(
öv˙é
->
övfûe
);

646 
öv˙é
->
∑øm
.
fûe°©
 = 
°©
;

647 i‡(
°©
 > 
öv˙é
->
∑øm
.
fûe°©
 ) {

648 
	`ªwöd
(
öv˙é
->
övfûe
);

649 
	`fwrôe
(&
öv˙é
->
∑øm
, (öv˙é->∑øm), 1, inv˙é->
övfûe
);

652 
	}
}

656 
	$öv˛o£
(
INVCONTROL
 *
öv˙é
)

659 i‡(
öv˙é
->
∑øm
.
fûe°©
 > 0) {

660 
öv˙é
->
∑øm
.
fûe°©
 = 0;

661 
	`ªwöd
(
öv˙é
->
övfûe
);

662 
	`fwrôe
(&
öv˙é
->
∑øm
, 1,

663 (
öv˙é
->
∑øm
), inv˙é->
övfûe
);

665 i‡(
öv˙é
->
∑øm
.
fûe°©
 =
INVALONE
) {

667 
	`f£ek
(
öv˙é
->
övfûe
, inv˙é->
∑øm
.
°¨tbyã
, 
SEEK_SET
);

668 
	`fwrôe
(
öv˙é
->
iödex
, 1,

669 (Ë
öv˙é
->
∑øm
.
supsize
, inv˙é->
övfûe
);

671 
	`f˛o£
(
öv˙é
->
övfûe
);

672 
	`f˛o£
(
öv˙é
->
po°fûe
);

673 #i‡
SHARE


674 i‡(
öv˙é
->
∑øm
.
sh¨e
 > 0) {

675 
	`shmdt
(
öv˙é
->
iödex
);

676 
öv˙é
->
iödex
 = 
NULL
;

679 i‡(
öv˙é
->
iödex
 !
NULL
)

680 
	`‰ì
(
öv˙é
->
iödex
);

681 
	`‰ì
(
öv˙é
->
logblk
);

682 
	}
}

686 
	$öv°ï
(
INVCONTROL
 *
öv˙é
)

688 i‡(
öv˙é
->
key≤t
 < (öv˙é->
logblk
->
övblk
[0] - 1)) {

689 
öv˙é
->
key≤t
++;

694 
öv˙é
->
numblk
 = inv˙é->
logblk
->
övblk
[1];

697 
	`f£ek
(
öv˙é
->
övfûe
,

698 
öv˙é
->
numblk
*öv˙é->
∑øm
.
sizeblk
 + inv˙é->∑øm.
˙ésize
,

699 
SEEK_SET
);

700 
	`‰ód
(
öv˙é
->
logblk
, (Ëöv˙é->
∑øm
.
sizeblk
, 1,

701 
öv˙é
->
övfûe
);

702 
öv˙é
->
key≤t
 = 0;

703 
	}
}

707 
	$övf‹w¨d
(
INVCONTROL
 *
öv˙é
)

709 
	`öv°ï
(
öv˙é
);

712 ((
ENTRY
 * )(
öv˙é
->
logblk
->
övblk
 + 3Ë+ inv˙é->
key≤t
)->
po°
 == 0) {

713 
	`öv°ï
(
öv˙é
);

716 i‡((
öv˙é
->
numblk
 =0Ë&& (öv˙é->
key≤t
 == 0))

719 
	}
}

723 
	$övãrm
(
INVCONTROL
 *
öv˙é
, *
ãrm
)

725 
ENTRY
 * 
íåy±r
;

728 
íåy±r
 = (
ENTRY
 *)(
öv˙é
->
logblk
->
övblk
 + 3Ë+ inv˙é->
key≤t
;

729 
	`°∫˝y
(
ãrm
, 
öv˙é
->
logblk
->
chrblk
 + 
íåy±r
->
off£t
,

730 (Ë
íåy±r
->
size
);

731 *(
ãrm
 + 
íåy±r
->
size
) = '\0';

732 (
íåy±r
->
po°
);

733 
	}
}

737 
	$övföd
(
INVCONTROL
 *
öv˙é
, *
£¨chãrm
)

739 
imid
, 
ûow
, 
ihigh
;

740 
num
;

741 
i
;

742 *
öçå
, *
öçå2
;

743 
ENTRY
 *
íåy±r
;

746 i‡(
öv˙é
->
övfûe
 == 0)

750 
öçå
 = (*)
öv˙é
->
iödex
;

752 
ûow
 = 0;

753 
ihigh
 = *
öçå
++ - 1;

754 
ûow
 <
ihigh
) {

755 
imid
 = (
ûow
 + 
ihigh
) / 2;

756 
öçå2
 = 
öçå
 + 
imid
;

757 
i
 = 
	`°rcmp
(
£¨chãrm
, (
öv˙é
->
iödex
 + *
öçå2
));

758 i‡(
i
 < 0)

759 
ihigh
 = 
imid
 - 1;

760 i‡(
i
 > 0)

761 
ûow
 = ++
imid
;

763 
ûow
 = 
imid
 + 1;

768 
imid
 = (
ûow
) ? ilow - 1 : 0;

772 i‡((
imid
 !
öv˙é
->
numblk
Ë|| (öv˙é->
∑øm
.
fûe°©
 >
INVBUSY
)) {

773 
	`f£ek
(
öv˙é
->
övfûe
,

774 (
imid
*
öv˙é
->
∑øm
.
sizeblk
Ë+ inv˙é->∑øm.
˙ésize
,

775 
SEEK_SET
);

776 
öv˙é
->
numblk
 = 
imid
;

777 
	`‰ód
(
öv˙é
->
logblk
, ()öv˙é->
∑øm
.
sizeblk
, 1,

778 
öv˙é
->
övfûe
);

781 
§ch_ext
:

783 
öçå
 = (*Ë
öv˙é
->
logblk
->
övblk
;

785 
ûow
 = 0;

786 
ihigh
 = *
öçå
 - 1;

787 
öçå
 += 3;

788 
num
 = 0;

789 
ûow
 <
ihigh
) {

790 
imid
 = (
ûow
 + 
ihigh
) / 2;

791 
íåy±r
 = (
ENTRY
 *)
öçå
 + 
imid
;

792 
i
 = 
	`°∫cmp
(
£¨chãrm
, 
öv˙é
->
logblk
->
chrblk
 + 
íåy±r
->
off£t
,

793 (Ë
íåy±r
->
size
 );

794 i‡(
i
 == 0)

795 
i
 = 
	`°æí
(
£¨chãrm
Ë- 
íåy±r
->
size
;

796 i‡(
i
 < 0)

797 
ihigh
 = 
imid
 - 1;

798 i‡(
i
 > 0)

799 
ûow
 = ++
imid
;

801 
num
 = 
íåy±r
->
po°
;

806 i‡(
imid
 >
öv˙é
->
logblk
->
övblk
[0]) {

807 
öv˙é
->
key≤t
 = inv˙é->
logblk
->
övblk
[0];

808 
	`öv°ï
(
öv˙é
);

810 i‡(
öv˙é
->
∑øm
.
°¨tbyã
 < inv˙é->
numblk
 * inv˙é->∑øm.
sizeblk
)

811 
§ch_ext
;

813 
öv˙é
->
key≤t
 = 
imid
;

814 (
num
);

815 
	}
}

817 #i‡
DEBUG


821 
	$övdump
(
INVCONTROL
 *
öv˙é
, *
ãrm
)

823 
i
, 
j
, 
n
, *
l⁄g±r
;

824 
ENTRY
 * 
íåy±r
;

825 
ãmp
[512], *
±r
;

828 i‡(*
ãrm
 == '-') {

829 
j
 = 
	`©oi
(
ãrm
 + 1);

830 
l⁄g±r
 = (*)
öv˙é
->
iödex
;

831 
n
 = *
l⁄g±r
++;

832 
	`¥ötf
("Su≥rödex dump,Çum blocks=%ld\n", 
n
);

833 
l⁄g±r
 +
j
;

834 (
l⁄g±r
 <((*)
öv˙é
->
iödex
Ë+ 
n
Ë&& 
övbªak
 == 0) {

835 
	`¥ötf
("%2ld %6ld %s\n", 
j
++, *
l⁄g±r
, 
öv˙é
->
iödex
 + *longptr);

836 
l⁄g±r
++;

839 } i‡(*
ãrm
 == '#') {

840 
j
 = 
	`©oi
(
ãrm
 + 1);

842 
öv˙é
->
numblk
 = 
j
;

843 
	`f£ek
(
öv˙é
->
övfûe
,

844 (
j
 * 
öv˙é
->
∑øm
.
sizeblk
Ë+ inv˙é->∑øm.
˙ésize
,

845 
SEEK_SET
);

846 
	`‰ód
(
öv˙é
->
logblk
, (Ëöv˙é->
∑øm
.
sizeblk
, 1,

847 
öv˙é
->
övfûe
);

849 
i
 = 
	`abs
((Ë
	`övföd
(
öv˙é
, 
ãrm
));

850 
l⁄g±r
 = 
öv˙é
->
logblk
->
övblk
;

851 
n
 = *
l⁄g±r
++;

852 
	`¥ötf
("EntryÅermÅo invdump=%s,Öostings=%ld, forwrdÖtr=%ld, backÖtr=%ld\n"

853 , 
ãrm
, 
i
, *(
l⁄g±r
), *(longptr + 1));

855 
íåy±r
 = (
ENTRY
 *Ë(
öv˙é
->
logblk
->
övblk
 + 3);

856 
	`¥ötf
("%ldÅîm†öÅhi†block, block=%ld\n", 
n
, 
öv˙é
->
numblk
);

857 
	`¥ötf
("\tterm\t\t\tposts\tsize\toffset\tspace\t1st word\n");

858 
j
 = 0; j < 
n
 && 
övbªak
 == 0; j++) {

859 
±r
 = 
öv˙é
->
logblk
->
chrblk
 + 
íåy±r
->
off£t
;

860 
	`°∫˝y
(
ãmp
, 
±r
, (Ë
íåy±r
->
size
);

861 
ãmp
[
íåy±r
->
size
] = '\0';

862 
±r
 +((Ë* ()((
íåy±r
->
size
 + (() - 1)) / ()));

863 
	`¥ötf
("%2ld %-24s\t%5ld\t%3d\t%d\t%d\t%ld\n", 
j
, 
ãmp
, 
íåy±r
->
po°
,

864 
íåy±r
->
size
,É¡ry±r->
off£t
,É¡ry±r->
•a˚
,

865 *(*)
±r
);

866 
íåy±r
++;

868 
	}
}

872 
	$boﬁªady
()

874 
numôems
 = 0;

875 i‡(
ôem1
 !
NULL
)

876 
	`‰ì
(
ôem1
);

877 
£tsize1
 = 
SETINC
;

878 i‡((
ôem1
 = 
	`mÆloc
(
SETINC
 * (
POSTING
))Ë=
NULL
) {

879 
	`övˇ¬ŸÆloc
(
SETINC
);

882 i‡(
ôem2
 !
NULL
)

883 
	`‰ì
(
ôem2
);

884 
£tsize2
 = 
SETINC
;

885 i‡((
ôem2
 = 
	`mÆloc
(
SETINC
 * (
POSTING
))Ë=
NULL
) {

886 
	`övˇ¬ŸÆloc
(
SETINC
);

889 
ôem
 = 
ôem1
;

890 
ídôem
 = 
ôem
;

892 
	}
}

895 
	$boﬁ˛ór
()

897 
numôems
 = 0;

898 
ôem
 = 
ôem1
;

899 
ídôem
 = 
ôem
;

900 
	}
}

902 
POSTING
 *

903 
	$boﬁfûe
(
INVCONTROL
 *
öv˙é
, *
num
, 
boﬁ¨g
)

905 
ENTRY
 *
íåy±r
;

906 
FILE
 *
fûe
;

907 *
±r
;

908 *
±r2
;

909 
POSTING
 *
√wôem
 = 
NULL
;

910 
POSTING
 
po°ög
;

911 
u
;

912 
POSTING
 *
√w£ç
 = 
NULL
, *
£t1p
;

913 
√w£tc
, 
£t1c
, 
£t2c
;

916 
íåy±r
 = (
ENTRY
 *Ë(
öv˙é
->
logblk
->
övblk
 + 3Ë+ inv˙é->
key≤t
;

917 
±r
 = 
öv˙é
->
logblk
->
chrblk
 + 
íåy±r
->
off£t
;

918 
±r2
 = ((*Ë
±r
Ë+ (
íåy±r
->
size
 + (() - 1)) / ();

919 *
num
 = 
íåy±r
->
po°
;

920 
boﬁ¨g
) {

921 
BOOL_OR
:

922 
NOT
:

923 i‡(*
num
 == 0) {

924 *
num
 = 
numôems
;

925 (
ôem
);

929 
u
 = 0;

930 
boﬁ¨g
) {

931 
AND
:

932 
NOT
:

933 
√w£ç
 = 
£t1p
 = 
ôem
;

936 
BOOL_OR
:

937 
u
 = 
ídôem
 - 
ôem
;

939 
REVERSENOT
:

940 
u
 +*
num
;

941 i‡(
ôem
 =
ôem2
) {

942 i‡(
u
 > 
£tsize1
) {

943 
u
 +
SETINC
;

944 i‡((
ôem1
 = 
	`ªÆloc
(

945 
ôem1
, 
u
 * (
POSTING
))Ë=
NULL
) {

946 
ˇ¬ŸÆloc
;

948 
£tsize1
 = 
u
;

950 
√wôem
 = 
ôem1
;

953 i‡(
u
 > 
£tsize2
) {

954 
u
 +
SETINC
;

955 i‡((
ôem2
 = 
	`ªÆloc
(

956 
ôem2
, 
u
 * (
POSTING
))Ë=
NULL
) {

957 
ˇ¬ŸÆloc
:

958 
	`övˇ¬ŸÆloc
(
u
 * (
POSTING
));

959 
	`boﬁªady
();

960 *
num
 = -1;

961 (
NULL
);

963 
£tsize2
 = 
u
;

965 
√wôem
 = 
ôem2
;

967 
£t1p
 = 
ôem
;

968 
√w£ç
 = 
√wôem
;

970 
fûe
 = 
öv˙é
->
po°fûe
;

971 
	`f£ek
(
fûe
, *
±r2
, 
SEEK_SET
);

972 
	`‰ód
(&
po°ög
, ’o°ög), 1, 
fûe
);

973 
√w£tc
 = 0;

974 
boﬁ¨g
) {

975 
BOOL_OR
:

977 
£t1p
 = 
ôem
;

978 
√w£ç
 = 
√wôem
;

979 
£t1c
 = 0, 
£t2c
 = 0;

980 
£t1c
 < 
numôems
 && 
£t2c
 < *
num
; 
√w£tc
++) {

981 i‡(
£t1p
->
löeoff£t
 < 
po°ög
.lineoffset) {

982 *
√w£ç
++ = *
£t1p
++;

983 
£t1c
++;

985 i‡(
£t1p
->
löeoff£t
 > 
po°ög
.lineoffset) {

986 *
√w£ç
++ = 
po°ög
;

987 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

988 
£t2c
++;

990 i‡(
£t1p
->
ty≥
 < 
po°ög
.type) {

991 *
√w£ç
++ = *
£t1p
++;

992 
£t1c
++;

994 i‡(
£t1p
->
ty≥
 > 
po°ög
.type) {

995 *
√w£ç
++ = 
po°ög
;

996 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

997 
£t2c
++;

1000 *
√w£ç
++ = *
£t1p
++;

1001 
£t1c
++;

1002 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1003 
£t2c
++;

1007 i‡(
£t1c
 < 
numôems
) {

1008 
√w£tc
 +
numôems
 - 
£t1c
;

1009 
£t1c
++ < 
numôems
) {

1010 *
√w£ç
++ = *
£t1p
++;

1013 
£t2c
++ < *
num
) {

1014 *
√w£ç
++ = 
po°ög
;

1015 
√w£tc
++;

1016 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1019 
ôem
 = 
√wôem
;

1022 
AND
:

1023 
£t1c
 = 0, 
£t2c
 = 0; së1¯< 
numôems
 && së2¯< *
num
; ) {

1024 i‡(
£t1p
->
löeoff£t
 < 
po°ög
.lineoffset) {

1025 
£t1p
++;

1026 
£t1c
++;

1028 i‡(
£t1p
->
löeoff£t
 > 
po°ög
.lineoffset) {

1029 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1030 
£t2c
++;

1032 i‡(
£t1p
->
ty≥
 < 
po°ög
.type) {

1033 *
£t1p
++;

1034 
£t1c
++;

1036 i‡(
£t1p
->
ty≥
 > 
po°ög
.type) {

1037 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1038 
£t2c
++;

1041 *
√w£ç
++ = *
£t1p
++;

1042 
√w£tc
++;

1043 
£t1c
++;

1044 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1045 
£t2c
++;

1050 
NOT
:

1051 
£t1c
 = 0, 
£t2c
 = 0; së1¯< 
numôems
 && së2¯< *
num
; ) {

1052 i‡(
£t1p
->
löeoff£t
 < 
po°ög
.lineoffset) {

1053 *
√w£ç
++ = *
£t1p
++;

1054 
√w£tc
++;

1055 
£t1c
++;

1057 i‡(
£t1p
->
löeoff£t
 > 
po°ög
.lineoffset) {

1058 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1059 
£t2c
++;

1061 i‡(
£t1p
->
ty≥
 < 
po°ög
.type) {

1062 *
√w£ç
++ = *
£t1p
++;

1063 
√w£tc
++;

1064 
£t1c
++;

1066 i‡(
£t1p
->
ty≥
 > 
po°ög
.type) {

1067 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1068 
£t2c
++;

1071 
£t1c
++;

1072 
£t1p
++;

1073 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1074 
£t2c
++;

1077 
√w£tc
 +
numôems
 - 
£t1c
;

1078 
£t1c
++ < 
numôems
) {

1079 *
√w£ç
++ = *
£t1p
++;

1083 
REVERSENOT
:

1084 
£t1c
 = 0, 
£t2c
 = 0; së1¯< 
numôems
 && së2¯< *
num
; ) {

1085 i‡(
£t1p
->
löeoff£t
 < 
po°ög
.lineoffset) {

1086 
£t1p
++;

1087 
£t1c
++;

1089 i‡(
£t1p
->
löeoff£t
 > 
po°ög
.lineoffset) {

1090 *
√w£ç
++ = 
po°ög
;

1091 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1092 
£t2c
++;

1094 i‡(
£t1p
->
ty≥
 < 
po°ög
.type) {

1095 
£t1p
++;

1096 
£t1c
++;

1098 i‡(
£t1p
->
ty≥
 > 
po°ög
.type) {

1099 *
√w£ç
++ = 
po°ög
;

1100 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1101 
£t2c
++;

1104 
£t1c
++;

1105 
£t1p
++;

1106 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1107 
£t2c
++;

1110 
£t2c
++ < *
num
) {

1111 *
√w£ç
++ = 
po°ög
;

1112 
√w£tc
++;

1113 
	`‰ód
(&
po°ög
, (Ë’o°ög), 1, 
fûe
);

1115 
ôem
 = 
√wôem
;

1119 
numôems
 = 
√w£tc
;

1120 *
num
 = 
√w£tc
;

1121 
ídôem
 = (
POSTING
 *Ë
√w£ç
;

1122 ((
POSTING
 *Ë
ôem
);

1123 
	}
}

1126 
POSTING
 *

1127 
	$boﬁßve
(
˛ór
)

1129 
i
;

1130 
POSTING
 *
±r
;

1131 
POSTING
 *
ﬁd°uff
, *
√w°uff
;

1133 i‡(
numôems
 == 0) {

1134 i‡(
˛ór
)

1135 
	`boﬁ˛ór
();

1136 (
NULL
);

1139 i‡(
˛ór
) {

1140 
±r
 = 
ôem
;

1142 i‡(
ôem
 =
ôem1
)

1143 
ôem1
 = 
NULL
;

1145 
ôem2
 = 
NULL
;

1146 
	`boﬁªady
();

1147 (
±r
);

1149 
i
 = (
ídôem
 - 
ôem
Ë* (
POSTING
) + 100;

1150 i‡((
±r
 = 
	`mÆloc
(
i
))
r
 =
NULL
) {

1151 
	`övˇ¬ŸÆloc
(
i
);

1152 (
±r
);

1155 
ﬁd°uff
 = 
ôem
;

1156 
√w°uff
 = 
±r
;

1157 
ﬁd°uff
 < 
ídôem
)

1158 *
√w°uff
++ = *
ﬁd°uff
++;

1159 (
±r
);

1160 
	}
}

1164 
	$övˇ¬ŸÆloc
(
n
)

1166 
	`Ârötf
(
°dîr
, "%s: c™nŸáŒoˇã %u byãs\n", 
¨gv0
, 
n
);

1167 
	}
}

1170 
	$övˇ¬Ÿ›í
(*
fûe
)

1172 
	`Ârötf
(
°dîr
, "%s: c™nŸ o≥¿fûê%s\n", 
¨gv0
, 
fûe
);

1173 
	}
}

1176 
	$övˇ¬Ÿwrôe
(*
fûe
)

1178 
	`≥º‹
(
¨gv0
);

1179 
	`Ârötf
(
°dîr
, "%s: wrôêtÿfûê%†Áûed\n", 
¨gv0
, 
fûe
);

1180 
	}
}

	@invlib.h

36 #i‚de‡
CSCOPE_INVLIB_H


37 
	#CSCOPE_INVLIB_H


	)

39 
	~<°dio.h
>

40 
	~<limôs.h
>

46 #i‡
CHAR_MAX
==255

47 
	#BASE
 223

	)

48 
	#PRECISION
 4

	)

50 #i‡
CHAR_MAX
==127

51 
	#BASE
 95

	)

52 
	#PRECISION
 5

	)

54 #îr‹ 
Nìd
 
a
 
∂©f‹m
 
wôh
 8 
bôs
 
ö
á 
vÆue


59 
	#INVAVAIL
 0

	)

60 
	#INVBUSY
 1

	)

61 
	#INVALONE
 2

	)

64 
	#BOOL_OR
 3

	)

65 
	#AND
 4

	)

66 
	#NOT
 5

	)

67 
	#REVERSENOT
 6

	)

71 
	mvîsi⁄
;

72 
	mfûe°©
;

73 
	msizeblk
;

74 
	m°¨tbyã
;

75 
	msupsize
;

76 
	m˙ésize
;

77 
	msh¨e
;

78 } 
	tPARAM
;

81 
FILE
 *
	mövfûe
;

82 
FILE
 *
	mpo°fûe
;

83 
PARAM
 
	m∑øm
;

84 *
	miödex
;

85 
logiˇlblk
 *
	mlogblk
;

86 
	mnumblk
;

87 
	mkey≤t
;

88 } 
	tINVCONTROL
;

91 
	moff£t
;

92 
	msize
;

93 
	m•a˚
;

94 
	mpo°
;

95 } 
	tENTRY
;

98 
	mlöeoff£t
;

99 
	mf˙off£t
;

100 
	mfûeödex
 : 24;

101 
	mty≥
 : 8;

102 } 
	tPOSTING
;

104 *
§coff£t
;

105 
n§coff£t
;

108 
boﬁ˛ór
();

109 
POSTING
 *
boﬁfûe
(
INVCONTROL
 *
öv˙é
, *
num
, 
boﬁ¨g
);

110 
öv˛o£
(
INVCONTROL
 *
öv˙é
);

111 
övdump
(
INVCONTROL
 *
öv˙é
, *
ãrm
);

112 
övföd
(
INVCONTROL
 *
öv˙é
, *
£¨chãrm
);

113 
övf‹w¨d
(
INVCONTROL
 *
öv˙é
);

114 
öv›í
(
INVCONTROL
 *
öv˙é
, *
öv«me
, *
övpo°
, 
°©us
);

115 
övmake
(*
öv«me
, *
övpo°
, 
FILE
 *
öfûe
);

116 
övãrm
(
INVCONTROL
 *
öv˙é
, *
ãrm
);

	@library.h

35 #i‚de‡
CSCOPE_LIBRARY_H


36 
	#CSCOPE_LIBRARY_H


	)

38 
	~<°dio.h
>

41 *
com∑th
(*
∑th«me
);

42 *
egªpöô
(*
egªµ©
);

43 *
logdú
(*
«me
);

44 *
myba£«me
(*
∑th
);

45 
FILE
 *
myf›í
(*
∑th
, *
mode
);

46 *
mygëív
(*
v¨übÀ
, *
deÊt
);

47 
my›í
(*
∑th
, 
Êag
, 
mode
);

48 
FILE
 *
myp›í
(*
cmd
, *
mode
);

49 
myp˛o£
(
FILE
 *
±r
);

50 
FILE
 *
vpf›í
(*
fûíame
, *
ty≥
);

51 
egªpˇ£Àss
(
i
);

	@logdir.c

42 
	~<uni°d.h
>

43 
	~<°rög.h
>

44 
	~"globÆ.h
"

46 
	#OURBUFSIZ
 160

	)

48 c⁄° 
	grcsid
[] = "$Id:Üogdir.c,v 1.5 2002/07/28 15:40:07 broeker Exp $";

50 
	glöe
[
OURBUFSIZ
+1];

53 *
√xtfõld
(*
p
);

57 
	$√xtfõld
(*
p
)

59 *
p
 && *p != ':')

60 ++
p
;

61 i‡(*
p
) *p++ = 0;

62 (
p
);

63 
	}
}

66 
	$logdú
(*
«me
)

68 *
p
;

69 
i
, 
j
;

70 
pwf
;

73 i‡((
pwf
 = 
	`my›í
("/etc/passwd", 0, 0)) == -1)

79 
i
 = 
	`ªad
(
pwf
, 
löe
, 
OURBUFSIZ
);

80 
j
 = 0; j < 
i
; j++)

81 i‡(
löe
[
j
] == '\n')

84 i‡(
j
 >
i
)

86 
löe
[++
j
] = 0;

87 (Ë
	`l£ek
(
pwf
, (Ë(
j
 - 
i
), 1);

88 
p
 = 
	`√xtfõld
(
löe
);

89 } *
«me
 !*
löe
 ||

90 
	`°rcmp
(
«me
, 
löe
) != 0);

91 (Ë
	`˛o£
(
pwf
);

94 
p
 = 
	`√xtfõld
(p);

95 
p
 = 
	`√xtfõld
(p);

96 
p
 = 
	`√xtfõld
(p);

97 
p
 = 
	`√xtfõld
(p);

100 (Ë
	`√xtfõld
(
p
);

101 (
p
);

102 
	}
}

	@lookup.c

38 
	~"globÆ.h
"

39 
	~"lookup.h
"

41 c⁄° 
	grcsid
[] = "$Id:Üookup.c,v 1.4 2006/04/21 10:45:48 broeker Exp $";

44 
	gíumãxt
[] = "enum";

45 
	gexã∫ãxt
[] = "extern";

46 
	g°ru˘ãxt
[] = "struct";

47 
	gty≥de·ext
[] = "typedef";

48 
	guni⁄ãxt
[] = "union";

56 
key°ru˘
 
	gkeyw‹d
[] = {

57 {"", '\0', 
NULL
},

58 {"#deföe", ' ', 
NULL
},

59 {"#ö˛ude", ' ', 
NULL
},

60 {"bªak", '\0', 
NULL
},

61 {"ˇ£", ' ', 
NULL
},

62 {"ch¨", ' ', 
NULL
},

63 {"c⁄töue", '\0', 
NULL
},

64 {"deÁu…", '\0', 
NULL
},

65 {"doubÀ", ' ', 
NULL
},

66 {"\t", '\0', 
NULL
},

67 {"\n", '\0', 
NULL
},

68 {"ñ£", ' ', 
NULL
},

69 {
íumãxt
, ' ', 
NULL
},

70 {
exã∫ãxt
, ' ', 
NULL
},

71 {"Êﬂt", ' ', 
NULL
},

72 {"f‹", '(', 
NULL
},

73 {"gŸo", ' ', 
NULL
},

74 {"if", '(', 
NULL
},

75 {"öt", ' ', 
NULL
},

76 {"l⁄g", ' ', 
NULL
},

77 {"ªgi°î", ' ', 
NULL
},

78 {"ªtu∫", '\0', 
NULL
},

79 {"sh‹t", ' ', 
NULL
},

80 {"sizeof", '\0', 
NULL
},

81 {"°©ic", ' ', 
NULL
},

82 {
°ru˘ãxt
, ' ', 
NULL
},

83 {"swôch", '(', 
NULL
},

84 {
ty≥de·ext
, ' ', 
NULL
},

85 {
uni⁄ãxt
, ' ', 
NULL
},

86 {"unsig√d", ' ', 
NULL
},

87 {"void", ' ', 
NULL
},

88 {"whûe", '(', 
NULL
},

91 {"do", '\0', 
NULL
},

92 {"auto", ' ', 
NULL
},

93 {"f‹å™", ' ', 
NULL
},

94 {"c⁄°", ' ', 
NULL
},

95 {"sig√d", ' ', 
NULL
},

96 {"vﬁ©ûe", ' ', 
NULL
},

98 
	#KEYWORDS
 ((
keyw‹d
Ë/ (
key°ru˘
))

	)

100 
	#HASHMOD
 (
KEYWORDS
 * 2 + 1)

	)

102 
key°ru˘
 *
	ghashèb
[
HASHMOD
];

107 
	$öôsymèb
()

109 
i
, 
j
;

110 
key°ru˘
 *
p
;

112 
i
 = 1; i < 
KEYWORDS
; ++i) {

113 
p
 = 
keyw‹d
 + 
i
;

114 
j
 = 
	`hash
(
p
->
ãxt
Ë% 
HASHMOD
;

115 
p
->
√xt
 = 
hashèb
[
j
];

116 
hashèb
[
j
] = 
p
;

118 
	}
}

123 
	$lookup
(*
idít
)

125 
key°ru˘
 *
p
;

126 
c
;

129 
p
 = 
hashèb
[
	`hash
(
idít
Ë% 
HASHMOD
];Ö !
NULL
;Ö =Ö->
√xt
) {

130 i‡(
	`°ªquÆ
(
idít
, 
p
->
ãxt
)) {

131 i‡(
com¥ess
 =
YES
 && (
c
 = 
p
 - 
keyw‹d
) < ' ') {

132 
idít
[0] = 
c
;

134 (
p
->
ãxt
);

138 (
NULL
);

139 
	}
}

143 
	$hash
(*
ss
)

145 
i
;

146 *
s
 = (*)
ss
;

148 
i
 = 0; *
s
 != '\0'; )

149 
i
 +*
s
++;

150 (
i
);

151 
	}
}

	@lookup.h

36 #i‚de‡
CSCOPE_LOOKUP_H


37 
	#CSCOPE_LOOKUP_H


	)

42 
íumãxt
[];

43 
exã∫ãxt
[];

44 
°ru˘ãxt
[];

45 
ty≥de·ext
[];

46 
uni⁄ãxt
[];

	@main.c

39 
	~"globÆ.h
"

41 
	~"buûd.h
"

42 
	~"vp.h
"

43 
	~"vîsi⁄.h
"

44 
	~"sˇ¬î.h
"

45 
	~"Æloc.h
"

47 
	~<°dlib.h
>

48 #i‡
deföed
(
USE_NCURSES
Ë&& !deföed(
RENAMED_NCURSES
)

49 
	~<ncur£s.h
>

51 
	~<cur£s.h
>

53 
	~<sys/ty≥s.h
>

54 
	~<sys/°©.h
>

55 
	~<sig«l.h
>

58 
	#EDITOR
 "vi"

	)

59 
	#HOME
 "/"

	)

60 
	#SHELL
 "sh"

	)

61 
	#LINEFLAG
 "+%s"

	)

62 
	#TMPDIR
 "/tmp"

	)

63 #i‚de‡
DFLT_INCDIR


64 
	#DFLT_INCDIR
 "/u§/ö˛ude"

	)

67 c⁄° 
	grcsid
[] = "$Id: main.c,v 1.46 2009/04/10 13:39:23 broeker Exp $";

71 
	gdich¨1
[] = "Åeisaprnl(of)=c";

72 
	gdich¨2
[] = "Ånerpla";

74 
	gdicode1
[256];

75 
	gdicode2
[256];

77 *
	gedô‹
, *
	gshñl
, *
	glöeÊag
;

78 *
	ghome
;

79 
BOOL
 
	glöeÊaga·îfûe
;

80 *
	g¨gv0
;

81 
BOOL
 
	gcom¥ess
 = 
YES
;

82 
BOOL
 
	gdbåunˇãd
;

83 
	gdi•comp⁄íts
 = 1;

84 #i‡
CCS


85 
BOOL
 
	gdi•œyvîsi⁄
;

87 
BOOL
 
	gedôÆÕrom±
 = 
YES
;

88 
	gfûórgc
;

89 **
	gfûórgv
;

90 
	gfûevîsi⁄
;

91 
BOOL
 
	göcur£s
 = 
NO
;

92 
BOOL
 
	gövîãdödex
;

93 
BOOL
 
	gisu±od©e
;

94 
BOOL
 
	gkî√lmode
;

95 
BOOL
 
	glöemode
 = 
NO
;

96 
BOOL
 
	gvîbo£mode
 = 
NO
;

97 
BOOL
 
	gªcur£_dú
 = 
NO
;

98 *
	g«mefûe
;

99 
BOOL
 
	gogs
;

100 *
	g¥ïíd∑th
;

101 
FILE
 *
	gªfsfound
;

102 
	gãmp1
[
PATHLEN
 + 1];

103 
	gãmp2
[
PATHLEN
 + 1];

104 
	gãmpdúpv
[
PATHLEN
 + 1];

105 
	gtŸÆãrms
;

106 
BOOL
 
	gåun_syms
;

107 
	gãmp°rög
[
TEMPSTRING_LEN
 + 1];

109 *
	gtmpdú
;

111 
BOOL
 
	g⁄e£¨ch
;

112 *
	gªÊöes
;

115 
öôcom¥ess
();

116 
l⁄gußge
();

117 
skùli°
(
FILE
 *
ﬁdªfs
);

118 
ußge
();

120 #ifde‡
HAVE_FIXKEYPAD


121 
fixkey∑d
();

124 #i‡
deföed
(
KEY_RESIZE
Ë&& !deföed(
__DJGPP__
)

126 
	$sigwöch_h™dÀr
(
sig
, 
sigöfo_t
 *
öfo
, *
unu£d
)

128 (Ë
sig
;

129 (Ë
öfo
;

130 (Ë
unu£d
;

131 if(
öcur£s
 =
YES
)

132 
	`ungëch
(
KEY_RESIZE
);

133 
	}
}

137 
	$maö
(
¨gc
, **
¨gv
)

139 
FILE
 *
«mes
;

140 
ﬁdnum
;

141 
∑th
[
PATHLEN
 + 1];

142 
FILE
 *
ﬁdªfs
;

143 *
s
;

144 
c
;

145 
i
;

146 
pid_t
 
pid
;

147 
°©
 
°©_buf
;

148 #i‡
	`deföed
(
KEY_RESIZE
Ë&& !deföed(
__DJGPP__
)

149 
siga˘i⁄
 
wöch_a˘i⁄
;

151 
mode_t
 
‹ig_umask
;

153 
yyö
 = 
°dö
;

154 
yyout
 = 
°dout
;

156 
¨gv0
 = 
¨gv
[0];

159 --
¨gc
 > 0 && (*++
¨gv
)[0] == '-') {

161 i‡(
	`°ªquÆ
(
¨gv
[0], "--help")

162 || 
	`°ªquÆ
(
¨gv
[0], "-h")) {

163 
	`l⁄gußge
();

164 
	`myexô
(0);

166 i‡(
	`°ªquÆ
(
¨gv
[0], "--version")

167 || 
	`°ªquÆ
(
¨gv
[0], "-V")) {

168 #i‡
CCS


169 
di•œyvîsi⁄
 = 
YES
;

171 
	`Ârötf
(
°dîr
, "%s: vîsi⁄ %d%s\n", 
¨gv0
,

172 
FILEVERSION
, 
FIXVERSION
);

173 
	`myexô
(0);

177 
s
 = 
¨gv
[0] + 1; *s != '\0'; s++) {

180 i‡(
	`isdigô
((Ë*
s
)) {

181 
fõld
 = *
s
 - '0';

182 i‡(
fõld
 > 8) {

183 
fõld
 = 8;

185 i‡(*++
s
 ='\0' && --
¨gc
 > 0) {

186 
s
 = *++
¨gv
;

188 i‡(
	`°æí
(
s
Ë> 
PATLEN
) {

189 
	`po°Áèl
("\
:Ö©ã∫Åoÿl⁄g, c™nŸ bê> %d ch¨a˘îs\n", 
PATLEN
);

193 
	`°r˝y
(
P©ã∫
, 
s
);

194 
√xèrg
;

196 *
s
) {

198 --
¨gc
;

199 ++
¨gv
;

200 
œ°¨g
;

202 
buûd⁄ly
 = 
YES
;

203 
löemode
 = 
YES
;

206 
com¥ess
 = 
NO
;

209 
ˇ£Àss
 = 
YES
;

210 
	`egªpˇ£Àss
(
ˇ£Àss
);

213 
isu±od©e
 = 
YES
;

216 
edôÆÕrom±
 = 
NO
;

219 
kî√lmode
 = 
YES
;

222 
⁄e£¨ch
 = 
YES
;

225 
löemode
 = 
YES
;

228 
vîbo£mode
 = 
YES
;

231 
ogs
 = 
YES
;

234 
övîãdödex
 = 
YES
;

237 
åun_syms
 = 
YES
;

240 
unc⁄dôi⁄Æ
 = 
YES
;

243 
fûesch™ged
 = 
YES
;

246 
ªcur£_dú
 = 
YES
;

256 
c
 = *
s
;

257 i‡(*++
s
 ='\0' && --
¨gc
 > 0) {

258 
s
 = *++
¨gv
;

260 i‡(*
s
 == '\0') {

261 
	`Ârötf
(
°dîr
, "%s: -%c option: missing orÉmpty value\n",

262 
¨gv0
, 
c
);

263 
ußge
;

265 
c
) {

267 
ªffûe
 = 
s
;

268 i‡(
	`°æí
(
ªffûe
Ë> (
∑th
) - 1) {

269 
	`po°Áèl
("\
:Ñeffûêtoÿl⁄g, c™nŸ bê> %d ch¨a˘îs\n", (
∑th
) - 1);

273 
	`°r˝y
(
∑th
, 
s
);

274 #ifde‡
SHORT_NAMES_ONLY


276 
s
 = 
	`myba£«me
(
∑th
);

277 i‡(
	`°æí
(
s
) > 11) {

278 
s
[11] = '\0';

281 
s
 = 
∑th
 + 
	`°æí
(path);

282 
	`°r˝y
(
s
, ".in");

283 
öv«me
 = 
	`my_°rdup
(
∑th
);

284 
	`°r˝y
(
s
, ".po");

285 
övpo°
 = 
	`my_°rdup
(
∑th
);

288 
ªÊöes
 = 
s
;

291 
«mefûe
 = 
s
;

294 
	`ö˛udedú
(
s
);

297 i‡(*
s
 < '0' || *s > '9' ) {

298 
	`Ârötf
(
°dîr
, "\
%s: -p option: missing or invalidÇumeric value\n",

300 
¨gv0
);

301 
ußge
;

303 
di•comp⁄íts
 = 
	`©oi
(
s
);

306 
¥ïíd∑th
 = 
s
;

310 
	`sour˚dú
(
s
);

313 
√xèrg
;

315 
	`Ârötf
(
°dîr
, "%s: unknow¿›ti⁄: -%c\n", 
¨gv0
,

316 *
s
);

317 
ußge
:

318 
	`ußge
();

319 
	`Ârötf
(
°dîr
, "TryÅhe -h option for more information.\n");

320 
	`myexô
(1);

323 
√xèrg
:

327 
œ°¨g
:

329 
edô‹
 = 
	`mygëív
("EDITOR", 
EDITOR
);

330 
edô‹
 = 
	`mygëív
("VIEWER",Éditor);

331 
edô‹
 = 
	`mygëív
("CSCOPE_EDITOR",Éditor);

332 
home
 = 
	`mygëív
("HOME", 
HOME
);

333 
shñl
 = 
	`mygëív
("SHELL", 
SHELL
);

334 
löeÊag
 = 
	`mygëív
("CSCOPE_LINEFLAG", 
LINEFLAG
);

335 
löeÊaga·îfûe
 = 
	`gëív
("CSCOPE_LINEFLAG_AFTER_FILE") ? 1 : 0;

336 
tmpdú
 = 
	`mygëív
("TMPDIR", 
TMPDIR
);

339 i‡(
«mefûe
 && 
	`°rcmp
“amefûe, "-"Ë=0 && !
buûd⁄ly
) {

340 
	`po°Áèl
("cscope: Must use -b if fileÜist comes from stdin\n");

345 i‡(
	`l°©
 (
tmpdú
, &
°©_buf
)) {

346 
	`Ârötf
 (
°dîr
, "\
: Temporary directory %s doesÇotÉxist or cannot beáccessed\n",

348 
tmpdú
);

349 
	`Ârötf
 (
°dîr
, "\
: Please createÅhe directory or setÅheÉnvironment variable\n\
: TMPDIRÅoá valid directory\n");

352 
	`myexô
(1);

356 
‹ig_umask
 = 
	`umask
(
S_IRWXG
|
S_IRWXO
);

357 
pid
 = 
	`gëpid
();

358 
	`¢¥ötf
(
ãmpdúpv
, —empdúpv), "%s/csc›e.%d", 
tmpdú
, 
pid
);

359 if(
	`mkdú
(
ãmpdúpv
,
S_IRWXU
)) {

360 
	`Ârötf
(
°dîr
, "\
: CouldÇot createÖrivateÅemp dir %s\n",

362 
ãmpdúpv
);

363 
	`myexô
(1);

365 
	`umask
(
‹ig_umask
);

367 
	`¢¥ötf
(
ãmp1
, —emp1), "%s/csc›e.1", 
ãmpdúpv
);

368 
	`¢¥ötf
(
ãmp2
, —emp2), "%s/csc›e.2", 
ãmpdúpv
);

371 i‡(
	`sig«l
(
SIGINT
, 
SIG_IGN
) != SIG_IGN) {

373 
	`sig«l
(
SIGINT
, 
myexô
);

374 
	`sig«l
(
SIGQUIT
, 
myexô
);

377 
	`sig«l
(
SIGHUP
, 
myexô
);

380 
	`sig«l
(
SIGTERM
, 
myexô
);

383 i‡(
ªffûe
[0] !'/' && 
	`ac˚ss
(".", 
WRITE
) != 0) {

391 
	`¢¥ötf
(
∑th
, ’©h), "%s/%s", 
home
, 
ªffûe
);

392 i‡(
isu±od©e
 =
NO
 || 
	`ac˚ss
(
∑th
, 
READ
) == 0) {

393 
ªffûe
 = 
	`my_°rdup
(
∑th
);

394 
	`¢¥ötf
(
∑th
, ’©h), "%s/%s", 
home
, 
öv«me
);

395 
öv«me
 = 
	`my_°rdup
(
∑th
);

396 
	`¢¥ötf
(
∑th
, ’©h), "%s/%s", 
home
, 
övpo°
);

397 
övpo°
 = 
	`my_°rdup
(
∑th
);

401 i‡(
löemode
 =
NO
) {

402 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

403 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

405 #i‡
	`deföed
(
KEY_RESIZE
Ë&& !deföed(
__DJGPP__
)

406 
wöch_a˘i⁄
.
ß_siga˘i⁄
 = 
sigwöch_h™dÀr
;

407 
	`sigem±y£t
(&
wöch_a˘i⁄
.
ß_mask
);

408 
wöch_a˘i⁄
.
ß_Êags
 = 
SA_SIGINFO
;

409 
	`siga˘i⁄
(
SIGWINCH
,&
wöch_a˘i⁄
,
NULL
);

413 
	`öôs¸
();

414 
	`íãrcur£s
();

415 #i‡
TERMINFO


416 
	`key∑d
(
°ds¸
, 
TRUE
);

417 #ifde‡
HAVE_FIXKEYPAD


418 
	`fixkey∑d
();

421 #i‡
UNIXPC


422 
	`°™díd
();

424 
	`di•öô
();

425 
	`£tfõld
();

426 
	`˛órmsg
();

427 
	`di•œy
();

432 i‡(
isu±od©e
 =
YES
) {

433 i‡((
ﬁdªfs
 = 
	`vpf›í
(
ªffûe
, "rb")Ë=
NULL
) {

434 
	`po°Áèl
("csc›e: c™nŸ o≥¿fûê%s\n", 
ªffûe
);

438 i‡(
	`fsˇnf
(
ﬁdªfs
, "csc›ê%d %*s", &
fûevîsi⁄
) != 1) {

439 
	`po°Áèl
("cscope: cannotÑead file version from file %s\n",

440 
ªffûe
);

443 i‡(
fûevîsi⁄
 >= 8) {

446 
com¥ess
 = 
YES
;

447 
övîãdödex
 = 
NO
;

451 
	`gëc
(
ﬁdªfs
);

452 i‡((
c
 = 
	`gëc
(
ﬁdªfs
)) != '-') {

453 
	`ungëc
(
c
, 
ﬁdªfs
);

456 
c
 = 
	`gëc
(
ﬁdªfs
)) {

458 
com¥ess
 = 
NO
;

461 
övîãdödex
 = 
YES
;

462 
	`fsˇnf
(
ﬁdªfs
, "%ld", &
tŸÆãrms
);

465 
dbåunˇãd
 = 
YES
;

466 
åun_syms
 = 
YES
;

470 
	`öôcom¥ess
();

471 
	`£ek_to_åaûî
(
ﬁdªfs
);

474 
	`skùli°
(
ﬁdªfs
);

475 
	`skùli°
(
ﬁdªfs
);

478 i‡(
	`fsˇnf
(
ﬁdªfs
, "%lu", &
n§cfûes
) != 1) {

479 
	`po°Áèl
("\
: c™nŸÑód sour˚ fûêsizê‰om fûê%s\n", 
ªffûe
);

484 
§cfûes
 = 
	`mymÆloc
(
n§cfûes
 * (*));

485 i‡(
fûevîsi⁄
 >= 9) {

488 i‡(
	`fsˇnf
(
ﬁdªfs
, "%d", &
ﬁdnum
) != 1) {

489 
	`po°Áèl
("\
: c™nŸÑód såög s∑˚ sizê‰om fûê%s\n", 
ªffûe
);

493 
s
 = 
	`mymÆloc
(
ﬁdnum
);

494 
	`gëc
(
ﬁdªfs
);

497 i‡(
	`‰ód
(
s
, 
ﬁdnum
, 1, 
ﬁdªfs
) != 1) {

498 
	`po°Áèl
("\
: c™nŸÑód sour˚ fûê«me†‰om fûê%s\n", 
ªffûe
);

503 
i
 = 0; i < 
n§cfûes
; ++i) {

504 
§cfûes
[
i
] = 
s
;

505 ++
s
; *s != '\n'; ++s) {

508 *
s
 = '\0';

509 ++
s
;

512 i‡((
«mefûe
 !
NULL
 && (
«mes
 = 
	`vpf›í
(namefile, "r")) != NULL)

513 || (
«mes
 = 
	`vpf›í
(
NAMEFILE
, "r")Ë!
NULL
) {

516 
	`fgës
(
∑th
, ’©h), 
«mes
Ë!
NULL
 && *path == '-') {

517 
i
 = 
∑th
[1];

518 
s
 = 
∑th
 + 2;

519 i‡(*
s
 == '\0') {

520 
	`fgës
(
∑th
, ’©h), 
«mes
);

521 
s
 = 
∑th
;

523 
i
) {

525 i‡(*
s
 < '0' || *s > '9') {

526 
	`po°îr
("csc›e: -∞›ti⁄ i¿fûê%s: missög o∏övÆidÇumîi¯vÆue\n", 
«mefûe
);

529 
di•comp⁄íts
 = 
	`©oi
(
s
);

532 
	`f˛o£
(
«mes
);

535 
i
 = 0; i < 
n§cfûes
; ++i) {

536 i‡(!
	`fgës
(
∑th
, ’©h), 
ﬁdªfs
) ) {

537 
	`po°Áèl
("\
: cannotÑead source fileÇame from file %s\n",

539 
ªffûe
);

542 
§cfûes
[
i
] = 
	`my_°rdup
(
∑th
);

545 
	`f˛o£
(
ﬁdªfs
);

548 
fûórgc
 = 
¨gc
;

549 
fûórgv
 = 
¨gv
;

552 i‡((
s
 = 
	`gëív
("SOURCEDIRS")Ë!
NULL
) {

553 
	`sour˚dú
(
s
);

556 
§cfûes
 = 
	`mymÆloc
(
m§cfûes
 * (*));

557 
	`makefûñi°
();

558 i‡(
n§cfûes
 == 0) {

559 
	`po°Áèl
("cscope:Ço source files found\n");

563 i‡((
s
 = 
	`gëív
("INCLUDEDIRS")Ë!
NULL
) {

564 
	`ö˛udedú
(
s
);

568 i‡(
kî√lmode
 =
NO
) {

569 
	`ö˛udedú
(
DFLT_INCDIR
);

573 
	`öôsymèb
();

576 
	`£tup_buûd_fûíames
(
ªffûe
);

579 
	`öôcom¥ess
();

580 i‡(
löemode
 =
NO
 || 
vîbo£mode
 =
YES
)

581 
	`po°msg
("Building cross-reference...");

582 
	`buûd
();

583 i‡(
löemode
 =
NO
 )

584 
	`˛órmsg
();

585 i‡(
buûd⁄ly
 =
YES
) {

586 
	`myexô
(0);

589 
	`›íd©aba£
();

593 i‡(
löemode
 =
YES
) {

594 i‡(*
P©ã∫
 != '\0') {

595 i‡(
	`£¨ch
(Ë=
YES
) {

598 i‡(
vîbo£mode
 =
YES
)

599 
	`¥ötf
("cscope: %dÜines\n",

600 
tŸÆlöes
);

602 (
c
 = 
	`gëc
(
ªfsfound
)Ë!
EOF
)

603 
	`putch¨
(
c
);

606 i‡(
⁄e£¨ch
 =
YES
)

607 
	`myexô
(0);

610 
buf
[
PATLEN
 + 2];

612 
	`¥ötf
(">> ");

613 
	`fÊush
(
°dout
);

614 i‡(
	`fgës
(
buf
, (buf), 
°dö
Ë=
NULL
) {

615 
	`myexô
(0);

618 i‡(*(
s
 = 
buf
 + 
	`°æí
(buf) - 1) == '\n') {

619 *
s
 = '\0';

621 *
buf
) {

632 
fõld
 = *
buf
 - '0';

633 
	`°r˝y
(
P©ã∫
, 
buf
 + 1);

634 
	`£¨ch
();

635 
	`¥ötf
("csc›e: %dÜöes\n", 
tŸÆlöes
);

636 (
c
 = 
	`gëc
(
ªfsfound
)Ë!
EOF
) {

637 
	`putch¨
(
c
);

642 
	`˘æ
('C'):

643 i‡(
ˇ£Àss
 =
NO
) {

644 
ˇ£Àss
 = 
YES
;

646 
ˇ£Àss
 = 
NO
;

648 
	`egªpˇ£Àss
(
ˇ£Àss
);

652 
	`˘æ
('R'):

653 
	`‰ìfûñi°
();

654 
	`makefûñi°
();

658 
	`ªbuûd
();

659 
	`putch¨
('\n');

663 
	`‰ìfûñi°
();

664 
	`putch¨
('\n');

668 
	`°r˝y
(
∑th
, 
buf
 + 1);

669 i‡(
	`öfûñi°
(
∑th
Ë=
NO
 &&

670 (
s
 = 
	`övõw∑th
(
∑th
)Ë!
NULL
) {

671 
	`add§cfûe
(
s
);

673 
	`putch¨
('\n');

677 
	`˘æ
('D'):

678 
	`˘æ
('Z'):

679 
	`myexô
(0);

682 
	`Ârötf
(
°dîr
, "csc›e: unknow¿comm™d '%s'\n", 
buf
);

689 i‡(
îr‹sfound
 =
YES
) {

690 
îr‹sfound
 = 
NO
;

691 
	`askf‹ªtu∫
();

694 i‡(*
P©ã∫
 != '\0') {

695 
	`©fõld
();

696 
	`comm™d
(
	`˘æ
('Y'));

697 } i‡(
ªÊöes
 !
NULL
) {

699 
	`ªadªfs
(
ªÊöes
);

701 
	`di•œy
();

704 i‡(!
£À˘ög
)

705 
	`©fõld
();

708 i‡((
c
 = 
	`mygëch
()Ë=
EOF
 || c =
	`˘æ
('D') || c == ctrl('Z')) {

712 i‡(
	`comm™d
(
c
Ë=
YES
) {

713 
	`di•œy
();

716 i‡(
£À˘ög
) {

717 
	`move
(
di•löe
[
curdi•löe
], 0);

718 
	`ª‰esh
();

722 
	`myexô
(0);

725 
	}
}

728 
	$ˇ¬Ÿ›í
(*
fûe
)

730 
	`po°îr
("C™nŸ o≥¿fûê%s", 
fûe
);

731 
	}
}

735 
	$ˇ¬Ÿwrôe
(*
fûe
)

737 
msg
[
MSGLEN
 + 1];

739 
	`¢¥ötf
(
msg
, (msg), "Removed fûê%†beˇu£ wrôêÁûed", 
fûe
);

741 
	`my≥º‹
(
msg
);

743 
	`u∆ök
(
fûe
);

744 
	`myexô
(1);

745 
	}
}

750 
	$öôcom¥ess
()

752 
i
;

754 i‡(
com¥ess
 =
YES
) {

755 
i
 = 0; i < 16; ++i) {

756 
dicode1
[(Ë(
dich¨1
[
i
])] = i * 8 + 1;

758 
i
 = 0; i < 8; ++i) {

759 
dicode2
[(Ë(
dich¨2
[
i
])] = i + 1;

762 
	}
}

767 
	$skùli°
(
FILE
 *
ﬁdªfs
)

769 
i
;

771 i‡(
	`fsˇnf
(
ﬁdªfs
, "%d", &
i
) != 1) {

772 
	`po°Áèl
("csc›e: c™nŸÑódÜi° sizê‰om fûê%s\n", 
ªffûe
);

775 --
i
 >= 0) {

776 i‡(
	`fsˇnf
(
ﬁdªfs
, "%*s") != 0) {

777 
	`po°Áèl
("csc›e: c™nŸÑódÜi°Çamê‰om fûê%s\n", 
ªffûe
);

781 
	}
}

786 
	$íãrcur£s
()

788 
öcur£s
 = 
YES
;

789 #i‚de‡
__MSDOS__


790 
	`n⁄l
();

792 
	`øw
();

793 
	`n€cho
();

794 
	`˛ór
();

795 
	`mou£öô
();

796 
	`døws¸ﬁlb¨
(
t›löe
, 
√xéöe
);

797 
	}
}

802 
	$exôcur£s
()

805 
	`move
(
LINES
 - 1, 0);

806 
	`˛π€ﬁ
();

807 
	`ª‰esh
();

810 
	`ídwö
();

811 
öcur£s
 = 
NO
;

814 
	`mou£˛ónup
();

815 
	`fÊush
(
°dout
);

816 
	}
}

821 
	$ußge
()

823 
	`Ârötf
(
°dîr
, "Usage: cscope [-bcCdehklLqRTuUvV] [-f file] [-F file] [-i file] [-I dir] [-s dir]\n");

824 
	`Ârötf
(
°dîr
, " [-pÇumber] [-PÖath] [-[0-8]Öattern] [source files]\n");

825 
	}
}

830 
	$l⁄gußge
()

832 
	`ußge
();

833 
	`Ârötf
(
°dîr
, "\
\n\
-b BuildÅhe cross-reference only.\n\
-C IgnoreÜetter case when searching.\n\
-c Use only ASCII characters inÅhe cross-ref file (don't compress).\n\
-d DoÇot updateÅhe cross-reference.\n\
-e SuppressÅhe <Ctrl>-e commandÖrompt between files.\n\
-F symfile Read symbolÑeferenceÜines from symfile.\n\
-fÑeffile UseÑeffileás cross-ref fileÇame instead of %s.\n",

842 
REFFILE
);

843 
	`Ârötf
(
°dîr
, "\
-h This help screen.\n\
-I incdir Look in incdir forány #include files.\n\
-iÇamefile BrowseÅhrough filesÜisted inÇamefile, instead of %s\n",

847 
NAMEFILE
);

848 
	`Ârötf
(
°dîr
, "\
-k Kernel Mode - don't use %s for #include files.\n",

850 
DFLT_INCDIR
);

851 
	`Âuts
("\
-L Doá single search withÜine-oriented output.\n\
-l Line-oriented interface.\n\
-numÖattern GoÅo input fieldÇum (counting from 0)ánd findÖattern.\n\
-PÖath PrependÖathÅoÑelative fileÇames inÖre-built cross-ref file.\n\
-pÇ DisplayÅheÜastÇ fileÖath components.\n\
-q Buildán inverted index for quick symbol searching.\n\
-R Recurse directories for files.\n\
-s dir Look in dir forádditional source files.\n\
-T Use onlyÅhe firstÉight charactersÅo matchágainst C symbols.\n\
-U Check fileÅime stamps.\n\
-u Unconditionally buildÅhe cross-reference file.\n\
-v Be more verbose inÜine mode.\n\
-V PrintÅhe versionÇumber.\n\
\n\
 seeÅhe manpage for more information.\n",

867 
°dîr
);

868 
	}
}

873 
	$myexô
(
sig
)

877 i‡(
ªfsfound
 !
NULL
)

878 
	`f˛o£
(
ªfsfound
);

881 i‡(
ãmp1
[0] != '\0') {

882 
	`u∆ök
(
ãmp1
);

883 
	`u∆ök
(
ãmp2
);

884 
	`rmdú
(
ãmpdúpv
);

887 i‡(
öcur£s
 =
YES
) {

888 
	`exôcur£s
();

891 i‡(
sig
 =
SIGQUIT
) {

892 
	`ab‹t
();

895 
	`‰ìfûñi°
();

896 
	`‰ìö˛i°
();

897 
	`‰ì§˛i°
();

898 
	`‰ì¸os§ef
();

899 
	`‰ì_√wbuûdfûes
();

901 
	`exô
(
sig
);

902 
	}
}

	@mouse.c

38 
	~"globÆ.h
"

40 
BOOL
 
	gmou£
 = 
NO
;

42 #ifde‡
UNIXPC


43 
	~<sys/wödow.h
>

44 
BOOL
 
	gunixpcmou£
 = 
NO
;

45 
	guw_hs
, 
	guw_vs
;

48 c⁄° 
	grcsid
[] = "$Id: mouse.c,v 1.4 2001/07/05 14:31:00 broeker Exp $";

51 *
	mãxt
;

52 *
	mvÆue
;

53 } 
	tMENU
;

55 
MENU
 
	gmaömíu
[] = {

64 {
NULL
, NULL}

67 
MENU
 
	gch™gemíu
[] = {

75 {
NULL
, NULL}

78 
MENU
 *
	glﬂded
;

79 
BOOL
 
	gemacsvôîm
 = 
NO
;

81 
lﬂdmíu
(
MENU
 *
míu
);

82 
gëco‹dö©e
();

83 
gë≥r˚¡
();

88 
	$mou£öô
()

90 *
ãrm
;

93 
ãrm
 = 
	`mygëív
("TERM", "");

94 i‡(
	`°rcmp
(
ãrm
, "emacsterm") == 0 ||

95 
	`°rcmp
(
ãrm
, "viterm") == 0) {

96 
emacsvôîm
 = 
YES
;

97 
mou£
 = 
YES
;

102 i‡(
	`°rcmp
(
	`mygëív
("MOUSE", ""), "myx") == 0) {

103 
mou£
 = 
YES
;

105 #i‡
UNIXPC


106 i‡(
	`°rcmp
(
ãrm
,"s4") == 0 ||

107 
	`°rcmp
(
ãrm
,"s120") == 0 ||

108 
	`°rcmp
(
ãrm
,"s90") == 0) {

109 
ªtvÆ
;

110 
uwd©a
 
uwd
;

111 
umd©a
 
umd
;

115 
ªtvÆ
 = 
	`io˘l
(1,
WIOCGETD
,&
uwd
);

116 if(
ªtvÆ
 || 
uwd
.
uw_hs
 <0 || uwd.
uw_vs
 <= 0) {

120 if(!
	`°rcmp
(
ãrm
,"s4")) {

121 
uw_hs
 = 9;

122 
uw_vs
 = 12;

125 
uw_hs
 = 6;

126 
uw_vs
 = 10;

131 
uw_hs
 = 
uwd
.uw_hs;

132 
uw_vs
 = 
uwd
.uw_vs;

139 if((
ªtvÆ
 = 
	`io˘l
(1,
WIOCGETMOUSE
,&
umd
)) != -1) {

140 
umd
.
um_Êags

MSDOWN
+
MSUP
;

141 
	`io˘l
(1,
WIOCSETMOUSE
,&
umd
);

143 
unixpcmou£
 = 
YES
;

146 i‡(
mou£
 =
YES
) {

147 
	`lﬂdmíu
(
maömíu
);

149 
	}
}

154 
	$mou£míu
()

156 i‡(
mou£
 =
YES
) {

157 i‡(
ch™gög
 =
YES
) {

158 
	`lﬂdmíu
(
ch™gemíu
);

161 
	`lﬂdmíu
(
maömíu
);

164 
	}
}

169 
	$lﬂdmíu
(
MENU
 *
míu
)

171 
i
;

173 i‡(
emacsvôîm
 =
YES
) {

174 
	`mou£ªöô
();

175 (Ë
	`¥ötf
("\033V1");

176 (Ë
	`¥ötf
("\033M0@%s@%s@", 
míu
[0].
ãxt
, míu[0].
vÆue
);

177 
i
 = 1; 
míu
[i].
ãxt
 !
NULL
; ++i) {

178 (Ë
	`¥ötf
("\033M@%s@%s@", 
míu
[
i
].
ãxt
, míu[i].
vÆue
);

182 
Àn
;

184 
	`mou£˛ónup
();

185 (Ë
	`¥ötf
("\033[6;1X\033[9;1X");

186 
i
 = 0; 
míu
[i].
ãxt
 !
NULL
; ++i) {

187 
Àn
 = 
	`°æí
(
míu
[
i
].
ãxt
);

188 (Ë
	`¥ötf
("\033[%d;%dx%s%s", 
Àn
,

189 (Ë(
Àn
 + 
	`°æí
(
míu
[
i
].
vÆue
)),

190 
míu
[
i
].
ãxt
, míu[i].
vÆue
);

192 
lﬂded
 = 
míu
;

194 (Ë
	`fÊush
(
°dout
);

195 
	}
}

200 
	$mou£ªöô
()

202 i‡(
emacsvôîm
 =
YES
) {

206 (Ë
	`¥ötf
("\033{2\033#2");

207 (Ë
	`fÊush
(
°dout
);

209 
	}
}

214 
	$mou£˛ónup
()

216 
i
;

218 i‡(
lﬂded
 !
NULL
) {

221 (Ë
	`¥ötf
("\033[6;0X\033[9;0X");

222 
i
 = 0; 
lﬂded
[i].
ãxt
 !
NULL
; ++i) {

223 (Ë
	`¥ötf
("\033[0;0x");

225 
lﬂded
 = 
NULL
;

227 
	}
}

232 
	$døws¸ﬁlb¨
(
t›
, 
bŸ
)

234 
p1
, 
p2
;

236 i‡(
emacsvôîm
 =
YES
) {

237 i‡(
bŸ
 > 
t›
) {

238 
p1
 = 16 + (
t›
 - 1Ë* 100 / 
tŸÆlöes
;

239 
p2
 = 16 + (
bŸ
 - 1Ë* 100 / 
tŸÆlöes
;

240 i‡(
p2
 > 116) {

241 
p2
 = 116;

243 i‡(
p1
 < 16) {

244 
p1
 = 16;

247 i‡(
p1
 =
	`˘æ
('Q') ||Ö1 == ctrl('S')) {

248 ++
p1
;

250 i‡(
p2
 =
	`˘æ
('Q') ||Ö2 == ctrl('S')) {

251 ++
p2
;

255 
p1
 = 
p2
 = 16;

257 (Ë
	`¥ötf
("\033W%c%c", 
p1
, 
p2
);

259 
	}
}

263 
MOUSE
 *

264 
	$gëmou£a˘i⁄
(
Àadög_ch¨
)

266 
MOUSE
 
m
;

268 #i‡
UNIXPC


270 if(
unixpcmou£
 =
YES
 && 
Àadög_ch¨
 =
ESC
) {

276 
x
 = 0, 
y
 = 0, 
buâ⁄
 = 0, 
ªas⁄
 = 0;

277 
i
;

293 if(((
i
 = 
	`mygëch
()) != '[') || ((i = mygetch()) != '?')) {

294 
	`myungëch
(
i
);

295 (
NULL
);

299 
	`isdigô
(
i
 = 
	`mygëch
())) {

300 
x
 = (x*10Ë+ (
i
 - '0');

302 if(
i
 != ';') {

303 
	`myungëch
(
i
);

304 (
NULL
);

308 
	`isdigô
(
i
 = 
	`mygëch
())) {

309 
y
 = (y*10Ë+ (
i
 - '0');

311 if(
i
 != ';') {

312 
	`myungëch
(
i
);

313 (
NULL
);

317 if((
buâ⁄
 = 
	`mygëch
()) > '4') {

318 
	`myungëch
(
buâ⁄
);

319 (
NULL
);

321 if((
i
 = 
	`mygëch
()) != ';') {

322 
	`myungëch
(
i
);

323 (
NULL
);

327 if((
ªas⁄
 = 
	`mygëch
()) > '8') {

328 
	`myungëch
(
ªas⁄
);

329 (
NULL
);

333 if((
i
 = 
	`mygëch
()) != 'M') {

334 
	`myungëch
(
i
);

335 (
NULL
);

343 if(
ªas⁄
 != '2') {

344 (
NULL
);

351 
m
.
buâ⁄
 = 1;

360 
m
.
x1
 = 
x
/
uw_hs
;

361 
m
.
y1
 = 
y
/
uw_vs
;

364 
m
.
≥r˚¡
 = m.
x2
 = m.
y2
 = -1;

369 i‡(
mou£
 =
YES
 && 
Àadög_ch¨
 =
	`˘æ
('X')) {

371 
	`mygëch
()) {

372 
	`˘æ
('_'):

373 i‡((
m
.
buâ⁄
 = 
	`mygëch
()) == '0') {

374 
m
.
≥r˚¡
 = 
	`gë≥r˚¡
();

377 
m
.
x1
 = 
	`gëco‹dö©e
();

378 
m
.
y1
 = 
	`gëco‹dö©e
();

379 
m
.
x2
 = m.
y2
 = -1;

383 
	`˘æ
(']'):

384 
m
.
buâ⁄
 = 
	`mygëch
();

385 
m
.
x1
 = 
	`gëco‹dö©e
();

386 
m
.
y1
 = 
	`gëco‹dö©e
();

387 
m
.
x2
 = 
	`gëco‹dö©e
();

388 
m
.
y2
 = 
	`gëco‹dö©e
();

391 (
NULL
);

394 (
NULL
);

396 (&
m
);

397 
	}
}

402 
	$gëco‹dö©e
()

404 
c
, 
√xt
;

406 
c
 = 
	`mygëch
();

407 
√xt
 = 0;

408 i‡(
c
 =
	`˘æ
('A')) {

409 
√xt
 = 95;

410 
c
 = 
	`mygëch
();

412 i‡(
c
 < ' ') {

415  (
√xt
 + 
c
 - ' ');

416 
	}
}

421 
	$gë≥r˚¡
()

423 
c
;

425 
c
 = 
	`mygëch
();

426 i‡(
c
 < 16) {

429 i‡(
c
 > 120) {

432 (
c
 - 16);

433 
	}
}

	@mygetenv.c

33 c⁄° 
	grcsid
[] = "$Id: mygetenv.c,v 1.3 2001/07/05 16:47:04 broeker Exp $";

35 
	~"libøry.h
"

37 
	~<°dlib.h
>

42 
	$mygëív
(*
v¨übÀ
, *
deÊt
)

44 *
vÆue
;

46 
vÆue
 = 
	`gëív
(
v¨übÀ
);

47 i‡(
vÆue
 =
NULL
 || *value == '\0') {

48 (
deÊt
);

50 (
vÆue
);

51 
	}
}

	@mypopen.c

33 
	~<°dio.h
>

34 
	~<sig«l.h
>

35 
	~<uni°d.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/waô.h
>

38 
	~"globÆ.h
"

40 
	#t°
(
a
,
b
Ë(*
mode
 ='r'? (bË: (a))

	)

41 
	#RDR
 0

	)

42 
	#WTR
 1

	)

45 #ifde‡
FD_CLOEXEC


46 
	#CLOSE_ON_EXEC
 
FD_CLOEXEC


	)

48 
	#CLOSE_ON_EXEC
 1

	)

51 #ifde‡
HAVE_IO_H


52 
	~<io.h
>

55 c⁄° 
	grcsid
[] = "$Id: mypopen.c,v 1.14 2006/04/21 10:40:29 broeker Exp $";

57 
pid_t
 
	gp›í_pid
[20];

58 
	$RETSIGTYPE
 (*
t°©
)();

61 
	$my›í
(*
∑th
, 
Êag
, 
mode
)

64 
fd
;

69 #i‡
O_BINARY
 !
O_TEXT


70 i‡(! (
Êag
 | 
O_BINARY
))

71 
Êag
 |
O_TEXT
;

73 if(
mode
)

74 
fd
 = 
	`›í
(
∑th
, 
Êag
, 
mode
);

76 
fd
 = 
	`›í
(
∑th
, 
Êag
);

78 #ifde‡
__DJGPP__


81 if(
fd
 != -1)

82 (
fd
);

84 if(
fd
 !-1 && (
	`f˙é
(fd, 
F_SETFD
, 
CLOSE_ON_EXEC
) != -1))

85 (
fd
);

92 i‡(
fd
 != -1)

94 
	`˛o£
 (
fd
);

99 
	}
}

101 
FILE
 *

102 
	$myf›í
(*
∑th
, *
mode
)

105 
FILE
 *
Â
;

107 
Â
 = 
	`f›í
(
∑th
, 
mode
);

109 #ifde‡
SETMODE


110 i‡(
Â
 && ! 
	`°rchr
(
mode
, 'b')) {

111 
	`SETMODE
(
	`fûío
(
Â
), 
O_TEXT
);

115 #ifde‡
__DJGPP__


118 if(
Â
)

120 if(
Â
 && (
	`f˙é
(
	`fûío
(Â), 
F_SETFD
, 
CLOSE_ON_EXEC
) != -1))

122 (
Â
);

125 (
NULL
);

126 
	}
}

128 
FILE
 *

129 
	$myp›í
(*
cmd
, *
mode
)

131 #ifde‡
__DJGPP__


134  (
p›í
)(
cmd
, 
mode
);

136 
p
[2];

137 
pid_t
 *
p›å
;

138 
myside
, 
yourside
;

139 
pid_t
 
pid
;

141 if(
	`pùe
(
p
) < 0)

142 (
NULL
);

143 
myside
 = 
	`t°
(
p
[
WTR
],Ö[
RDR
]);

144 
yourside
 = 
	`t°
(
p
[
RDR
],Ö[
WTR
]);

145 if((
pid
 = 
	`f‹k
()) == 0) {

147 
°dio
;

150 
p›å
 = 
p›í_pid
;Öoptr <Öopen_pid+20;Öoptr++) {

151 if(*
p›å
)

152 (Ë
	`˛o£
(
p›å
 - 
p›í_pid
);

154 
°dio
 = 
	`t°
(0, 1);

155 
	`˛o£
(
myside
);

156 
	`˛o£
(
°dio
);

157 #i‡
V9


158 
	`dup2
(
yourside
, 
°dio
);

160 
	`f˙é
(
yourside
, 
F_DUPFD
, 
°dio
);

162 
	`˛o£
(
yourside
);

163 
	`exe˛p
(
shñl
, 
	`myba£«me
(shñl), "-c", 
cmd
, (*)0);

164 
	`_exô
(1);

165 } i‡(
pid
 > 0)

166 
t°©
 = 
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

167 if(
pid
 == -1)

168 (
NULL
);

169 
p›í_pid
[
myside
] = 
pid
;

170 (Ë
	`˛o£
(
yourside
);

171 (
	`fd›í
(
myside
, 
mode
));

173 
	}
}

178 
	$myp˛o£
(
FILE
 *
±r
)

180 
f
;

181 
pid_t
 
r
;

182 
°©us
;

183 
sigh™dÀr_t
 
h°©
, 
i°©
, 
q°©
;

185 #ifde‡
__DJGPP__


188  (
p˛o£
)(
±r
);

190 
f
 = 
	`fûío
(
±r
);

191 (Ë
	`f˛o£
(
±r
);

192 
i°©
 = 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

193 
q°©
 = 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

194 
h°©
 = 
	`sig«l
(
SIGHUP
, 
SIG_IGN
);

195 (
r
 = 
	`waô
(&
°©us
)Ë!
p›í_pid
[
f
] &&Ñ != -1)

197 if(
r
 == -1)

198 
°©us
 = -1;

199 (Ë
	`sig«l
(
SIGINT
, 
i°©
);

200 (Ë
	`sig«l
(
SIGQUIT
, 
q°©
);

201 (Ë
	`sig«l
(
SIGHUP
, 
h°©
);

202 (Ë
	`sig«l
(
SIGTSTP
, 
t°©
);

204 
p›í_pid
[
f
] = 0;

205 (
°©us
);

207 
	}
}

	@scanner.h

36 #i‚de‡
CSCOPE_SCANNER_H


37 
	#CSCOPE_SCANNER_H


	)

39 
	~<°dio.h
>

41 #unde‡
YYLMAX


42 
	#YYLMAX
 
STMTMAX
 + 
PATLEN
 + 1

	)

47 
	#CLASSDEF
 'c'

	)

48 
	#DEFINE
 '#'

	)

49 
	#DEFINEEND
 ')'

	)

50 
	#ENUMDEF
 'e'

	)

51 
	#FCNCALL
 '`'

	)

52 
	#FCNDEF
 '$'

	)

53 
	#FCNEND
 '}'

	)

54 
	#GLOBALDEF
 'g'

	)

55 
	#INCLUDE
 '~'

	)

56 
	#MEMBERDEF
 'm'

	)

57 
	#NEWFILE
 '@'

	)

58 
	#STRUCTDEF
 's'

	)

59 
	#TYPEDEF
 't'

	)

60 
	#UNIONDEF
 'u'

	)

63 
	#LEXEOF
 0

	)

64 
	#IDENT
 1

	)

65 
	#NEWLINE
 2

	)

68 
fú°
;

69 
œ°
;

70 
löío
;

71 
FILE
 *
yyö
;

72 
FILE
 *
yyout
;

73 
myylöío
;

75 #ifde‡
USING_LEX


79 #i‡
deföed
(
__OSF1__
Ë|| deföed(
__sun
Ë|| deföed(
_AIX
)

80 
yyãxt
[];

82 
yyãxt
[];

84 
yyÀng
;

85 
	#my_yyãxt
 
yyãxt


	)

86 
	#my_yyÀng
 
yyÀng


	)

88 *
my_yyãxt
;

89 
size_t
 
my_yyÀng
;

93 
yyÀx
();

94 
öôsˇ¬î
(*
§cfûe
);

	@scanner.l

38 
	~"globÆ.h
"

39 
	~"sˇ¬î.h
"

40 
	~"lookup.h
"

45 
	#IFLEVELINC
 5

	)

47 c⁄° 
	grcsid
[] = "$Id: scanner.l,v 1.8 2007/03/09 23:54:34 broeker Exp $";

49 
	gfú°
;

50 
	gœ°
;

51 
	glöío
;

52 
	gmyylöío
 = 1;

54 
BOOL
 
	g¨øydimísi⁄
;

55 
BOOL
 
	gb∂i°ög
;

56 
	gbø˚s
;

57 
BOOL
 
	g˛assdef
;

58 
BOOL
 
	gñ£ñif
;

59 
BOOL
 
	gesudef
;

60 
BOOL
 
	gexã∫Æ
;

61 
	gexã∫Æbø˚s
;

62 
BOOL
 
	gf˙def
;

63 
BOOL
 
	gglobÆ
;

64 
	giÊevñ
;

65 
BOOL
 
	göôülizî
;

66 
	göôülizîbø˚s
;

67 
BOOL
 
	gÀx
;

68 
	gmiÊevñ
 = 
IFLEVELINC
;

69 *
	gmaxifbø˚s
;

70 *
	g¥eifbø˚s
;

71 
	g∑ªns
;

72 
BOOL
 
	gµdeföe
;

73 
BOOL
 
	gp£ud€lif
;

74 
BOOL
 
	gﬁdty≥
;

75 
BOOL
 
	gruÀs
;

76 
BOOL
 
	gsdl
;

77 
BOOL
 
	g°ru˘fõld
;

78 
	gègdef
;

79 
BOOL
 
	gãm∂©e
;

80 
	gãm∂©ï¨ís
;

81 
	gty≥defbø˚s
 = -1;

82 
	gtokí
;

85 
mu…ich¨c⁄°™t
(
ãrmö©‹
);

86 
skùcommít_öput
();

87 
commít
();

89 #ifde‡
FLEX_SCANNER


90 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

92 
c
 = 
	`skùcommít_öput
 (); \

93 
ªsu…
 = (
c
 =
EOF
Ë? 
YY_NULL
 : (
buf
[0] = c, 1); \

94 }

	)

97 #unde‡
öput


98 
	#öput
(Ë((
yytch¨
=(yytch¨=
yy•å
>
yysbuf
?*(*)--yy•å:
	`gëc
(
yyö
))=='/'?
	`commít
():yytch¨)==
EOF
?
LEXEOF
:yytch¨)

	)

99 
	#n⁄commítöput
(Ë((
yytch¨
=
yy•å
>
yysbuf
?*--yy•å:
	`gëc
(
yyö
))==
EOF
?
LEXEOF
:yytch¨)

	)

100 #unde‡
u≈ut


101 
	#u≈ut
(
c
Ë(*
yy•å
++=(c))

	)

107 
ws
 [ \
t
\
r
\
v
\
f
]

108 
w¢l
 [ \
t
\
r
\
v
\
f
\
n
]

109 
idítifõr
 [
a
-
zA
-
Z_$
][a-zA-
Z_0
-9
$
]*

110 
numbî
 \.?[0-9][.0-9a-
fA
-
FlLuUxX
]*

112 %
°¨t
 
SDL


113 %
a
 12000

114 %
o
 7000

115 %% /* 
	$yyÀx
 */

117 
globÆ
 = 
YES
;

118 
m‹e
;

122 
globÆ
 = 
NO
;

123 
m‹e
;

127 
bø˚s
 = 0;

128 i‡(
ruÀs
 =
NO
) {

129 
ruÀs
 = 
YES
;

132 (Ë
	`°rˇt
(
yyãxt
, " /* ");

133 
fú°
 = 
	`°æí
(
yyãxt
);

134 i‡(
Àx
 =
YES
) {

135 (Ë
	`°rˇt
(
yyãxt
, "yylex");

138 *
s
 = " yylex()";

139 *
˝
 = 
s
 + 
	`°æí
(s);

140 --
˝
 >
s
) {

141 
	`u≈ut
(*
˝
);

143 (Ë
	`°rˇt
(
yyãxt
, "yyparse");

145 
œ°
 = 
	`°æí
(
yyãxt
);

146 (Ë
	`°rˇt
(
yyãxt
, " */");

147 
yyÀng
 = 
	`°æí
(
yyãxt
);

148 
	`yym‹e
();

149 (
FCNDEF
);

152 
ruÀs
 = 
NO
;

153 
globÆ
 = 
YES
;

154 
œ°
 = 
fú°
;

155 
	`yym‹e
();

156 (
FCNEND
);

160 <
SDL
>
STATE
{
ws
}+({
idítifõr
}|\*) {

161 
bø˚s
 = 1;

162 
f˙def
 = 
YES
;

163 
tokí
 = 
FCNDEF
;

164 
födidít
;

167 <
SDL
>
ENDSTATE
{
ws
} {

168 
íd°©e
;

172 ++
bø˚s
;

176 i‡(
ègdef
) {

177 i‡(
bø˚s
 == 1) {

178 
esudef
 = 
YES
;

180 
tokí
 = 
ègdef
;

181 
ègdef
 = '\0';

182 
œ°
 = 
fú°
;

183 
	`yym‹e
();

184 (
tokí
);

186 
m‹e
;

189 \#{
ws
}*
ídif
/.*\
n
{
w¢l
}*#{ws}*{

200 i‡(
ñ£ñif
 =
YES
) {

201 
ídif
;

204 
p£ud€lif
 = 
YES
;

205 
m‹e
;

208 \#{
ws
}*
i‚
?(
def
)? {

209 
ñ£ñif
 = 
NO
;

210 i‡(
p£ud€lif
 =
YES
) {

211 
p£ud€lif
 = 
NO
;

212 
ñif
;

216 i‡(
iÊevñ
 =
miÊevñ
) {

217 
miÊevñ
 +
IFLEVELINC
;

218 
maxifbø˚s
 = 
	`myªÆloc
(maxifbø˚s, 
miÊevñ
 * ());

219 
¥eifbø˚s
 = 
	`myªÆloc
’ªifbø˚s, 
miÊevñ
 * ());

222 
¥eifbø˚s
[
iÊevñ
] = 
bø˚s
;

223 
maxifbø˚s
[
iÊevñ
++] = 0;

224 
m‹e
;

227 \#{
ws
}*
	`ñ
(
£
|) {

228 
ñ£ñif
 = 
YES
;

229 
ñif
:

230 i‡(
iÊevñ
 > 0) {

233 i‡(
bø˚s
 > 
maxifbø˚s
[
iÊevñ
 - 1]) {

234 
maxifbø˚s
[
iÊevñ
 - 1] = 
bø˚s
;

237 
bø˚s
 = 
¥eifbø˚s
[
iÊevñ
 - 1];

239 
m‹e
;

242 \#{
ws
}*
ídif
 {

243 
ídif
:

244 i‡(
iÊevñ
 > 0) {

247 i‡(
bø˚s
 < 
maxifbø˚s
[--
iÊevñ
]) {

248 
bø˚s
 = 
maxifbø˚s
[
iÊevñ
];

251 
m‹e
;

256 i‡(
bø˚s
 =
öôülizîbø˚s
) {

257 
öôülizîbø˚s
 = -1;

258 
öôülizî
 = 
NO
;

260 i‡(--
bø˚s
 <= 0) {

261 
íd°©e
:

262 
bø˚s
 = 0;

263 
˛assdef
 = 
NO
;

265 i‡(
bø˚s
 =0 || (bø˚†=1 && 
˛assdef
 =
YES
)) {

268 i‡(
esudef
 =
YES
) {

269 
esudef
 = 
NO
;

272 i‡(
f˙def
 =
YES
) {

273 
f˙def
 = 
NO
;

274 
œ°
 = 
fú°
;

275 
	`yym‹e
();

276 (
FCNEND
);

279 
m‹e
;

283 ++
∑ªns
;

284 
m‹e
;

288 i‡(--
∑ªns
 <= 0) {

289 
∑ªns
 = 0;

292 i‡(
∑ªns
 =
ãm∂©ï¨ís
) {

293 
ãm∂©ï¨ís
 = -1;

294 
ãm∂©e
 = 
NO
;

296 
m‹e
;

300 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
yyãxt
[0] != '#') {

301 
öôülizîbø˚s
 = 
bø˚s
;

302 
öôülizî
 = 
YES
;

304 
m‹e
;

308 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
yyãxt
[0] != '#') {

309 
°ru˘fõld
 = 
YES
;

311 
m‹e
;

315 i‡(
bø˚s
 =
öôülizîbø˚s
) {

316 
öôülizîbø˚s
 = -1;

317 
öôülizî
 = 
NO
;

319 
°ru˘fõld
 = 
NO
;

320 
m‹e
;

324 i‡(
bø˚s
 == 0) {

325 
esudef
 = 
NO
;

328 i‡(
bø˚s
 =
ty≥defbø˚s
) {

329 
ty≥defbø˚s
 = -1;

332 i‡(
bø˚s
 =
exã∫Æbø˚s
) {

333 
exã∫Æbø˚s
 = -1;

334 
exã∫Æ
 = 
NO
;

336 
°ru˘fõld
 = 
NO
;

337 
öôülizî
 = 
NO
;

338 
m‹e
;

341 \#{
ws
}*
deföe
{ws}+{
idítifõr
} {

344 
µdeföe
 = 
YES
;

345 
tokí
 = 
DEFINE
;

346 i‡(
com¥ess
 =
YES
) {

347 
yyãxt
[0] = '\1';

349 
födidít
:

350 
fú°
 = 
yyÀng
 - 1;

351 
yyãxt
[
fú°
] != ' ' && yytext[first] != '\t') {

352 --
fú°
;

354 ++
fú°
;

355 
f˙
;

358 
˛ass
{
ws
}+{
idítifõr
}({
w¢l
}|[
a
-
zA
-
Z0
-9
	`_
():])*\{ {

359 
˛assdef
 = 
YES
;

360 
ègdef
 = 'c';

361 
REJECT
;

364 (||)/({
w¢l
}+{
idítifõr
}){wsnl}*\{ {

365 
ègdef
 = *(
yyãxt
 + 
fú°
);

366 
idít
;

369 (||)/{
w¢l
}*\{ {

370 
ègdef
 = 
yyãxt
[
fú°
];

371 i‡(
bø˚s
 == 0) {

372 
esudef
 = 
YES
;

374 
œ°
 = 
fú°
;

375 
ègdef
 = '\0';

376 
m‹e
;

378 {
idítifõr
}/{
ws
}*\(({
w¢l
}|
a
-
zA
-
Z0
-9
_
*&[\]=,.])*\)({w¢l}|[()])*[:a-zA-
Z_
#{] {

386 i‡((
bø˚s
 =0 && 
µdeföe
 =
NO
 && 
yyãxt
[0] !'#' && 
ruÀs
 == NO) ||

387 (
bø˚s
 =1 && 
˛assdef
 =
YES
)) {

388 
f˙def
 = 
YES
;

389 
tokí
 = 
FCNDEF
;

390 
f˙
;

393 
f˙ˇl
;

396 {
idítifõr
}/{
ws
}*\( {

397 
f˙ˇl
: i‡(
f˙def
 =
YES
 || 
µdeföe
 =YES || 
ruÀs
 == YES) {

398 
tokí
 = 
FCNCALL
;

399 
f˙
;

402 i‡(
ãm∂©e
 =
NO
) {

403 
ãm∂©ï¨ís
 = 
∑ªns
;

404 
ãm∂©e
 = 
YES
;

406 
idít
;

409 {
idítifõr
}/([*]|{
w¢l
})+[
a
-
zA
-
Z0
-9
_
] {

410 
idít
;

413 {
idítifõr
} {

414 *
s
;

416 i‡(
globÆ
 =
YES
 && 
µdeföe
 =
NO
 && 
yyãxt
[0] != '#' &&

417 
exã∫Æ
 =
NO
 && 
öôülizî
 == NO &&

418 
¨øydimísi⁄
 =
NO
 && 
°ru˘fõld
 == NO &&

419 
ãm∂©e
 =
NO
 && 
f˙def
 == NO) {

420 i‡(
esudef
 =
YES
) {

421 
tokí
 = 
MEMBERDEF
;

424 
tokí
 = 
GLOBALDEF
;

428 
idít
: 
tokí
 = 
IDENT
;

430 
f˙
:

432 i‡(
yyÀng
 > 
STMTMAX
) {

433 
c
;

436 
	`w¨nög
("lineÅooÜong");

437 (
c
 = 
	`skùcommít_öput
()Ë!
LEXEOF
) {

438 i‡(
c
 == '\n') {

439 
	`u≈ut
(
c
);

445 i‡(
yyÀng
 - 
fú°
 > 
PATLEN
) {

446 
	`w¨nög
("symbolÅooÜong");

447 
yyÀng
 = 
fú°
 + 
PATLEN
;

448 
yyãxt
[
yyÀng
] = '\0';

451 
	`yym‹e
();

452 i‡((
s
 = 
	`lookup
(
yyãxt
 + 
fú°
)Ë!
NULL
) {

453 
fú°
 = 
yyÀng
;

456 i‡(
s
 =
ty≥de·ext
) {

457 
ty≥defbø˚s
 = 
bø˚s
;

458 
ﬁdty≥
 = 
YES
;

463 i‡(
s
 =
íumãxt
 || s =
°ru˘ãxt
 || s =
uni⁄ãxt
) {

466 i‡(
s
 =
exã∫ãxt
) {

467 
exã∫Æbø˚s
 = 
bø˚s
;

468 
exã∫Æ
 = 
YES
;

471 i‡(
ãm∂©ï¨ís
 =
∑ªns
 && 
ãm∂©e
 =
YES
) {

472 
ãm∂©ï¨ís
 = -1;

473 
ãm∂©e
 = 
NO
;

476 
ﬁdty≥
 = 
NO
;

480 
œ°
 = 
yyÀng
;

483 i‡(
ègdef
 && 
	`°∫ŸequÆ
(
yyãxt
 + 
fú°
, "class")) {

484 
tokí
 = 
ègdef
;

485 
ègdef
 = '\0';

486 i‡(
bø˚s
 == 0) {

487 
esudef
 = 
YES
;

491 i‡(
bø˚s
 =
ty≥defbø˚s
 && 
ﬁdty≥
 =
NO
 &&

492 
¨øydimísi⁄
 =
NO
) {

493 
tokí
 = 
TYPEDEF
;

496 
ﬁdty≥
 = 
NO
;

498 (
tokí
);

503 
¨øydimísi⁄
 = 
YES
;

504 
m‹e
;

508 
¨øydimísi⁄
 = 
NO
;

509 
m‹e
;

512 \\\
n
 {

513 
eﬁ
;

516 \
n
 {

517 i‡(
µdeföe
 =
YES
) {

518 
µdeföe
 = 
NO
;

519 
	`yyÀss
(
yyÀng
 - 1);

520 
œ°
 = 
fú°
;

521 
	`yym‹e
();

522 (
DEFINEEND
);

526 i‡(
b∂i°ög
 =
YES
) {

527 
c
, 
i
;

529 
	`skùcommít_öput
()) {

532 
i
 = 1; i < 8 && 
	`skùcommít_öput
(Ë!
LEXEOF
; ++i)

538 (
c
 = 
	`skùcommít_öput
()Ë!
LEXEOF
) {

539 i‡(
c
 == '\n') {

540 
	`u≈ut
(
c
);

546 
	`u≈ut
('\n');

550 
eﬁ
:

551 ++
myylöío
;

552 
fú°
 = 0;

553 
œ°
 = 0;

554 i‡(
symbﬁs
 > 0) {

555 (
NEWLINE
);

557 
löío
 = 
myylöío
;

560 i‡(
sdl
 =
NO
) {

561 
	`mu…ich¨c⁄°™t
('\'');

563 
m‹e
;

567 
	`mu…ich¨c⁄°™t
('"');

568 
m‹e
;

571 ^{
ws
}+ {

573 \#{
ws
}*
ö˛ude
{ws}*["<][^"> \
t
\
n
]+ {

574 *
s
;

576 
s
 = 
	`°Ωbrk
(
yyãxt
, "\"<");

577 
	`öcfûe
(
s
 + 1, s);

580 
fú°
 = 
s
 - (*)&(
yyãxt
[0]);

581 
œ°
 = 
yyÀng
;

582 i‡(
com¥ess
 =
YES
) {

583 
yyãxt
[0] = '\2';

585 
	`yym‹e
();

586 (
INCLUDE
);

589 \#{
ws
}*{
idítifõr
} |

590 {
numbî
} |

592 
m‹e
: 
fú°
 = 
yyÀng
;

593 
	`yym‹e
();

595 
	}
%%

598 
	$öôsˇ¬î
(*
§cfûe
)

600 *
s
;

602 i‡(
maxifbø˚s
 =
NULL
) {

603 
maxifbø˚s
 = 
	`mymÆloc
(
miÊevñ
 * ());

604 
¥eifbø˚s
 = 
	`mymÆloc
(
miÊevñ
 * ());

606 
fú°
 = 0;

607 
œ°
 = 0;

608 
löío
 = 1;

609 
myylöío
 = 1;

610 
¨øydimísi⁄
 = 
NO
;

611 
b∂i°ög
 = 
NO
;

612 
bø˚s
 = 0;

613 
˛assdef
 = 
NO
;

614 
ñ£ñif
 = 
NO
;

615 
esudef
 = 
NO
;

616 
exã∫Æ
 = 
NO
;

617 
exã∫Æbø˚s
 = -1;

618 
f˙def
 = 
NO
;

619 
globÆ
 = 
YES
;

620 
iÊevñ
 = 0;

621 
öôülizî
 = 
NO
;

622 
öôülizîbø˚s
 = -1;

623 
Àx
 = 
NO
;

624 
∑ªns
 = 0;

625 
µdeföe
 = 
NO
;

626 
p£ud€lif
 = 
NO
;

627 
ﬁdty≥
 = 
NO
;

628 
ruÀs
 = 
NO
;

629 
sdl
 = 
NO
;

630 
°ru˘fõld
 = 
NO
;

631 
ègdef
 = '\0';

632 
ãm∂©e
 = 
NO
;

633 
ãm∂©ï¨ís
 = -1;

634 
ty≥defbø˚s
 = -1;

636 
BEGIN
 0;

639 i‡((
s
 = 
	`°ºchr
(
§cfûe
, '.')Ë!
NULL
) {

640 *++
s
) {

642 i‡(
	`°rcmp
(
s
, "bp") == 0) {

643 
b∂i°ög
 = 
YES
;

647 i‡(
	`°rcmp
(
s
, "l") == 0) {

648 
Àx
 = 
YES
;

649 
globÆ
 = 
NO
;

653 i‡(
	`°rcmp
(
s
, "sd") == 0) {

654 
sdl
 = 
YES
;

655 
BEGIN
 
SDL
;

659 i‡(
	`°rcmp
(
s
, "y") == 0) {

660 
globÆ
 = 
NO
;

665 
	}
}

668 
	$skùcommít_öput
()

670 
c
;

672 i‡((
c
 = 
	`gëc
 (
yyö
)) == '/') {

673  
	`commít
 ();

676  
c
;

679 
	}
}

682 
	$commít_öput
()

684 
c
;

686 
c
 = 
	`gëc
 (
yyö
);

688  (
c
 =
EOF
Ë? 
LEXEOF
 : c;

689 
	}
}

692 
	$commít
()

694 
c
, 
œ°c
;

697 i‡((
c
 = 
	`gëc
(
yyö
)) == '*') {

698 
œ°c
 = '\0';

699 (
c
 = 
	`gëc
(
yyö
)Ë!
EOF
 &&

700 (
c
 !'/' || 
œ°c
 != '*')) {

701 i‡(
c
 == '\n') {

702 ++
myylöío
;

704 
œ°c
 = 
c
;

707 i‡((
c
 = 
	`gëc
(
yyö
)Ë='_' || 
	`iß um
(c)) {

708 (Ë
	`ungëc
(
c
, 
yyö
);

709 
c
 = ' ';

713 i‡(
c
 == '/') {

714 (
c
 = 
	`gëc
(
yyö
)Ë!
EOF
 && c != '\n') {

720 (Ë
	`ungëc
(
c
, 
yyö
);

721 
c
 = '/';

727 } 
c
 == '/');

728 (
c
);

729 
	}
}

732 
	$mu…ich¨c⁄°™t
(
ãrmö©‹
)

734 
c
;

737 (
c
 = 
yyãxt
[
yyÀng
++] = 
	`commít_öput
()Ë!
ãrmö©‹
) {

738 
c
) {

740 i‡((
yyãxt
[
yyÀng
++] = 
	`commít_öput
()) == '\n') {

741 ++
myylöío
;

747 i‡(
Àx
 =
NO
) {

756 
	`u≈ut
(
c
);

757 
yyãxt
[--
yyÀng
] = '\0';

760 
LEXEOF
:

765 i‡(!
	`i•röt
(()
c
)) {

766 
yyãxt
[
yyÀng
 - 1] = ' ';

771 i‡(
yyÀng
 >
STMTMAX
) {

774 (
c
 = 
	`commít_öput
()Ë!
LEXEOF
) {

775 i‡(
c
 =
ãrmö©‹
) {

776 
	`u≈ut
(
c
);

779 i‡(
c
 == '\n') {

780 ++
myylöío
;

785 
yyãxt
[
yyÀng
] = '\0';

786 
	}
}

	@snprintf.c

167 #i‡
HAVE_CONFIG_H


168 
	~<c⁄fig.h
>

171 #i‡
TEST_SNPRINTF


172 
	~<m©h.h
>

173 
	~<°rög.h
>

174 #i‡
deföed
(
__NëBSD__
) || \

175 
deföed
(
__FªeBSD__
) || \

176 
deföed
(
__O≥nBSD__
) || \

177 
deföed
(
__NeXT__
) || \

178 
	$deföed
(
__bsd__
)

179 
	#OS_BSD
 1

	)

180 #ñi‡
	`deföed
(
sgi
Ë|| deföed(
__sgi
)

181 #i‚de‡
__c99


182 
	#__c99


	)

184 
	#OS_IRIX
 1

	)

185 
	#OS_SYSV
 1

	)

186 #ñi‡
	`deföed
(
__svr4__
)

187 
	#OS_SYSV
 1

	)

188 #ñi‡
	`deföed
(
__löux__
)

189 
	#OS_LINUX
 1

	)

191 #i‡
HAVE_CONFIG_H


192 #ifde‡
HAVE_SNPRINTF


193 #unde‡
HAVE_SNPRINTF


195 #ifde‡
HAVE_VSNPRINTF


196 #unde‡
HAVE_VSNPRINTF


198 #ifde‡
HAVE_ASPRINTF


199 #unde‡
HAVE_ASPRINTF


201 #ifde‡
HAVE_VASPRINTF


202 #unde‡
HAVE_VASPRINTF


204 #ifde‡
¢¥ötf


205 #unde‡
¢¥ötf


207 #ifde‡
v¢¥ötf


208 #unde‡
v¢¥ötf


210 #ifde‡
a•rötf


211 #unde‡
a•rötf


213 #ifde‡
va•rötf


214 #unde‡
va•rötf


217 #i‚de‡
HAVE_STDARG_H


218 
	#HAVE_STDARG_H
 1

	)

220 #i‚de‡
HAVE_STDDEF_H


221 
	#HAVE_STDDEF_H
 1

	)

223 #i‚de‡
HAVE_STDINT_H


224 
	#HAVE_STDINT_H
 1

	)

226 #i‚de‡
HAVE_STDLIB_H


227 
	#HAVE_STDLIB_H
 1

	)

229 #i‚de‡
HAVE_INTTYPES_H


230 
	#HAVE_INTTYPES_H
 1

	)

232 #i‚de‡
HAVE_LOCALE_H


233 
	#HAVE_LOCALE_H
 1

	)

235 #i‚de‡
HAVE_LOCALECONV


236 
	#HAVE_LOCALECONV
 1

	)

238 #i‚de‡
HAVE_LCONV_DECIMAL_POINT


239 
	#HAVE_LCONV_DECIMAL_POINT
 1

	)

241 #i‚de‡
HAVE_LCONV_THOUSANDS_SEP


242 
	#HAVE_LCONV_THOUSANDS_SEP
 1

	)

244 #i‚de‡
HAVE_LONG_DOUBLE


245 
	#HAVE_LONG_DOUBLE
 1

	)

247 #i‚de‡
HAVE_LONG_LONG_INT


248 
	#HAVE_LONG_LONG_INT
 1

	)

250 #i‚de‡
HAVE_UNSIGNED_LONG_LONG_INT


251 
	#HAVE_UNSIGNED_LONG_LONG_INT
 1

	)

253 #i‚de‡
HAVE_INTMAX_T


254 
	#HAVE_INTMAX_T
 1

	)

256 #i‚de‡
HAVE_UINTMAX_T


257 
	#HAVE_UINTMAX_T
 1

	)

259 #i‚de‡
HAVE_UINTPTR_T


260 
	#HAVE_UINTPTR_T
 1

	)

262 #i‚de‡
HAVE_PTRDIFF_T


263 
	#HAVE_PTRDIFF_T
 1

	)

265 #i‚de‡
HAVE_VA_COPY


266 
	#HAVE_VA_COPY
 1

	)

268 #i‚de‡
HAVE___VA_COPY


269 
	#HAVE___VA_COPY
 1

	)

272 
	#¢¥ötf
 
Ωl_¢¥ötf


	)

273 
	#v¢¥ötf
 
Ωl_v¢¥ötf


	)

274 
	#a•rötf
 
Ωl_a•rötf


	)

275 
	#va•rötf
 
Ωl_va•rötf


	)

278 #i‡!
HAVE_SNPRINTF
 || !
HAVE_VSNPRINTF
 || !
HAVE_ASPRINTF
 || !
HAVE_VASPRINTF


279 
	~<°dio.h
>

280 #ifde‡
VA_START


281 #unde‡
VA_START


283 #ifde‡
VA_SHIFT


284 #unde‡
VA_SHIFT


286 #i‡
HAVE_STDARG_H


287 
	~<°d¨g.h
>

288 
	#VA_START
(
≠
, 
œ°
Ë
	`va_°¨t
◊p,Üa°)

	)

289 
	#VA_SHIFT
(
≠
, 
vÆue
, 
ty≥
Ë

	)

291 
	~<v¨¨gs.h
>

292 
	#VA_START
(
≠
, 
œ°
Ë
	`va_°¨t
◊pË

	)

293 
	#VA_SHIFT
(
≠
, 
vÆue
, 
ty≥
ËvÆuê
	`va_¨g
◊p,Åy≥)

	)

296 #i‡!
HAVE_VASPRINTF


297 #i‡
HAVE_STDLIB_H


298 
	~<°dlib.h
>

300 #ifde‡
VA_COPY


301 #unde‡
VA_COPY


303 #ifde‡
VA_END_COPY


304 #unde‡
VA_END_COPY


306 #i‡
HAVE_VA_COPY


307 
	#VA_COPY
(
de°
, 
§c
Ë
	`va_c›y
(de°, src)

	)

308 
	#VA_END_COPY
(
≠
Ë
	`va_íd
◊p)

	)

309 #ñi‡
HAVE___VA_COPY


310 
	#VA_COPY
(
de°
, 
§c
Ë
	`__va_c›y
(de°, src)

	)

311 
	#VA_END_COPY
(
≠
Ë
	`va_íd
◊p)

	)

313 
	#VA_COPY
(
de°
, 
§c
Ë()
	`mymem˝y
(&de°, &§c, (
va_li°
))

	)

314 
	#VA_END_COPY
(
≠
Ë

	)

315 
	#NEED_MYMEMCPY
 1

	)

316 *
	`mymem˝y
(*, *, 
size_t
);

320 #i‡!
HAVE_VSNPRINTF


321 
	~<î∫o.h
>

322 
	~<limôs.h
>

323 #i‡
HAVE_INTTYPES_H


324 
	~<öây≥s.h
>

326 #i‡
HAVE_LOCALE_H


327 
	~<loˇÀ.h
>

329 #i‡
HAVE_STDDEF_H


330 
	~<°ddef.h
>

332 #i‡
HAVE_STDINT_H


333 
	~<°döt.h
>

337 #i‚de‡
ULONG_MAX


338 #ifde‡
UINT_MAX


339 
	#ULONG_MAX
 
UINT_MAX


	)

341 
	#ULONG_MAX
 
INT_MAX


	)

344 #ifde‡
ULLONG


345 #unde‡
ULLONG


347 #i‡
HAVE_UNSIGNED_LONG_LONG_INT


348 
	#ULLONG
 

	)

349 #i‚de‡
ULLONG_MAX


350 
	#ULLONG_MAX
 
ULONG_MAX


	)

353 
	#ULLONG
 

	)

354 #ifde‡
ULLONG_MAX


355 #unde‡
ULLONG_MAX


357 
	#ULLONG_MAX
 
ULONG_MAX


	)

361 #ifde‡
UINTMAX_T


362 #unde‡
UINTMAX_T


364 #i‡
HAVE_UINTMAX_T
 || 
	`deföed
(
uötmax_t
)

365 
	#UINTMAX_T
 
uötmax_t


	)

366 #i‚de‡
UINTMAX_MAX


367 
	#UINTMAX_MAX
 
ULLONG_MAX


	)

370 
	#UINTMAX_T
 
ULLONG


	)

371 #ifde‡
UINTMAX_MAX


372 #unde‡
UINTMAX_MAX


374 
	#UINTMAX_MAX
 
ULLONG_MAX


	)

378 #i‚de‡
LDOUBLE


379 #i‡
HAVE_LONG_DOUBLE


380 
	#LDOUBLE
 

	)

382 
	#LDOUBLE
 

	)

387 #i‚de‡
LLONG


388 #i‡
HAVE_LONG_LONG_INT


389 
	#LLONG
 

	)

391 
	#LLONG
 

	)

396 #i‚de‡
INTMAX_T


397 #i‡
HAVE_INTMAX_T
 || 
	`deföed
(
ötmax_t
)

398 
	#INTMAX_T
 
ötmax_t


	)

400 
	#INTMAX_T
 
LLONG


	)

405 #i‚de‡
UINTPTR_T


406 #i‡
HAVE_UINTPTR_T
 || 
	`deföed
(
uöçå_t
)

407 
	#UINTPTR_T
 
uöçå_t


	)

409 
	#UINTPTR_T
 

	)

414 #i‚de‡
PTRDIFF_T


415 #i‡
HAVE_PTRDIFF_T
 || 
	`deföed
(
±rdiff_t
)

416 
	#PTRDIFF_T
 
±rdiff_t


	)

418 
	#PTRDIFF_T
 

	)

427 #i‚de‡
UPTRDIFF_T


428 
	#UPTRDIFF_T
 
PTRDIFF_T


	)

436 #i‚de‡
SSIZE_T


437 
	#SSIZE_T
 
size_t


	)

441 #i‚de‡
ERANGE


442 
	#ERANGE
 
E2BIG


	)

444 #i‚de‡
EOVERFLOW


445 
	#EOVERFLOW
 
ERANGE


	)

452 #ifde‡
MAX_CONVERT_LENGTH


453 #unde‡
MAX_CONVERT_LENGTH


455 
	#MAX_CONVERT_LENGTH
 43

	)

458 
	#PRINT_S_DEFAULT
 0

	)

459 
	#PRINT_S_FLAGS
 1

	)

460 
	#PRINT_S_WIDTH
 2

	)

461 
	#PRINT_S_DOT
 3

	)

462 
	#PRINT_S_PRECISION
 4

	)

463 
	#PRINT_S_MOD
 5

	)

464 
	#PRINT_S_CONV
 6

	)

467 
	#PRINT_F_MINUS
 (1 << 0)

	)

468 
	#PRINT_F_PLUS
 (1 << 1)

	)

469 
	#PRINT_F_SPACE
 (1 << 2)

	)

470 
	#PRINT_F_NUM
 (1 << 3)

	)

471 
	#PRINT_F_ZERO
 (1 << 4)

	)

472 
	#PRINT_F_QUOTE
 (1 << 5)

	)

473 
	#PRINT_F_UP
 (1 << 6)

	)

474 
	#PRINT_F_UNSIGNED
 (1 << 7)

	)

475 
	#PRINT_F_TYPE_G
 (1 << 8)

	)

476 
	#PRINT_F_TYPE_E
 (1 << 9)

	)

479 
	#PRINT_C_CHAR
 1

	)

480 
	#PRINT_C_SHORT
 2

	)

481 
	#PRINT_C_LONG
 3

	)

482 
	#PRINT_C_LLONG
 4

	)

483 
	#PRINT_C_LDOUBLE
 5

	)

484 
	#PRINT_C_SIZE
 6

	)

485 
	#PRINT_C_PTRDIFF
 7

	)

486 
	#PRINT_C_INTMAX
 8

	)

488 #i‚de‡
MAX


489 
	#MAX
(
x
, 
y
Ë((x >yË? x : y)

	)

491 #i‚de‡
CHARTOINT


492 
	#CHARTOINT
(
ch
Ë(ch - '0')

	)

494 #i‚de‡
ISDIGIT


495 
	#ISDIGIT
(
ch
Ë('0' <()ch && ()ch <'9')

	)

497 #i‚de‡
ISNAN


498 
	#ISNAN
(
x
Ë(x !x)

	)

500 #i‚de‡
ISINF


501 
	#ISINF
(
x
Ë(x !0.0 && x + x =x)

	)

504 #ifde‡
OUTCHAR


505 #unde‡
OUTCHAR


507 
	#OUTCHAR
(
°r
, 
Àn
, 
size
, 
ch
) \

509 i‡(
Àn
 + 1 < 
size
) \

510 
°r
[
Àn
] = 
ch
; \

511 (
Àn
)++; \

512 
	}
}  0)

	)

514 
fmt°r
(*, 
size_t
 *, size_t, const *, , , );

515 
fmtöt
(*, 
size_t
 *, size_t, 
INTMAX_T
, , , , );

516 
fmtÊt
(*, 
size_t
 *, size_t, 
LDOUBLE
, , , , *);

517 
¥öt£p
(*, 
size_t
 *, size_t);

518 
gënum£p
();

519 
gëexp⁄ít
(
LDOUBLE
);

520 
c⁄vît
(
UINTMAX_T
, *, 
size_t
, , );

521 
UINTMAX_T
 
ˇ°
(
LDOUBLE
);

522 
UINTMAX_T
 
myround
(
LDOUBLE
);

523 
LDOUBLE
 
mypow10
();

525 
î∫o
;

528 
	$Ωl_v¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

530 
LDOUBLE
 
fvÆue
;

531 
INTMAX_T
 
vÆue
;

532 
cvÆue
;

533 c⁄° *
°rvÆue
;

534 
INTMAX_T
 *
ötmax±r
;

535 
PTRDIFF_T
 *
±rdifÂå
;

536 
SSIZE_T
 *
sizïå
;

537 
LLONG
 *
Œ⁄g±r
;

538 *
l⁄g±r
;

539 *
öçå
;

540 *
sh‹çå
;

541 sig√d *
ch¨±r
;

542 
size_t
 
Àn
 = 0;

543 
ovîÊow
 = 0;

544 
ba£
 = 0;

545 
cÊags
 = 0;

546 
Êags
 = 0;

547 
width
 = 0;

548 
¥ecisi⁄
 = -1;

549 
°©e
 = 
PRINT_S_DEFAULT
;

550 
ch
 = *
f‹m©
++;

560 i‡(
°r
 =
NULL
 && 
size
 != 0)

561 
size
 = 0;

563 
ch
 != '\0')

564 
°©e
) {

565 
PRINT_S_DEFAULT
:

566 i‡(
ch
 == '%')

567 
°©e
 = 
PRINT_S_FLAGS
;

569 
	`OUTCHAR
(
°r
, 
Àn
, 
size
, 
ch
);

570 
ch
 = *
f‹m©
++;

572 
PRINT_S_FLAGS
:

573 
ch
) {

575 
Êags
 |
PRINT_F_MINUS
;

576 
ch
 = *
f‹m©
++;

579 
Êags
 |
PRINT_F_PLUS
;

580 
ch
 = *
f‹m©
++;

583 
Êags
 |
PRINT_F_SPACE
;

584 
ch
 = *
f‹m©
++;

587 
Êags
 |
PRINT_F_NUM
;

588 
ch
 = *
f‹m©
++;

591 
Êags
 |
PRINT_F_ZERO
;

592 
ch
 = *
f‹m©
++;

595 
Êags
 |
PRINT_F_QUOTE
;

596 
ch
 = *
f‹m©
++;

599 
°©e
 = 
PRINT_S_WIDTH
;

603 
PRINT_S_WIDTH
:

604 i‡(
	`ISDIGIT
(
ch
)) {

605 
ch
 = 
	`CHARTOINT
(ch);

606 i‡(
width
 > (
INT_MAX
 - 
ch
) / 10) {

607 
ovîÊow
 = 1;

608 
out
;

610 
width
 = 10 * width + 
ch
;

611 
ch
 = *
f‹m©
++;

612 } i‡(
ch
 == '*') {

618 i‡((
width
 = 
	`va_¨g
(
¨gs
, )) < 0) {

619 
Êags
 |
PRINT_F_MINUS
;

620 
width
 = -width;

622 
ch
 = *
f‹m©
++;

623 
°©e
 = 
PRINT_S_DOT
;

625 
°©e
 = 
PRINT_S_DOT
;

627 
PRINT_S_DOT
:

628 i‡(
ch
 == '.') {

629 
°©e
 = 
PRINT_S_PRECISION
;

630 
ch
 = *
f‹m©
++;

632 
°©e
 = 
PRINT_S_MOD
;

634 
PRINT_S_PRECISION
:

635 i‡(
¥ecisi⁄
 == -1)

636 
¥ecisi⁄
 = 0;

637 i‡(
	`ISDIGIT
(
ch
)) {

638 
ch
 = 
	`CHARTOINT
(ch);

639 i‡(
¥ecisi⁄
 > (
INT_MAX
 - 
ch
) / 10) {

640 
ovîÊow
 = 1;

641 
out
;

643 
¥ecisi⁄
 = 10 *Öªcisi⁄ + 
ch
;

644 
ch
 = *
f‹m©
++;

645 } i‡(
ch
 == '*') {

651 i‡((
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, )) < 0)

652 
¥ecisi⁄
 = -1;

653 
ch
 = *
f‹m©
++;

654 
°©e
 = 
PRINT_S_MOD
;

656 
°©e
 = 
PRINT_S_MOD
;

658 
PRINT_S_MOD
:

659 
ch
) {

661 
ch
 = *
f‹m©
++;

662 i‡(
ch
 == 'h') {

663 
ch
 = *
f‹m©
++;

664 
cÊags
 = 
PRINT_C_CHAR
;

666 
cÊags
 = 
PRINT_C_SHORT
;

669 
ch
 = *
f‹m©
++;

670 i‡(
ch
 == 'l') {

671 
ch
 = *
f‹m©
++;

672 
cÊags
 = 
PRINT_C_LLONG
;

674 
cÊags
 = 
PRINT_C_LONG
;

677 
cÊags
 = 
PRINT_C_LDOUBLE
;

678 
ch
 = *
f‹m©
++;

681 
cÊags
 = 
PRINT_C_INTMAX
;

682 
ch
 = *
f‹m©
++;

685 
cÊags
 = 
PRINT_C_PTRDIFF
;

686 
ch
 = *
f‹m©
++;

689 
cÊags
 = 
PRINT_C_SIZE
;

690 
ch
 = *
f‹m©
++;

693 
°©e
 = 
PRINT_S_CONV
;

695 
PRINT_S_CONV
:

696 
ch
) {

700 
cÊags
) {

701 
PRINT_C_CHAR
:

702 
vÆue
 = (sig√d )
	`va_¨g
(
¨gs
, );

704 
PRINT_C_SHORT
:

705 
vÆue
 = ()
	`va_¨g
(
¨gs
, );

707 
PRINT_C_LONG
:

708 
vÆue
 = 
	`va_¨g
(
¨gs
, );

710 
PRINT_C_LLONG
:

711 
vÆue
 = 
	`va_¨g
(
¨gs
, 
LLONG
);

713 
PRINT_C_SIZE
:

714 
vÆue
 = 
	`va_¨g
(
¨gs
, 
SSIZE_T
);

716 
PRINT_C_INTMAX
:

717 
vÆue
 = 
	`va_¨g
(
¨gs
, 
INTMAX_T
);

719 
PRINT_C_PTRDIFF
:

720 
vÆue
 = 
	`va_¨g
(
¨gs
, 
PTRDIFF_T
);

723 
vÆue
 = 
	`va_¨g
(
¨gs
, );

726 
	`fmtöt
(
°r
, &
Àn
, 
size
, 
vÆue
, 10, 
width
,

727 
¥ecisi⁄
, 
Êags
);

730 
Êags
 |
PRINT_F_UP
;

733 
ba£
 = 16;

736 i‡(
ba£
 == 0)

737 
ba£
 = 8;

740 i‡(
ba£
 == 0)

741 
ba£
 = 10;

742 
Êags
 |
PRINT_F_UNSIGNED
;

743 
cÊags
) {

744 
PRINT_C_CHAR
:

745 
vÆue
 = ()
	`va_¨g
(
¨gs
,

748 
PRINT_C_SHORT
:

749 
vÆue
 = ()
	`va_¨g
(
¨gs
,

752 
PRINT_C_LONG
:

753 
vÆue
 = 
	`va_¨g
(
¨gs
, );

755 
PRINT_C_LLONG
:

756 
vÆue
 = 
	`va_¨g
(
¨gs
, 
ULLONG
);

758 
PRINT_C_SIZE
:

759 
vÆue
 = 
	`va_¨g
(
¨gs
, 
size_t
);

761 
PRINT_C_INTMAX
:

762 
vÆue
 = 
	`va_¨g
(
¨gs
, 
UINTMAX_T
);

764 
PRINT_C_PTRDIFF
:

765 
vÆue
 = 
	`va_¨g
(
¨gs
, 
UPTRDIFF_T
);

768 
vÆue
 = 
	`va_¨g
(
¨gs
, );

771 
	`fmtöt
(
°r
, &
Àn
, 
size
, 
vÆue
, 
ba£
, 
width
,

772 
¥ecisi⁄
, 
Êags
);

778 
Êags
 |
PRINT_F_UP
;

783 i‡(
cÊags
 =
PRINT_C_LDOUBLE
)

784 
fvÆue
 = 
	`va_¨g
(
¨gs
, 
LDOUBLE
);

786 
fvÆue
 = 
	`va_¨g
(
¨gs
, );

787 
	`fmtÊt
(
°r
, &
Àn
, 
size
, 
fvÆue
, 
width
,

788 
¥ecisi⁄
, 
Êags
, &
ovîÊow
);

789 i‡(
ovîÊow
)

790 
out
;

793 
Êags
 |
PRINT_F_UP
;

796 
Êags
 |
PRINT_F_TYPE_E
;

797 i‡(
cÊags
 =
PRINT_C_LDOUBLE
)

798 
fvÆue
 = 
	`va_¨g
(
¨gs
, 
LDOUBLE
);

800 
fvÆue
 = 
	`va_¨g
(
¨gs
, );

801 
	`fmtÊt
(
°r
, &
Àn
, 
size
, 
fvÆue
, 
width
,

802 
¥ecisi⁄
, 
Êags
, &
ovîÊow
);

803 i‡(
ovîÊow
)

804 
out
;

807 
Êags
 |
PRINT_F_UP
;

810 
Êags
 |
PRINT_F_TYPE_G
;

811 i‡(
cÊags
 =
PRINT_C_LDOUBLE
)

812 
fvÆue
 = 
	`va_¨g
(
¨gs
, 
LDOUBLE
);

814 
fvÆue
 = 
	`va_¨g
(
¨gs
, );

819 i‡(
¥ecisi⁄
 == 0)

820 
¥ecisi⁄
 = 1;

821 
	`fmtÊt
(
°r
, &
Àn
, 
size
, 
fvÆue
, 
width
,

822 
¥ecisi⁄
, 
Êags
, &
ovîÊow
);

823 i‡(
ovîÊow
)

824 
out
;

827 
cvÆue
 = 
	`va_¨g
(
¨gs
, );

828 
	`OUTCHAR
(
°r
, 
Àn
, 
size
, 
cvÆue
);

831 
°rvÆue
 = 
	`va_¨g
(
¨gs
, *);

832 
	`fmt°r
(
°r
, &
Àn
, 
size
, 
°rvÆue
, 
width
,

833 
¥ecisi⁄
, 
Êags
);

842 i‡((
°rvÆue
 = 
	`va_¨g
(
¨gs
, *)Ë=
NULL
)

847 
	`fmt°r
(
°r
, &
Àn
, 
size
, "“û)", 
width
,

848 -1, 
Êags
);

855 
Êags
 |
PRINT_F_NUM
;

856 
Êags
 |
PRINT_F_UNSIGNED
;

857 
	`fmtöt
(
°r
, &
Àn
, 
size
,

858 (
UINTPTR_T
)
°rvÆue
, 16, 
width
,

859 
¥ecisi⁄
, 
Êags
);

863 
cÊags
) {

864 
PRINT_C_CHAR
:

865 
ch¨±r
 = 
	`va_¨g
(
¨gs
, signed *);

866 *
ch¨±r
 = 
Àn
;

868 
PRINT_C_SHORT
:

869 
sh‹çå
 = 
	`va_¨g
(
¨gs
, *);

870 *
sh‹çå
 = 
Àn
;

872 
PRINT_C_LONG
:

873 
l⁄g±r
 = 
	`va_¨g
(
¨gs
, *);

874 *
l⁄g±r
 = 
Àn
;

876 
PRINT_C_LLONG
:

877 
Œ⁄g±r
 = 
	`va_¨g
(
¨gs
, 
LLONG
 *);

878 *
Œ⁄g±r
 = 
Àn
;

880 
PRINT_C_SIZE
:

888 
sizïå
 = 
	`va_¨g
(
¨gs
, 
SSIZE_T
 *);

889 *
sizïå
 = 
Àn
;

891 
PRINT_C_INTMAX
:

892 
ötmax±r
 = 
	`va_¨g
(
¨gs
, 
INTMAX_T
 *);

893 *
ötmax±r
 = 
Àn
;

895 
PRINT_C_PTRDIFF
:

896 
±rdifÂå
 = 
	`va_¨g
(
¨gs
, 
PTRDIFF_T
 *);

897 *
±rdifÂå
 = 
Àn
;

900 
öçå
 = 
	`va_¨g
(
¨gs
, *);

901 *
öçå
 = 
Àn
;

906 
	`OUTCHAR
(
°r
, 
Àn
, 
size
, 
ch
);

911 
ch
 = *
f‹m©
++;

912 
°©e
 = 
PRINT_S_DEFAULT
;

913 
ba£
 = 
cÊags
 = 
Êags
 = 
width
 = 0;

914 
¥ecisi⁄
 = -1;

917 
out
:

918 i‡(
Àn
 < 
size
)

919 
°r
[
Àn
] = '\0';

920 i‡(
size
 > 0)

921 
°r
[
size
 - 1] = '\0';

923 i‡(
ovîÊow
 || 
Àn
 >
INT_MAX
) {

924 
î∫o
 = 
ovîÊow
 ? 
EOVERFLOW
 : 
ERANGE
;

927  ()
Àn
;

928 
	}
}

931 
	$fmt°r
(*
°r
, 
size_t
 *
Àn
, size_à
size
, c⁄° *
vÆue
, 
width
,

932 
¥ecisi⁄
, 
Êags
)

934 
∑dÀn
, 
°æn
;

935 
n›ªcisi⁄
 = (
¥ecisi⁄
 == -1);

937 i‡(
vÆue
 =
NULL
)

938 
vÆue
 = "(null)";

941 
°æn
 = 0; 
vÆue
[strln] != '\0' &&

942 (
n›ªcisi⁄
 || 
°æn
 < 
¥ecisi⁄
); strln++)

945 i‡((
∑dÀn
 = 
width
 - 
°æn
) < 0)

946 
∑dÀn
 = 0;

947 i‡(
Êags
 & 
PRINT_F_MINUS
)

948 
∑dÀn
 = -padlen;

950 
∑dÀn
 > 0) {

951 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, ' ');

952 
∑dÀn
--;

954 *
vÆue
 !'\0' && (
n›ªcisi⁄
 || 
¥ecisi⁄
-- > 0)) {

955 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, *
vÆue
);

956 
vÆue
++;

958 
∑dÀn
 < 0) {

959 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, ' ');

960 
∑dÀn
++;

962 
	}
}

965 
	$fmtöt
(*
°r
, 
size_t
 *
Àn
, size_à
size
, 
INTMAX_T
 
vÆue
, 
ba£
, 
width
,

966 
¥ecisi⁄
, 
Êags
)

968 
UINTMAX_T
 
uvÆue
;

969 
ic⁄vît
[
MAX_CONVERT_LENGTH
];

970 
sign
 = 0;

971 
hex¥efix
 = 0;

972 
•adÀn
 = 0;

973 
z∑dÀn
 = 0;

974 
pos
;

975 
£∑øt‹s
 = (
Êags
 & 
PRINT_F_QUOTE
);

976 
n›ªcisi⁄
 = (
¥ecisi⁄
 == -1);

978 i‡(
Êags
 & 
PRINT_F_UNSIGNED
)

979 
uvÆue
 = 
vÆue
;

981 
uvÆue
 = (
vÆue
 >= 0) ? value : -value;

982 i‡(
vÆue
 < 0)

983 
sign
 = '-';

984 i‡(
Êags
 & 
PRINT_F_PLUS
)

985 
sign
 = '+';

986 i‡(
Êags
 & 
PRINT_F_SPACE
)

987 
sign
 = ' ';

990 
pos
 = 
	`c⁄vît
(
uvÆue
, 
ic⁄vît
, (ic⁄vît), 
ba£
,

991 
Êags
 & 
PRINT_F_UP
);

993 i‡(
Êags
 & 
PRINT_F_NUM
 && 
uvÆue
 != 0) {

1002 
ba£
) {

1004 i‡(
¥ecisi⁄
 <
pos
)

1005 
¥ecisi⁄
 = 
pos
 + 1;

1008 
hex¥efix
 = (
Êags
 & 
PRINT_F_UP
) ? 'X' : 'x';

1013 i‡(
£∑øt‹s
)

1014 
£∑øt‹s
 = 
	`gënum£p
(
pos
);

1016 
z∑dÀn
 = 
¥ecisi⁄
 - 
pos
 - 
£∑øt‹s
;

1017 
•adÀn
 = 
width


1018 - 
£∑øt‹s


1019 - 
	`MAX
(
¥ecisi⁄
, 
pos
)

1020 - ((
sign
 != 0) ? 1 : 0)

1021 - ((
hex¥efix
 != 0) ? 2 : 0);

1023 i‡(
z∑dÀn
 < 0)

1024 
z∑dÀn
 = 0;

1025 i‡(
•adÀn
 < 0)

1026 
•adÀn
 = 0;

1033 i‡(
Êags
 & 
PRINT_F_MINUS
)

1034 
•adÀn
 = -spadlen;

1035 i‡(
Êags
 & 
PRINT_F_ZERO
 && 
n›ªcisi⁄
) {

1036 
z∑dÀn
 +
•adÀn
;

1037 
•adÀn
 = 0;

1039 
•adÀn
 > 0) {

1040 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, ' ');

1041 
•adÀn
--;

1043 i‡(
sign
 != 0)

1044 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
sign
);

1045 i‡(
hex¥efix
 != 0) {

1046 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, '0');

1047 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
hex¥efix
);

1049 
z∑dÀn
 > 0) {

1050 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, '0');

1051 
z∑dÀn
--;

1053 
pos
 > 0) {

1054 
pos
--;

1055 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
ic⁄vît
[
pos
]);

1056 i‡(
£∑øt‹s
 > 0 && 
pos
 > 0 &&Öos % 3 == 0)

1057 
	`¥öt£p
(
°r
, 
Àn
, 
size
);

1059 
•adÀn
 < 0) {

1060 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, ' ');

1061 
•adÀn
++;

1063 
	}
}

1066 
	$fmtÊt
(*
°r
, 
size_t
 *
Àn
, size_à
size
, 
LDOUBLE
 
fvÆue
, 
width
,

1067 
¥ecisi⁄
, 
Êags
, *
ovîÊow
)

1069 
LDOUBLE
 
ufvÆue
;

1070 
UINTMAX_T
 
öç¨t
;

1071 
UINTMAX_T
 
‰a˝¨t
;

1072 
UINTMAX_T
 
mask
;

1073 c⁄° *
ö‚™
 = 
NULL
;

1074 
ic⁄vît
[
MAX_CONVERT_LENGTH
];

1075 
fc⁄vît
[
MAX_CONVERT_LENGTH
];

1076 
ec⁄vît
[4];

1077 
esign
 = 0;

1078 
sign
 = 0;

1079 
Àad‰aczîos
 = 0;

1080 
exp⁄ít
 = 0;

1081 
emôpoöt
 = 0;

1082 
omôzîos
 = 0;

1083 
omôcou¡
 = 0;

1084 
∑dÀn
 = 0;

1085 
ïos
 = 0;

1086 
Âos
 = 0;

1087 
ùos
 = 0;

1088 
£∑øt‹s
 = (
Êags
 & 
PRINT_F_QUOTE
);

1089 
e°yÀ
 = (
Êags
 & 
PRINT_F_TYPE_E
);

1090 #i‡
HAVE_LOCALECONV
 && 
HAVE_LCONV_DECIMAL_POINT


1091 
lc⁄v
 *
lc
 = 
	`loˇÀc⁄v
();

1099 i‡(
¥ecisi⁄
 == -1)

1100 
¥ecisi⁄
 = 6;

1102 i‡(
fvÆue
 < 0.0)

1103 
sign
 = '-';

1104 i‡(
Êags
 & 
PRINT_F_PLUS
)

1105 
sign
 = '+';

1106 i‡(
Êags
 & 
PRINT_F_SPACE
)

1107 
sign
 = ' ';

1109 i‡(
	`ISNAN
(
fvÆue
))

1110 
ö‚™
 = (
Êags
 & 
PRINT_F_UP
) ? "NAN" : "nan";

1111 i‡(
	`ISINF
(
fvÆue
))

1112 
ö‚™
 = (
Êags
 & 
PRINT_F_UP
) ? "INF" : "inf";

1114 i‡(
ö‚™
 !
NULL
) {

1115 i‡(
sign
 != 0)

1116 
ic⁄vît
[
ùos
++] = 
sign
;

1117 *
ö‚™
 != '\0')

1118 
ic⁄vît
[
ùos
++] = *
ö‚™
++;

1119 
	`fmt°r
(
°r
, 
Àn
, 
size
, 
ic⁄vît
, 
width
, 
ùos
, 
Êags
);

1124 i‡(
Êags
 & 
PRINT_F_TYPE_E
 || fœg†& 
PRINT_F_TYPE_G
) {

1125 i‡(
Êags
 & 
PRINT_F_TYPE_G
) {

1139 
¥ecisi⁄
--;

1145 i‡(!(
Êags
 & 
PRINT_F_NUM
))

1146 
omôzîos
 = 1;

1148 
exp⁄ít
 = 
	`gëexp⁄ít
(
fvÆue
);

1149 
e°yÀ
 = 1;

1152 
agaö
:

1158 (
UINTMAX_T
)) {

1160 i‡(
¥ecisi⁄
 > 38)

1161 
¥ecisi⁄
 = 38;

1164 i‡(
¥ecisi⁄
 > 19)

1165 
¥ecisi⁄
 = 19;

1168 i‡(
¥ecisi⁄
 > 9)

1169 
¥ecisi⁄
 = 9;

1173 
ufvÆue
 = (
fvÆue
 >= 0.0) ? fvalue : -fvalue;

1174 i‡(
e°yÀ
)

1175 
ufvÆue
 /
	`mypow10
(
exp⁄ít
);

1177 i‡((
öç¨t
 = 
	`ˇ°
(
ufvÆue
)Ë=
UINTMAX_MAX
) {

1178 *
ovîÊow
 = 1;

1186 
mask
 = 
	`mypow10
(
¥ecisi⁄
);

1191 i‡((
‰a˝¨t
 = 
	`myround
(
mask
 * (
ufvÆue
 - 
öç¨t
))) >= mask) {

1198 
öç¨t
++;

1199 
‰a˝¨t
 = 0;

1200 i‡(
e°yÀ
 && 
öç¨t
 == 10) {

1207 
öç¨t
 = 1;

1208 
exp⁄ít
++;

1230 i‡(
Êags
 & 
PRINT_F_TYPE_G
 && 
e°yÀ
 &&

1231 
¥ecisi⁄
 + 1 > 
exp⁄ít
 &&Éxponent >= -4) {

1232 
¥ecisi⁄
 -
exp⁄ít
;

1233 
e°yÀ
 = 0;

1234 
agaö
;

1237 i‡(
e°yÀ
) {

1238 i‡(
exp⁄ít
 < 0) {

1239 
exp⁄ít
 = -exponent;

1240 
esign
 = '-';

1242 
esign
 = '+';

1250 
ïos
 = 
	`c⁄vît
(
exp⁄ít
, 
ec⁄vît
, 2, 10, 0);

1256 i‡(
ïos
 == 1)

1257 
ec⁄vît
[
ïos
++] = '0';

1258 
ec⁄vît
[
ïos
++] = 
esign
;

1259 
ec⁄vît
[
ïos
++] = (
Êags
 & 
PRINT_F_UP
) ? 'E' : 'e';

1263 
ùos
 = 
	`c⁄vît
(
öç¨t
, 
ic⁄vît
, (iconvert), 10, 0);

1264 i‡(
‰a˝¨t
 != 0)

1265 
Âos
 = 
	`c⁄vît
(
‰a˝¨t
, 
fc⁄vît
, (fconvert), 10, 0);

1267 
Àad‰aczîos
 = 
¥ecisi⁄
 - 
Âos
;

1269 i‡(
omôzîos
) {

1270 i‡(
Âos
 > 0)

1271 
omôcou¡
 < 
Âos
 && 
fc⁄vît
[omitcount] == '0')

1272 
omôcou¡
++;

1274 
omôcou¡
 = 
¥ecisi⁄
;

1275 
Àad‰aczîos
 = 0;

1277 
¥ecisi⁄
 -
omôcou¡
;

1284 i‡(
¥ecisi⁄
 > 0 || 
Êags
 & 
PRINT_F_NUM
)

1285 
emôpoöt
 = 1;

1286 i‡(
£∑øt‹s
)

1287 
£∑øt‹s
 = 
	`gënum£p
(
ùos
);

1289 
∑dÀn
 = 
width


1290 - 
ùos


1291 - 
ïos


1292 - 
¥ecisi⁄


1293 - 
£∑øt‹s


1294 - (
emôpoöt
 ? 1 : 0)

1295 - ((
sign
 != 0) ? 1 : 0);

1297 i‡(
∑dÀn
 < 0)

1298 
∑dÀn
 = 0;

1304 i‡(
Êags
 & 
PRINT_F_MINUS
)

1305 
∑dÀn
 = -padlen;

1306 i‡(
Êags
 & 
PRINT_F_ZERO
 && 
∑dÀn
 > 0) {

1307 i‡(
sign
 != 0) {

1308 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
sign
);

1309 
sign
 = 0;

1311 
∑dÀn
 > 0) {

1312 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, '0');

1313 
∑dÀn
--;

1316 
∑dÀn
 > 0) {

1317 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, ' ');

1318 
∑dÀn
--;

1320 i‡(
sign
 != 0)

1321 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
sign
);

1322 
ùos
 > 0) {

1323 
ùos
--;

1324 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
ic⁄vît
[
ùos
]);

1325 i‡(
£∑øt‹s
 > 0 && 
ùos
 > 0 && ipos % 3 == 0)

1326 
	`¥öt£p
(
°r
, 
Àn
, 
size
);

1328 i‡(
emôpoöt
) {

1329 #i‡
HAVE_LOCALECONV
 && 
HAVE_LCONV_DECIMAL_POINT


1330 i‡(
lc
->
decimÆ_poöt
 !
NULL
 && *lc->decimal_point != '\0')

1331 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, *
lc
->
decimÆ_poöt
);

1334 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, '.');

1336 
Àad‰aczîos
 > 0) {

1337 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, '0');

1338 
Àad‰aczîos
--;

1340 
Âos
 > 
omôcou¡
) {

1341 
Âos
--;

1342 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
fc⁄vît
[
Âos
]);

1344 
ïos
 > 0) {

1345 
ïos
--;

1346 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
ec⁄vît
[
ïos
]);

1348 
∑dÀn
 < 0) {

1349 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, ' ');

1350 
∑dÀn
++;

1352 
	}
}

1355 
	$¥öt£p
(*
°r
, 
size_t
 *
Àn
, size_à
size
)

1357 #i‡
HAVE_LOCALECONV
 && 
HAVE_LCONV_THOUSANDS_SEP


1358 
lc⁄v
 *
lc
 = 
	`loˇÀc⁄v
();

1359 
i
;

1361 i‡(
lc
->
thoußnds_£p
 !
NULL
)

1362 
i
 = 0; 
lc
->
thoußnds_£p
[i] != '\0'; i++)

1363 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, 
lc
->
thoußnds_£p
[
i
]);

1366 
	`OUTCHAR
(
°r
, *
Àn
, 
size
, ',');

1367 
	}
}

1370 
	$gënum£p
(
digôs
)

1372 
£∑øt‹s
 = (
digôs
 - ((digits % 3 == 0) ? 1 : 0)) / 3;

1373 #i‡
HAVE_LOCALECONV
 && 
HAVE_LCONV_THOUSANDS_SEP


1374 
°æn
;

1375 
lc⁄v
 *
lc
 = 
	`loˇÀc⁄v
();

1378 i‡(
lc
->
thoußnds_£p
 !
NULL
) {

1379 
°æn
 = 0; 
lc
->
thoußnds_£p
[strln] != '\0'; strln++)

1381 
£∑øt‹s
 *
°æn
;

1384  
£∑øt‹s
;

1385 
	}
}

1388 
	$gëexp⁄ít
(
LDOUBLE
 
vÆue
)

1390 
LDOUBLE
 
tmp
 = (
vÆue
 >= 0.0) ? value : -value;

1391 
exp⁄ít
 = 0;

1400 
tmp
 < 1.0 &&Åm∞> 0.0 && --
exp⁄ít
 > -99)

1401 
tmp
 *= 10;

1402 
tmp
 >10.0 && ++
exp⁄ít
 < 99)

1403 
tmp
 /= 10;

1405  
exp⁄ít
;

1406 
	}
}

1409 
	$c⁄vît
(
UINTMAX_T
 
vÆue
, *
buf
, 
size_t
 
size
, 
ba£
, 
ˇps
)

1411 c⁄° *
digôs
 = 
ˇps
 ? "0123456789ABCDEF" : "0123456789abcdef";

1412 
size_t
 
pos
 = 0;

1416 
buf
[
pos
++] = 
digôs
[
vÆue
 % 
ba£
];

1417 
vÆue
 /
ba£
;

1418 } 
vÆue
 !0 && 
pos
 < 
size
);

1420  ()
pos
;

1421 
	}
}

1423 
UINTMAX_T


1424 
	$ˇ°
(
LDOUBLE
 
vÆue
)

1426 
UINTMAX_T
 
ªsu…
;

1435 i‡(
vÆue
 >
UINTMAX_MAX
)

1436  
UINTMAX_MAX
;

1438 
ªsu…
 = 
vÆue
;

1444  (
ªsu…
 <
vÆue
) ?Ñesult :Ñesult - 1;

1445 
	}
}

1447 
UINTMAX_T


1448 
	$myround
(
LDOUBLE
 
vÆue
)

1450 
UINTMAX_T
 
öç¨t
 = 
	`ˇ°
(
vÆue
);

1452  ((
vÆue
 -
öç¨t
) < 0.5) ? intpart : intpart + 1;

1453 
	}
}

1455 
LDOUBLE


1456 
	$mypow10
(
exp⁄ít
)

1458 
LDOUBLE
 
ªsu…
 = 1;

1460 
exp⁄ít
 > 0) {

1461 
ªsu…
 *= 10;

1462 
exp⁄ít
--;

1464 
exp⁄ít
 < 0) {

1465 
ªsu…
 /= 10;

1466 
exp⁄ít
++;

1468  
ªsu…
;

1469 
	}
}

1472 #i‡!
HAVE_VASPRINTF


1473 #i‡
NEED_MYMEMCPY


1475 
	$mymem˝y
(*
d°
, *
§c
, 
size_t
 
Àn
)

1477 c⁄° *
‰om
 = 
§c
;

1478 *
to
 = 
d°
;

1481 
Àn
-- > 0)

1482 *
to
++ = *
‰om
++;

1483  
d°
;

1484 
	}
}

1488 
	$Ωl_va•rötf
(**
ªt
, c⁄° *
f‹m©
, 
va_li°
 
≠
)

1490 
size_t
 
size
;

1491 
Àn
;

1492 
va_li°
 
aq
;

1494 
	`VA_COPY
(
aq
, 
≠
);

1495 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
aq
);

1496 
	`VA_END_COPY
(
aq
);

1497 i‡(
Àn
 < 0 || (*
ªt
 = 
	`mÆloc
(
size
 =Üí + 1)Ë=
NULL
)

1499  
	`v¢¥ötf
(*
ªt
, 
size
, 
f‹m©
, 
≠
);

1500 
	}
}

1503 #i‡!
HAVE_SNPRINTF


1504 #i‡
HAVE_STDARG_H


1506 
	$Ωl_¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...)

1509 
	$Ωl_¢¥ötf
(
va_Æi°
Ë
va_d˛


1512 #i‡!
HAVE_STDARG_H


1513 *
°r
;

1514 
size_t
 
size
;

1515 *
f‹m©
;

1517 
va_li°
 
≠
;

1518 
Àn
;

1520 
	`VA_START
(
≠
, 
f‹m©
);

1521 
	`VA_SHIFT
(
≠
, 
°r
, *);

1522 
	`VA_SHIFT
(
≠
, 
size
, 
size_t
);

1523 
	`VA_SHIFT
(
≠
, 
f‹m©
, const *);

1524 
Àn
 = 
	`v¢¥ötf
(
°r
, 
size
, 
f‹m©
, 
≠
);

1525 
	`va_íd
(
≠
);

1526  
Àn
;

1527 
	}
}

1530 #i‡!
HAVE_ASPRINTF


1531 #i‡
HAVE_STDARG_H


1533 
	$Ωl_a•rötf
(**
ªt
, c⁄° *
f‹m©
, ...)

1536 
	$Ωl_a•rötf
(
va_Æi°
Ë
va_d˛


1539 #i‡!
HAVE_STDARG_H


1540 **
ªt
;

1541 *
f‹m©
;

1543 
va_li°
 
≠
;

1544 
Àn
;

1546 
	`VA_START
(
≠
, 
f‹m©
);

1547 
	`VA_SHIFT
(
≠
, 
ªt
, **);

1548 
	`VA_SHIFT
(
≠
, 
f‹m©
, const *);

1549 
Àn
 = 
	`va•rötf
(
ªt
, 
f‹m©
, 
≠
);

1550 
	`va_íd
(
≠
);

1551  
Àn
;

1552 
	}
}

1555 
maö
();

1558 #i‡
TEST_SNPRINTF


1560 
	$maö
()

1562 c⁄° *
Êﬂt_fmt
[] = {

1564 #i‡
HAVE_LONG_LONG_INT
 && !
OS_BSD
 && !
OS_IRIX


1583 #i‡!
OS_LINUX


1612 #i‡!
OS_BSD
 && !
OS_IRIX


1617 #i‡
HAVE_LONG_LONG_INT


1664 #i‡!
OS_BSD
 && !
OS_IRIX
 && !
OS_LINUX


1669 #i‡
HAVE_LONG_LONG_INT


1689 #i‡!
OS_LINUX


1717 
NULL


1719 
Êﬂt_vÆ
[] = {

1775 #i‡!
OS_BSD


1776 #ifde‡
INFINITY


1777 
INFINITY
,

1778 -
INFINITY
,

1780 #ifde‡
NAN


1781 
NAN
,

1786 c⁄° *
l⁄g_fmt
[] = {

1788 #i‡!
OS_IRIX


1832 
NULL


1834 
l⁄g_vÆ
[] = {

1835 #ifde‡
LONG_MAX


1836 
LONG_MAX
,

1838 #ifde‡
LONG_MIN


1839 
LONG_MIN
,

1850 c⁄° *
ul⁄g_fmt
[] = {

1853 #i‡!
OS_IRIX


1940 
NULL


1942 
ul⁄g_vÆ
[] = {

1943 #ifde‡
ULONG_MAX


1944 
ULONG_MAX
,

1953 c⁄° *
Œ⁄g_fmt
[] = {

1970 
NULL


1972 
LLONG
 
Œ⁄g_vÆ
[] = {

1973 #ifde‡
LLONG_MAX


1974 
LLONG_MAX
,

1976 #ifde‡
LLONG_MIN


1977 
LLONG_MIN
,

1988 c⁄° *
°rög_fmt
[] = {

2006 
NULL


2008 c⁄° *
°rög_vÆ
[] = {

2015 
NULL


2017 #i‡!
OS_SYSV


2018 c⁄° *
poöãr_fmt
[] = {

2022 
NULL


2024 c⁄° *
poöãr_vÆ
[] = {

2025 *
poöãr_fmt
,

2026 *
°rög_fmt
,

2027 *
°rög_vÆ
,

2028 
NULL


2031 
buf1
[1024], 
buf2
[1024];

2032 
vÆue
, 
digôs
 = 9.123456789012345678901234567890123456789;

2033 
i
, 
j
, 
r1
, 
r2
, 
Áûed
 = 0, 
num
 = 0;

2041 #i‚de‡
TEST_NILS


2042 
	#TEST_NILS
 0

	)

2043 #ñi‡
TEST_NILS


2044 #unde‡
TEST_NILS


2045 
	#TEST_NILS
 1

	)

2047 #ifde‡
TEST


2048 #unde‡
TEST


2050 
	#TEST
(
fmt
, 
vÆ
) \

2052 
i
 = 0; 
fmt
[i] !
NULL
; i++) \

2053 
j
 = 0; j =0 || 
vÆ
[j - 
TEST_NILS
] != 0; j++) { \

2054 
r1
 = 
	`•rötf
(
buf1
, 
fmt
[
i
], 
vÆ
[
j
]); \

2055 
r2
 = 
	`¢¥ötf
(
buf2
, (buf2), 
fmt
[
i
], 
vÆ
[
j
]); \

2056 i‡(
	`°rcmp
(
buf1
, 
buf2
Ë!0 || 
r1
 !
r2
) { \

2057 ()
	`¥ötf
("Results don't match, " \

2061 
fmt
[
i
], 
buf1
, 
r1
, 
buf2
, 
r2
); \

2062 
Áûed
++; \

2064 
num
++; \

2066 }  0)

	)

2068 #i‡
HAVE_LOCALE_H


2069 ()
	`£éoˇÀ
(
LC_ALL
, "");

2072 ()
	`puts
("Testing our snprintf(3)ágainst your system's sprintf(3).");

2073 
	`TEST
(
Êﬂt_fmt
, 
Êﬂt_vÆ
);

2074 
	`TEST
(
l⁄g_fmt
, 
l⁄g_vÆ
);

2075 
	`TEST
(
ul⁄g_fmt
, 
ul⁄g_vÆ
);

2076 
	`TEST
(
Œ⁄g_fmt
, 
Œ⁄g_vÆ
);

2077 
	`TEST
(
°rög_fmt
, 
°rög_vÆ
);

2078 #i‡!
OS_SYSV


2079 
	`TEST
(
poöãr_fmt
, 
poöãr_vÆ
);

2081 ()
	`¥ötf
("Resu…: %d ouào‡%dÅe°†Áûed.\n", 
Áûed
, 
num
);

2083 ()
	`Âuts
("Checkög how m™y digô†wêsuµ‹t: ", 
°dout
);

2084 
i
 = 0; i < 100; i++) {

2085 
vÆue
 = 
	`pow
(10, 
i
Ë* 
digôs
;

2086 ()
	`•rötf
(
buf1
, "%.1f", 
vÆue
);

2087 ()
	`¢¥ötf
(
buf2
, (buf2), "%.1f", 
vÆue
);

2088 i‡(
	`°rcmp
(
buf1
, 
buf2
) != 0) {

2089 ()
	`¥ötf
("≠∑ª¡ly %d.\n", 
i
);

2093  (
Áûed
 == 0) ? 0 : 1;

2094 
	}
}

	@version.h

41 #i‚de‡
CSCOPE_VERSION_H


42 
	#CSCOPE_VERSION_H


	)

44 
	#FILEVERSION
 15

	)

45 
	#FIXVERSION
 ".7a"

	)

	@vp.h

42 #i‚de‡
CSCOPE_VP_H


43 
	#CSCOPE_VP_H


	)

45 
	#MAXPATH
 200

	)

47 #ifde‡
HAVE_CONFIG_H


48 
	~"c⁄fig.h
"

50 
	#HAVE_FCNTL_H
 1

	)

52 #ifde‡
HAVE_FCNTL_H


53 
	~<f˙é.h
>

56 
	~<sys/ty≥s.h
>

57 
	~<sys/°©.h
>

59 #i‡!
NOMALLOC


60 **
vpdús
;

62 
	#MAXDIR
 25

	)

63 
	#DIRLEN
 80

	)

64 
vpdús
[
MAXDIR
][
DIRLEN
 + 1];

66 
v≤dús
;

68 
vpöô
(*
cuºít_dú
);

69 
vp›í
(*
∑th
, 
oÊag
);

70 
v∑c˚ss
(*
∑th
, 
mode_t
 
amode
);

	@vpaccess.c

37 
	~<°dio.h
>

38 
	~<uni°d.h
>

39 
	~"vp.h
"

40 
	~<sys/ty≥s.h
>

43 
	$v∑c˚ss
(*
∑th
, 
mode_t
 
amode
)

45 
buf
[
MAXPATH
 + 1];

46 
ªtu∫code
;

47 
i
;

49 i‡((
ªtu∫code
 = 
	`ac˚ss
(
∑th
, 
amode
)) == -1 &&Öath[0] != '/') {

50 
	`vpöô
(
NULL
);

51 
i
 = 1; i < 
v≤dús
; i++) {

52 (Ë
	`¢¥ötf
(
buf
, (buf), "%s/%s", 
vpdús
[
i
], 
∑th
);

53 i‡((
ªtu∫code
 = 
	`ac˚ss
(
buf
, 
amode
)) != -1) {

58 (
ªtu∫code
);

59 
	}
}

	@vpfopen.c

35 
	~<°dio.h
>

36 
	~<°rög.h
>

37 
	~"vp.h
"

38 
	~"globÆ.h
"

40 c⁄° 
	grcsid
[] = "$Id: vpfopen.c,v 1.4 2009/04/10 13:39:23 broeker Exp $";

42 
FILE
 *

43 
	$vpf›í
(*
fûíame
, *
ty≥
)

45 
buf
[
MAXPATH
 + 1];

46 
FILE
 *
ªtu∫code
;

47 
i
;

49 i‡((
ªtu∫code
 = 
	`myf›í
(
fûíame
, 
ty≥
)Ë=
NULL


50 && 
fûíame
[0] != '/'

52 && 
ty≥
[0] == 'r'

54 
	`vpöô
(
NULL
);

55 
i
 = 1; i < 
v≤dús
; i++) {

56 (Ë
	`¢¥ötf
(
buf
, (buf), "%s/%s", 
vpdús
[
i
], 
fûíame
);

57 i‡((
ªtu∫code
 = 
	`myf›í
(
buf
, 
ty≥
)Ë!
NULL
) {

63 (
ªtu∫code
);

64 
	}
}

	@vpinit.c

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<uni°d.h
>

39 
	~"vp.h
"

40 
	~"Æloc.h
"

41 
	~"libøry.h
"

42 
	~"globÆ.h
"

43 
	~"c⁄°™ts.h
"

45 c⁄° 
	grcsid
[] = "$Id: vpinit.c,v 1.8 2006/07/23 20:59:20 broeker Exp $";

47 #i‡!
NOMALLOC


48 **
	gvpdús
;

50 
	gvpdús
[
MAXDIR
][
DIRLEN
 + 1];

51 
	#MAXVPATH
 (
MAXDIR
 * (
DIRLEN
 + 1))

	)

53 
	gv≤dús
;

56 
	$vpöô
(*
cuºít_dú
)

58 *
suffix
;

59 *
v∑th
;

60 
buf
[
MAXPATH
 + 1];

61 
i
;

62 *
s
;

63 #i‡
NOMALLOC


64 *
node
;

65 
v∑thbuf
[
MAXVPATH
 + 1];

69 i‡(
cuºít_dú
 !
NULL
 && 
v≤dús
 > 0) {

70 #i‡!
NOMALLOC


71 
i
 = 0; i < 
v≤dús
; ++i) {

72 
	`‰ì
(
vpdús
[
i
]);

74 
	`‰ì
(
vpdús
);

76 
v≤dús
 = 0;

80 i‡(
v≤dús
 > 0 || (
v∑th
 = 
	`gëív
("VPATH")Ë=
NULL
 ||

81 *
v∑th
 == '\0') {

85 i‡(
cuºít_dú
 =
NULL
 && (cuºít_dú = 
	`gëcwd
(
buf
, 
MAXPATH
)) == NULL) {

86 (Ë
	`Ârötf
(
°dîr
, "%s: c™nŸ gë cuºíàdúe˘‹yÇame\n", 
¨gv0
);

90 
i
 = 0; 
v∑th
[i] =
cuºít_dú
[i] && vpath[i] != '\0'; ++i) {

93 i‡((
v∑th
[
i
] != ':' && vpath[i] != '\0') ||

94 (
cuºít_dú
[
i
] != '/' && current_dir[i] != '\0')) {

97 
suffix
 = &
cuºít_dú
[
i
];

98 #i‡!
NOMALLOC


101 
v≤dús
 = 1;

102 
i
 = 0; 
v∑th
[i] != '\0'; ++i) {

103 i‡(
v∑th
[
i
] == ':' && vpath[i + 1]) {

104 ++
v≤dús
;

108 
vpdús
 = 
	`mymÆloc
(
v≤dús
 * (*));

111 
v∑th
 = 
	`my_°rdup
(vpath);

114 
i
 = 0, 
s
 = 
v∑th
; *s != '\0'; ++i) {

115 
vpdús
[
i
] = 
s
;

116 *
s
 != '\0' && *++s != ':') {

117 i‡(*
s
 == '\n') {

118 *
s
 = '\0';

121 i‡(*
s
 != '\0') {

122 *
s
++ = '\0';

126 
i
 = 0; i < 
v≤dús
; ++i) {

127 
s
 = 
	`mymÆloc
((
	`°æí
(
vpdús
[
i
]Ë+ såÀn(
suffix
) + 1));

128 (Ë
	`°r˝y
(
s
, 
vpdús
[
i
]);

129 (Ë
	`°rˇt
(
s
, 
suffix
);

130 
vpdús
[
i
] = 
s
;

132 
	`‰ì
(
v∑th
);

135 i‡(
	`°æí
(
v∑th
Ë> 
MAXVPATH
) {

136 (Ë
	`Ârötf
(
°dîr
, "%s: VPATH i†l⁄gîÅh™ %d ch¨a˘îs: %s\n", 
¨gv0
, 
MAXVPATH
, 
v∑th
);

139 (Ë
	`°r˝y
(
v∑thbuf
, 
v∑th
);

140 
s
 = 
v∑thbuf
;

143 *
s
 != '\0') {

146 
node
 = 
s
;

147 *
s
 != '\0' && *++s != ':') {

148 i‡(*
s
 == '\n') {

149 *
s
 = '\0';

152 i‡(*
s
 != '\0') {

153 *
s
++ = '\0';

156 i‡(
	`°æí
(
node
Ë+ såÀn(
suffix
Ë> 
DIRLEN
) {

157 (Ë
	`Ârötf
(
°dîr
, "%s: VPATH dúe˘‹y i†l⁄gîÅh™ %d ch¨a˘îs: %s%s\n", 
¨gv0
, 
DIRLEN
, 
node
, 
suffix
);

159 i‡(
v≤dús
 >
MAXDIR
) {

160 (Ë
	`Ârötf
(
°dîr
, "%s: VPATH ha†m‹êth™ %dÇodes\n", 
¨gv0
, 
v≤dús
);

165 (Ë
	`°r˝y
(
vpdús
[
v≤dús
], 
node
);

166 (Ë
	`°rˇt
(
vpdús
[
v≤dús
], 
suffix
);

167 ++
v≤dús
;

171 
	}
}

	@vpopen.c

36 
	~<°dio.h
>

37 
	~"globÆ.h
"

38 
	~"vp.h
"

40 
	#OPENFLAG_READ
 0

	)

42 c⁄° 
	grcsid
[] = "$Id: vpopen.c,v 1.5 2009/04/10 13:39:23 broeker Exp $";

45 
	$vp›í
(*
∑th
, 
oÊag
)

47 
buf
[
MAXPATH
 + 1];

48 
ªtu∫code
;

49 
i
;

51 i‡((
ªtu∫code
 = 
	`my›í
(
∑th
, 
oÊag
, 0666)) == -1 &&Öath[0] != '/' &&

52 
oÊag
 =
OPENFLAG_READ
) {

53 
	`vpöô
(
NULL
);

54 
i
 = 1; i < 
v≤dús
; i++) {

55 (Ë
	`¢¥ötf
(
buf
, (buf), "%s/%s", 
vpdús
[
i
], 
∑th
);

56 i‡((
ªtu∫code
 = 
	`my›í
(
buf
, 
oÊag
, 0666)) != -1) {

61 (
ªtu∫code
);

62 
	}
}

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 7

	)

46 
	#NCURSES_VERSION_PATCH
 20090207

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.7"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST


	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #unde‡
NCURSES_SIZE_T


110 
	#NCURSES_SIZE_T
 

	)

115 #unde‡
NCURSES_TPARM_VARARGS


116 
	#NCURSES_TPARM_VARARGS
 1

	)

123 #unde‡
NCURSES_CH_T


124 
	#NCURSES_CH_T
 
cch¨_t


	)

126 #i‡0 && 
deföed
(
_LP64
)

127 
	tchty≥
;

128 
	tmmask_t
;

130 
	tchty≥
;

131 
	tmmask_t
;

134 
	~<°dio.h
>

135 
	~<un˘æ.h
>

136 
	~<°d¨g.h
>

137 #ifde‡
_XOPEN_SOURCE_EXTENDED


138 
	~<°ddef.h
>

153 #unde‡
TRUE


154 
	#TRUE
 1

	)

156 #unde‡
FALSE


157 
	#FALSE
 0

	)

159 
	tNCURSES_BOOL
;

161 #i‡
deföed
(
__˝lu•lus
)

164 
	#NCURSES_BOOL
 
boﬁ


	)

168 #i‡
NCURSES_ENABLE_STDBOOL_H


169 
	~<°dboﬁ.h
>

171 
	#NCURSES_BOOL
 
boﬁ


	)

174 #unde‡
boﬁ


175 
	#boﬁ
 
NCURSES_BOOL


	)

180 #ifde‡
__˝lu•lus


182 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

184 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

191 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

192 
	#WA_NORMAL
 
A_NORMAL


	)

193 
	#WA_STANDOUT
 
A_STANDOUT


	)

194 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

195 
	#WA_REVERSE
 
A_REVERSE


	)

196 
	#WA_BLINK
 
A_BLINK


	)

197 
	#WA_DIM
 
A_DIM


	)

198 
	#WA_BOLD
 
A_BOLD


	)

199 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

200 
	#WA_INVIS
 
A_INVIS


	)

201 
	#WA_PROTECT
 
A_PROTECT


	)

202 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

203 
	#WA_LEFT
 
A_LEFT


	)

204 
	#WA_LOW
 
A_LOW


	)

205 
	#WA_RIGHT
 
A_RIGHT


	)

206 
	#WA_TOP
 
A_TOP


	)

207 
	#WA_VERTICAL
 
A_VERTICAL


	)

210 
	#COLOR_BLACK
 0

	)

211 
	#COLOR_RED
 1

	)

212 
	#COLOR_GREEN
 2

	)

213 
	#COLOR_YELLOW
 3

	)

214 
	#COLOR_BLUE
 4

	)

215 
	#COLOR_MAGENTA
 5

	)

216 
	#COLOR_CYAN
 6

	)

217 
	#COLOR_WHITE
 7

	)

222 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

223 
	#acs_m≠
 (
	`_nc_acs_m≠
())

	)

225 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

228 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

231 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

232 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

233 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

234 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

235 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

236 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

237 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

238 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

239 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

240 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

241 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

242 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

243 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

244 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

245 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

246 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

247 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

248 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

250 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

251 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

252 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

253 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

254 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

255 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

256 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

262 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

263 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

264 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

265 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

266 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

267 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

268 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

276 
	#ACS_BSSB
 
ACS_ULCORNER


	)

277 
	#ACS_SSBB
 
ACS_LLCORNER


	)

278 
	#ACS_BBSS
 
ACS_URCORNER


	)

279 
	#ACS_SBBS
 
ACS_LRCORNER


	)

280 
	#ACS_SBSS
 
ACS_RTEE


	)

281 
	#ACS_SSSB
 
ACS_LTEE


	)

282 
	#ACS_SSBS
 
ACS_BTEE


	)

283 
	#ACS_BSSS
 
ACS_TTEE


	)

284 
	#ACS_BSBS
 
ACS_HLINE


	)

285 
	#ACS_SBSB
 
ACS_VLINE


	)

286 
	#ACS_SSSS
 
ACS_PLUS


	)

288 #unde‡
ERR


289 
	#ERR
 (-1)

	)

291 #unde‡
OK


292 
	#OK
 (0)

	)

295 
	#_SUBWIN
 0x01

	)

296 
	#_ENDLINE
 0x02

	)

297 
	#_FULLWIN
 0x04

	)

298 
	#_SCROLLWIN
 0x08

	)

299 
	#_ISPAD
 0x10

	)

300 
	#_HASMOVED
 0x20

	)

301 
	#_WRAPPED
 0x40

	)

307 
	#_NOCHANGE
 -1

	)

313 
	#_NEWINDEX
 -1

	)

315 
s¸ìn
 
	tSCREEN
;

316 
_wö_°
 
	tWINDOW
;

318 
chty≥
 
	t©å_t
;

320 #ifde‡
_XOPEN_SOURCE_EXTENDED


323 #ifde‡
mbÀn


324 #unde‡
mbÀn


326 
	~<libutf8.h
>

330 
	~<wch¨.h
>

334 
	twch¨_t1
;

338 
	twöt_t1
;

341 
	#CCHARW_MAX
 5

	)

344 
©å_t
 
	g©å
;

345 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

347 #unde‡
NCURSES_EXT_COLORS


348 
	#NCURSES_EXT_COLORS
 20090207

	)

349 
	gext_cﬁ‹
;

352 
	tcch¨_t
;

356 #i‡!
NCURSES_OPAQUE


357 
	gld©
;

359 
	s_wö_°


361 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

364 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

365 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

367 
	g_Êags
;

370 
©å_t
 
	g_©ås
;

371 
chty≥
 
	g_bkgd
;

374 
boﬁ
 
	g_nŸimeout
;

375 
boﬁ
 
	g_˛ór
;

376 
boﬁ
 
	g_Àaveok
;

377 
boﬁ
 
	g_s¸ﬁl
;

378 
boﬁ
 
	g_idlok
;

379 
boﬁ
 
	g_idcok
;

380 
boﬁ
 
	g_immed
;

381 
boﬁ
 
	g_sync
;

382 
boﬁ
 
	g_u£_key∑d
;

383 
	g_dñay
;

385 
ld©
 *
	g_löe
;

388 
NCURSES_SIZE_T
 
	g_ªgt›
;

389 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

392 
	g_∑rx
;

393 
	g_∑ry
;

394 
WINDOW
 *
	g_∑ª¡
;

397 
	spd©


399 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

400 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

401 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

402 } 
	g_∑d
;

404 
NCURSES_SIZE_T
 
	g_yoff£t
;

406 #ifde‡
_XOPEN_SOURCE_EXTENDED


407 
cch¨_t
 
	g_bkg∫d
;

409 
	g_cﬁ‹
;

419 #ifde‡
NCURSES_WGETCH_EVENTS


420 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

422 
	#NCURSES_EVENT_VERSION
 1

	)

428 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

429 
	#_NC_EVENT_FILE
 2

	)

430 
	#_NC_EVENT_FILE_READABLE
 2

	)

432 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

433 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

438 
	gty≥
;

441 
	gtimeout_m£c
;

444 
	gÊags
;

445 
	gfd
;

446 
	gªsu…
;

447 } 
	g„v
;

448 } 
	gd©a
;

449 } 
	t_nc_evít
;

453 
	gcou¡
;

454 
	gªsu…_Êags
;

455 
_nc_evít
 *
	gevíts
[1];

456 } 
	t_nc_evíéi°
;

458 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

459 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

471 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

472 
	#__©åibuã__
(
p
Ë

	)

483 #i‚de‡
GCC_PRINTFLIKE


484 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

485 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

487 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

491 #i‚de‡
GCC_SCANFLIKE


492 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

493 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

495 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

499 #i‚def 
GCC_NORETURN


500 
	#GCC_NORETURN


	)

503 #i‚def 
GCC_UNUSED


504 
	#GCC_UNUSED


	)

514 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

515 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

516 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

517 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

518 
NCURSES_EXPORT
(Ë
add°r
 (const *);

519 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

520 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

521 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

522 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

523 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

524 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

525 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

526 
NCURSES_EXPORT
(Ë
baudøã
 ();

527 
NCURSES_EXPORT
(Ë
bìp
 ();

528 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

529 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

530 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

531 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

532 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

533 
NCURSES_EXPORT
(Ë
cbªak
 ();

534 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

535 
NCURSES_EXPORT
(Ë
˛ór
 ();

536 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

537 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

538 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

539 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

540 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

541 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

542 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

543 
NCURSES_EXPORT
(Ë
curs_£t
 ();

544 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

545 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

546 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

547 
NCURSES_EXPORT
(Ë
dñch
 ();

548 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

549 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

550 
NCURSES_EXPORT
(Ë
dñëñn
 ();

551 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

552 
NCURSES_EXPORT
(Ë
doupd©e
 ();

553 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

554 
NCURSES_EXPORT
(Ë
echo
 ();

555 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

556 
NCURSES_EXPORT
(Ë
îa£
 ();

557 
NCURSES_EXPORT
(Ë
ídwö
 ();

558 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

559 
NCURSES_EXPORT
(Ë
fûãr
 ();

560 
NCURSES_EXPORT
(Ë
Êash
 ();

561 
NCURSES_EXPORT
(Ë
Êushöp
 ();

562 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

563 
NCURSES_EXPORT
(Ë
gëch
 ();

564 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

565 
NCURSES_EXPORT
(Ë
gë°r
 (*);

566 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

567 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

568 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

569 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

570 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

571 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

572 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

573 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

574 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

575 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

576 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

577 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

578 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

579 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

580 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

581 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

582 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

583 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

584 
NCURSES_EXPORT
(Ë
ö£π 
 ();

585 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

586 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

587 
NCURSES_EXPORT
(Ë
ö°r
 (*);

588 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

589 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

590 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

591 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

592 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

593 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

594 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

595 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

596 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

597 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

598 
NCURSES_EXPORT
(Ë
move
 (, );

599 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

600 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

601 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

602 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

603 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

604 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

605 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

606 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

607 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

608 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

609 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

610 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

611 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

612 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

613 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

615 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

616 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

617 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

618 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

619 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

620 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

621 
GCC_PRINTFLIKE
(3,4);

622 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

623 
GCC_SCANFLIKE
(3,4);

624 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

625 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

626 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

627 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

628 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

629 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

630 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

631 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

632 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

633 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

634 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

635 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

636 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

637 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

638 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

639 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

640 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

641 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

642 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

643 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

644 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

645 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

646 
GCC_PRINTFLIKE
(4,5);

647 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

648 
GCC_SCANFLIKE
(4,5);

649 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

650 
NCURSES_EXPORT
(Ë
«pms
 ();

651 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

652 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

653 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

654 
NCURSES_EXPORT
(Ë
∆
 ();

655 
NCURSES_EXPORT
(Ë
nocbªak
 ();

656 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

657 
NCURSES_EXPORT
(Ë
n€cho
 ();

658 
NCURSES_EXPORT
(Ë
n⁄l
 ();

659 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

660 
NCURSES_EXPORT
(Ë
n‹aw
 ();

661 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

662 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

663 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

664 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

665 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

666 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

667 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

668 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

669 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

670 
GCC_PRINTFLIKE
(1,2);

671 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

672 
NCURSES_EXPORT
(Ë
qiÊush
 ();

673 
NCURSES_EXPORT
(Ë
øw
 ();

674 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

675 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

676 
NCURSES_EXPORT
(Ë
ª£ây
 ();

677 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

678 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

679 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

680 
NCURSES_EXPORT
(Ë
ßvëty
 ();

681 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

682 
GCC_SCANFLIKE
(1,2);

683 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

684 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

685 
NCURSES_EXPORT
(Ë
s¸l
 ();

686 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

687 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

688 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

689 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

690 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

691 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

692 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

693 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

694 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

695 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

696 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

697 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

698 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

699 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

700 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

701 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

702 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

703 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

704 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

705 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

706 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

707 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

708 
NCURSES_EXPORT
(Ë
°™dout
 ();

709 
NCURSES_EXPORT
(Ë
°™díd
 ();

710 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

711 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

712 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

713 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

714 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

715 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

716 
NCURSES_EXPORT
(Ë
timeout
 ();

717 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

718 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

719 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

720 
NCURSES_EXPORT
(Ë
ungëch
 ();

721 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

722 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

723 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

724 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, (*)());

725 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

726 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

727 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

728 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

729 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

730 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

731 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

732 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

733 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

734 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

735 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

736 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

737 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

738 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

739 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

740 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

741 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

742 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

743 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

744 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

745 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

746 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

747 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

748 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

749 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

750 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

751 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

752 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

753 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

754 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

755 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

756 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

757 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

758 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

759 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

760 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

761 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

762 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

763 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

764 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

765 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

766 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

767 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

768 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

769 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

770 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

771 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

772 
GCC_PRINTFLIKE
(2,3);

773 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

774 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

775 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

776 
GCC_SCANFLIKE
(2,3);

777 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

778 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

779 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

780 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

781 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

782 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

783 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

784 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

785 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

790 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

791 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

792 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

793 
NCURSES_EXPORT
(Ë
puç
 (const *);

795 #i‡
NCURSES_TPARM_VARARGS


796 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

798 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

799 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

805 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

806 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

807 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

809 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

810 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

811 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

812 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

813 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

818 #i‚de‡
_XOPEN_SOURCE_EXTENDED


819 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

826 #unde‡
NCURSES_EXT_FUNCS


827 
	#NCURSES_EXT_FUNCS
 20090207

	)

828 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

829 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

830 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

831 
NCURSES_EXPORT
(*Ë
keybound
 (, );

832 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

833 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

834 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

835 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

836 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

837 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

838 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

839 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

840 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

841 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

842 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

843 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

844 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

845 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

846 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

847 
NCURSES_EXPORT
(Ë
nofûãr
();

853 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

854 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

855 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

856 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

857 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

858 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

859 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

860 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

861 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

862 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

863 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

864 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

867 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

872 
	#NCURSES_ATTR_SHIFT
 8

	)

873 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

875 
	#A_NORMAL
 (1UL - 1UL)

	)

876 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

877 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

878 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

879 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

880 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

881 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

882 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

883 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

884 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

885 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

886 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

887 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

888 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

889 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

890 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

891 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

892 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

893 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

905 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

906 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

907 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

908 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

910 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

911 i‡(
	`is_Àaveok
(
√ws¸
)) \

912 (
y
Ë(
x
) = -1; \

914 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

916 } 0)

	)

918 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

919 i‡((
y
Ë=-1 && (
x
) == -1) \

920 
	`Àaveok
(
√ws¸
, 
TRUE
); \

922 
	`Àaveok
(
√ws¸
, 
FALSE
); \

923 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

926 } 0)

	)

928 #i‚de‡
NCURSES_NOMACROS


934 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

935 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

937 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

939 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

940 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

941 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

942 
	#¸mode
(Ë
	`cbªak
()

	)

943 
	#no¸mode
(Ë
	`nocbªak
()

	)

944 
	#gëtmode
()

	)

947 #i‡!
NCURSES_OPAQUE


948 
	#gë©ås
(
wö
Ë((wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

949 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

950 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

951 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

952 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

953 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

954 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

955 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

956 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

959 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

960 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

962 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

963 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

965 #i‡!
NCURSES_OPAQUE


966 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

967 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

968 (
wö
)->
_©ås
 = (
©
))

	)

970 
	#w©å£t
(
wö
,
©
Ë((wö)->
_©ås
 = (©))

	)

974 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

976 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

977 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

978 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

980 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

981 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

982 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

983 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

985 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

986 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

987 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

989 #i‡!
NCURSES_OPAQUE


990 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

993 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

994 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

999 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1000 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1006 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1007 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1008 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1009 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1010 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1011 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1012 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1013 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1014 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1015 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1016 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1017 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1018 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1019 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1020 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1021 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1022 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1023 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1024 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1025 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1026 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1027 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1028 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1029 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1030 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1031 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1032 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1033 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1034 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1035 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1036 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1037 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1038 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1039 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1040 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1041 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1042 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1043 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1044 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1045 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1046 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1047 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1048 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1049 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1055 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1056 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1057 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1058 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1059 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1060 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1061 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1062 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1063 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1064 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1065 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1066 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1067 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1068 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1069 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1070 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1071 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1072 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1073 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1074 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1076 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1077 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1078 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1079 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1080 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1081 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1082 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1083 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1084 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1085 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1086 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1087 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1088 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1089 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1090 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1091 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1092 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1093 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1094 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1095 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1100 #i‡!
NCURSES_OPAQUE


1101 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1104 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1105 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1107 #i‡!
NCURSES_OPAQUE


1108 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1109 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1110 (
wö
)->
_cﬁ‹
 = (
p
), \

1111 
OK
)

	)

1112 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1113 ()((
p
Ë!(*)0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1114 
OK
)

	)

1116 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1117 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1118 ()((
p
Ë!(*)0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1119 
OK
)

	)

1129 
	#vw_¥ötw
 
vw¥ötw


	)

1130 
	#vw_sˇnw
 
vwsˇnw


	)

1136 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1137 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1144 #i‡!
NCURSES_OPAQUE


1145 
	#is_˛óªd
(
wö
Ë((wö)->
_˛ór
)

	)

1146 
	#is_idcok
(
wö
Ë((wö)->
_idcok
)

	)

1147 
	#is_idlok
(
wö
Ë((wö)->
_idlok
)

	)

1148 
	#is_immedok
(
wö
Ë((wö)->
_immed
)

	)

1149 
	#is_key∑d
(
wö
Ë((wö)->
_u£_key∑d
)

	)

1150 
	#is_Àaveok
(
wö
Ë((wö)->
_Àaveok
)

	)

1151 
	#is_nodñay
(
wö
Ë((wö)->
_dñay
 =0)

	)

1152 
	#is_nŸimeout
(
wö
Ë((wö)->
_nŸimeout
)

	)

1153 
	#is_s¸ﬁlok
(
wö
Ë((wö)->
_s¸ﬁl
)

	)

1154 
	#is_syncok
(
wö
Ë((wö)->
_sync
)

	)

1155 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1156 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1172 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1173 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1174 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1175 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1176 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1177 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1178 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1179 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1180 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1181 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1183 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1184 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1185 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1186 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1187 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1188 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1189 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1190 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1191 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1192 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1196 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1197 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1198 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1199 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1200 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1201 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1202 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1203 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1204 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1205 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1221 
	#KEY_CODE_YES
 0400

	)

1222 
	#KEY_MIN
 0401

	)

1223 
	#KEY_BREAK
 0401

	)

1224 
	#KEY_SRESET
 0530

	)

1225 
	#KEY_RESET
 0531

	)

1229 
	#KEY_DOWN
 0402

	)

1230 
	#KEY_UP
 0403

	)

1231 
	#KEY_LEFT
 0404

	)

1232 
	#KEY_RIGHT
 0405

	)

1233 
	#KEY_HOME
 0406

	)

1234 
	#KEY_BACKSPACE
 0407

	)

1235 
	#KEY_F0
 0410

	)

1236 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1237 
	#KEY_DL
 0510

	)

1238 
	#KEY_IL
 0511

	)

1239 
	#KEY_DC
 0512

	)

1240 
	#KEY_IC
 0513

	)

1241 
	#KEY_EIC
 0514

	)

1242 
	#KEY_CLEAR
 0515

	)

1243 
	#KEY_EOS
 0516

	)

1244 
	#KEY_EOL
 0517

	)

1245 
	#KEY_SF
 0520

	)

1246 
	#KEY_SR
 0521

	)

1247 
	#KEY_NPAGE
 0522

	)

1248 
	#KEY_PPAGE
 0523

	)

1249 
	#KEY_STAB
 0524

	)

1250 
	#KEY_CTAB
 0525

	)

1251 
	#KEY_CATAB
 0526

	)

1252 
	#KEY_ENTER
 0527

	)

1253 
	#KEY_PRINT
 0532

	)

1254 
	#KEY_LL
 0533

	)

1255 
	#KEY_A1
 0534

	)

1256 
	#KEY_A3
 0535

	)

1257 
	#KEY_B2
 0536

	)

1258 
	#KEY_C1
 0537

	)

1259 
	#KEY_C3
 0540

	)

1260 
	#KEY_BTAB
 0541

	)

1261 
	#KEY_BEG
 0542

	)

1262 
	#KEY_CANCEL
 0543

	)

1263 
	#KEY_CLOSE
 0544

	)

1264 
	#KEY_COMMAND
 0545

	)

1265 
	#KEY_COPY
 0546

	)

1266 
	#KEY_CREATE
 0547

	)

1267 
	#KEY_END
 0550

	)

1268 
	#KEY_EXIT
 0551

	)

1269 
	#KEY_FIND
 0552

	)

1270 
	#KEY_HELP
 0553

	)

1271 
	#KEY_MARK
 0554

	)

1272 
	#KEY_MESSAGE
 0555

	)

1273 
	#KEY_MOVE
 0556

	)

1274 
	#KEY_NEXT
 0557

	)

1275 
	#KEY_OPEN
 0560

	)

1276 
	#KEY_OPTIONS
 0561

	)

1277 
	#KEY_PREVIOUS
 0562

	)

1278 
	#KEY_REDO
 0563

	)

1279 
	#KEY_REFERENCE
 0564

	)

1280 
	#KEY_REFRESH
 0565

	)

1281 
	#KEY_REPLACE
 0566

	)

1282 
	#KEY_RESTART
 0567

	)

1283 
	#KEY_RESUME
 0570

	)

1284 
	#KEY_SAVE
 0571

	)

1285 
	#KEY_SBEG
 0572

	)

1286 
	#KEY_SCANCEL
 0573

	)

1287 
	#KEY_SCOMMAND
 0574

	)

1288 
	#KEY_SCOPY
 0575

	)

1289 
	#KEY_SCREATE
 0576

	)

1290 
	#KEY_SDC
 0577

	)

1291 
	#KEY_SDL
 0600

	)

1292 
	#KEY_SELECT
 0601

	)

1293 
	#KEY_SEND
 0602

	)

1294 
	#KEY_SEOL
 0603

	)

1295 
	#KEY_SEXIT
 0604

	)

1296 
	#KEY_SFIND
 0605

	)

1297 
	#KEY_SHELP
 0606

	)

1298 
	#KEY_SHOME
 0607

	)

1299 
	#KEY_SIC
 0610

	)

1300 
	#KEY_SLEFT
 0611

	)

1301 
	#KEY_SMESSAGE
 0612

	)

1302 
	#KEY_SMOVE
 0613

	)

1303 
	#KEY_SNEXT
 0614

	)

1304 
	#KEY_SOPTIONS
 0615

	)

1305 
	#KEY_SPREVIOUS
 0616

	)

1306 
	#KEY_SPRINT
 0617

	)

1307 
	#KEY_SREDO
 0620

	)

1308 
	#KEY_SREPLACE
 0621

	)

1309 
	#KEY_SRIGHT
 0622

	)

1310 
	#KEY_SRSUME
 0623

	)

1311 
	#KEY_SSAVE
 0624

	)

1312 
	#KEY_SSUSPEND
 0625

	)

1313 
	#KEY_SUNDO
 0626

	)

1314 
	#KEY_SUSPEND
 0627

	)

1315 
	#KEY_UNDO
 0630

	)

1316 
	#KEY_MOUSE
 0631

	)

1317 
	#KEY_RESIZE
 0632

	)

1318 
	#KEY_EVENT
 0633

	)

1320 
	#KEY_MAX
 0777

	)

1327 
	#_XOPEN_CURSES
 1

	)

1329 #ifde‡
_XOPEN_SOURCE_EXTENDED


1331 
NCURSES_EXPORT_VAR
(
cch¨_t
 *Ë
_nc_wacs
;

1333 
	#NCURSES_WACS
(
c
Ë(&
_nc_wacs
[()c])

	)

1335 
	#WACS_BSSB
 
	`NCURSES_WACS
('l')

	)

1336 
	#WACS_SSBB
 
	`NCURSES_WACS
('m')

	)

1337 
	#WACS_BBSS
 
	`NCURSES_WACS
('k')

	)

1338 
	#WACS_SBBS
 
	`NCURSES_WACS
('j')

	)

1339 
	#WACS_SBSS
 
	`NCURSES_WACS
('u')

	)

1340 
	#WACS_SSSB
 
	`NCURSES_WACS
('t')

	)

1341 
	#WACS_SSBS
 
	`NCURSES_WACS
('v')

	)

1342 
	#WACS_BSSS
 
	`NCURSES_WACS
('w')

	)

1343 
	#WACS_BSBS
 
	`NCURSES_WACS
('q')

	)

1344 
	#WACS_SBSB
 
	`NCURSES_WACS
('x')

	)

1345 
	#WACS_SSSS
 
	`NCURSES_WACS
('n')

	)

1347 
	#WACS_ULCORNER
 
WACS_BSSB


	)

1348 
	#WACS_LLCORNER
 
WACS_SSBB


	)

1349 
	#WACS_URCORNER
 
WACS_BBSS


	)

1350 
	#WACS_LRCORNER
 
WACS_SBBS


	)

1351 
	#WACS_RTEE
 
WACS_SBSS


	)

1352 
	#WACS_LTEE
 
WACS_SSSB


	)

1353 
	#WACS_BTEE
 
WACS_SSBS


	)

1354 
	#WACS_TTEE
 
WACS_BSSS


	)

1355 
	#WACS_HLINE
 
WACS_BSBS


	)

1356 
	#WACS_VLINE
 
WACS_SBSB


	)

1357 
	#WACS_PLUS
 
WACS_SSSS


	)

1359 
	#WACS_S1
 
	`NCURSES_WACS
('o'Ë

	)

1360 
	#WACS_S9
 
	`NCURSES_WACS
('s'Ë

	)

1361 
	#WACS_DIAMOND
 
	`NCURSES_WACS
('`'Ë

	)

1362 
	#WACS_CKBOARD
 
	`NCURSES_WACS
('a'Ë

	)

1363 
	#WACS_DEGREE
 
	`NCURSES_WACS
('f'Ë

	)

1364 
	#WACS_PLMINUS
 
	`NCURSES_WACS
('g'Ë

	)

1365 
	#WACS_BULLET
 
	`NCURSES_WACS
('~'Ë

	)

1368 
	#WACS_LARROW
 
	`NCURSES_WACS
(','Ë

	)

1369 
	#WACS_RARROW
 
	`NCURSES_WACS
('+'Ë

	)

1370 
	#WACS_DARROW
 
	`NCURSES_WACS
('.'Ë

	)

1371 
	#WACS_UARROW
 
	`NCURSES_WACS
('-'Ë

	)

1372 
	#WACS_BOARD
 
	`NCURSES_WACS
('h'Ë

	)

1373 
	#WACS_LANTERN
 
	`NCURSES_WACS
('i'Ë

	)

1374 
	#WACS_BLOCK
 
	`NCURSES_WACS
('0'Ë

	)

1377 
	#WACS_S3
 
	`NCURSES_WACS
('p'Ë

	)

1378 
	#WACS_S7
 
	`NCURSES_WACS
('r'Ë

	)

1379 
	#WACS_LEQUAL
 
	`NCURSES_WACS
('y'Ë

	)

1380 
	#WACS_GEQUAL
 
	`NCURSES_WACS
('z'Ë

	)

1381 
	#WACS_PI
 
	`NCURSES_WACS
('{'Ë

	)

1382 
	#WACS_NEQUAL
 
	`NCURSES_WACS
('|'Ë

	)

1383 
	#WACS_STERLING
 
	`NCURSES_WACS
('}'Ë

	)

1394 
NCURSES_EXPORT
(Ë
add_wch
 (c⁄° 
cch¨_t
 *);

1395 
NCURSES_EXPORT
(Ë
add_wchn°r
 (c⁄° 
cch¨_t
 *, );

1396 
NCURSES_EXPORT
(Ë
add_wch°r
 (c⁄° 
cch¨_t
 *);

1397 
NCURSES_EXPORT
(Ë
addnw°r
 (c⁄° 
wch¨_t
 *, );

1398 
NCURSES_EXPORT
(Ë
addw°r
 (c⁄° 
wch¨_t
 *);

1399 
NCURSES_EXPORT
(Ë
bkg∫d
 (c⁄° 
cch¨_t
 *);

1400 
NCURSES_EXPORT
(Ë
bkg∫d£t
 (c⁄° 
cch¨_t
 *);

1401 
NCURSES_EXPORT
(Ë
b‹dî_£t
 (c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1402 
NCURSES_EXPORT
(Ë
box_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, const cchar_t *);

1403 
NCURSES_EXPORT
(Ë
echo_wch¨
 (c⁄° 
cch¨_t
 *);

1404 
NCURSES_EXPORT
(Ë
îa£wch¨
 (
wch¨_t
*);

1405 
NCURSES_EXPORT
(Ë
gë_wch
 (
wöt_t
 *);

1406 
NCURSES_EXPORT
(Ë
gë_w°r
 (
wöt_t
 *);

1407 
NCURSES_EXPORT
(Ë
gëbkg∫d
 (
cch¨_t
 *);

1408 
NCURSES_EXPORT
(Ë
gëcch¨
 (c⁄° 
cch¨_t
 *, 
wch¨_t
*, 
©å_t
*, *, *);

1409 
NCURSES_EXPORT
(Ë
gën_w°r
 (
wöt_t
 *, );

1410 
NCURSES_EXPORT
(Ë
hlöe_£t
 (c⁄° 
cch¨_t
 *, );

1411 
NCURSES_EXPORT
(Ë
ö_wch
 (
cch¨_t
 *);

1412 
NCURSES_EXPORT
(Ë
ö_wchn°r
 (
cch¨_t
 *, );

1413 
NCURSES_EXPORT
(Ë
ö_wch°r
 (
cch¨_t
 *);

1414 
NCURSES_EXPORT
(Ë
önw°r
 (
wch¨_t
 *, );

1415 
NCURSES_EXPORT
(Ë
ös_nw°r
 (c⁄° 
wch¨_t
 *, );

1416 
NCURSES_EXPORT
(Ë
ös_wch
 (c⁄° 
cch¨_t
 *);

1417 
NCURSES_EXPORT
(Ë
ös_w°r
 (c⁄° 
wch¨_t
 *);

1418 
NCURSES_EXPORT
(Ë
öw°r
 (
wch¨_t
 *);

1419 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key_«me
 (
wch¨_t
);

1420 
NCURSES_EXPORT
(Ë
kûlwch¨
 (
wch¨_t
 *);

1421 
NCURSES_EXPORT
(Ë
mvadd_wch
 (, , c⁄° 
cch¨_t
 *);

1422 
NCURSES_EXPORT
(Ë
mvadd_wchn°r
 (, , c⁄° 
cch¨_t
 *, );

1423 
NCURSES_EXPORT
(Ë
mvadd_wch°r
 (, , c⁄° 
cch¨_t
 *);

1424 
NCURSES_EXPORT
(Ë
mvaddnw°r
 (, , c⁄° 
wch¨_t
 *, );

1425 
NCURSES_EXPORT
(Ë
mvaddw°r
 (, , c⁄° 
wch¨_t
 *);

1426 
NCURSES_EXPORT
(Ë
mvgë_wch
 (, , 
wöt_t
 *);

1427 
NCURSES_EXPORT
(Ë
mvgë_w°r
 (, , 
wöt_t
 *);

1428 
NCURSES_EXPORT
(Ë
mvgën_w°r
 (, , 
wöt_t
 *, );

1429 
NCURSES_EXPORT
(Ë
mvhlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1430 
NCURSES_EXPORT
(Ë
mvö_wch
 (, , 
cch¨_t
 *);

1431 
NCURSES_EXPORT
(Ë
mvö_wchn°r
 (, , 
cch¨_t
 *, );

1432 
NCURSES_EXPORT
(Ë
mvö_wch°r
 (, , 
cch¨_t
 *);

1433 
NCURSES_EXPORT
(Ë
mvönw°r
 (, , 
wch¨_t
 *, );

1434 
NCURSES_EXPORT
(Ë
mvös_nw°r
 (, , c⁄° 
wch¨_t
 *, );

1435 
NCURSES_EXPORT
(Ë
mvös_wch
 (, , c⁄° 
cch¨_t
 *);

1436 
NCURSES_EXPORT
(Ë
mvös_w°r
 (, , c⁄° 
wch¨_t
 *);

1437 
NCURSES_EXPORT
(Ë
mvöw°r
 (, , 
wch¨_t
 *);

1438 
NCURSES_EXPORT
(Ë
mvvlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1439 
NCURSES_EXPORT
(Ë
mvwadd_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1440 
NCURSES_EXPORT
(Ë
mvwadd_wchn°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1441 
NCURSES_EXPORT
(Ë
mvwadd_wch°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1442 
NCURSES_EXPORT
(Ë
mvwaddnw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *, );

1443 
NCURSES_EXPORT
(Ë
mvwaddw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1444 
NCURSES_EXPORT
(Ë
mvwgë_wch
 (
WINDOW
 *, , , 
wöt_t
 *);

1445 
NCURSES_EXPORT
(Ë
mvwgë_w°r
 (
WINDOW
 *, , , 
wöt_t
 *);

1446 
NCURSES_EXPORT
(Ë
mvwgën_w°r
 (
WINDOW
 *, , , 
wöt_t
 *, );

1447 
NCURSES_EXPORT
(Ë
mvwhlöe_£t
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1448 
NCURSES_EXPORT
(Ë
mvwö_wch
 (
WINDOW
 *, , , 
cch¨_t
 *);

1449 
NCURSES_EXPORT
(Ë
mvwö_wchn°r
 (
WINDOW
 *, ,, 
cch¨_t
 *,);

1450 
NCURSES_EXPORT
(Ë
mvwö_wch°r
 (
WINDOW
 *, , , 
cch¨_t
 *);

1451 
NCURSES_EXPORT
(Ë
mvwönw°r
 (
WINDOW
 *, , , 
wch¨_t
 *, );

1452 
NCURSES_EXPORT
(Ë
mvwös_nw°r
 (
WINDOW
 *, ,, c⁄° 
wch¨_t
 *,);

1453 
NCURSES_EXPORT
(Ë
mvwös_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1454 
NCURSES_EXPORT
(Ë
mvwös_w°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1455 
NCURSES_EXPORT
(Ë
mvwöw°r
 (
WINDOW
 *, , , 
wch¨_t
 *);

1456 
NCURSES_EXPORT
(Ë
mvwvlöe_£t
 (
WINDOW
 *, ,, c⁄° 
cch¨_t
 *,);

1457 
NCURSES_EXPORT
(Ë
≥cho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1458 
NCURSES_EXPORT
(Ë
£tcch¨
 (
cch¨_t
 *, c⁄° 
wch¨_t
 *, c⁄° 
©å_t
, , const *);

1459 
NCURSES_EXPORT
(Ë
¶k_w£t
 (, c⁄° 
wch¨_t
 *, );

1460 
NCURSES_EXPORT
(
©å_t
Ë
ãrm_©ås
 ();

1461 
NCURSES_EXPORT
(Ë
ungë_wch
 (c⁄° 
wch¨_t
);

1462 
NCURSES_EXPORT
(Ë
vid_©å
 (
©å_t
, , *);

1463 
NCURSES_EXPORT
(Ë
vid_puts
 (
©å_t
, , *, (*)());

1464 
NCURSES_EXPORT
(Ë
vlöe_£t
 (c⁄° 
cch¨_t
 *, );

1465 
NCURSES_EXPORT
(Ë
wadd_wch
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1466 
NCURSES_EXPORT
(Ë
wadd_wchn°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *,);

1467 
NCURSES_EXPORT
(Ë
wadd_wch°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1468 
NCURSES_EXPORT
(Ë
waddnw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *,);

1469 
NCURSES_EXPORT
(Ë
waddw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *);

1470 
NCURSES_EXPORT
(Ë
wbkg∫d
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1471 
NCURSES_EXPORT
(Ë
wbkg∫d£t
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1472 
NCURSES_EXPORT
(Ë
wb‹dî_£t
 (
WINDOW
 *,c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1473 
NCURSES_EXPORT
(Ë
wecho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1474 
NCURSES_EXPORT
(Ë
wgë_wch
 (
WINDOW
 *, 
wöt_t
 *);

1475 
NCURSES_EXPORT
(Ë
wgë_w°r
 (
WINDOW
 *, 
wöt_t
 *);

1476 
NCURSES_EXPORT
(Ë
wgëbkg∫d
 (
WINDOW
 *, 
cch¨_t
 *);

1477 
NCURSES_EXPORT
(Ë
wgën_w°r
 (
WINDOW
 *,
wöt_t
 *, );

1478 
NCURSES_EXPORT
(Ë
whlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1479 
NCURSES_EXPORT
(Ë
wö_wch
 (
WINDOW
 *, 
cch¨_t
 *);

1480 
NCURSES_EXPORT
(Ë
wö_wchn°r
 (
WINDOW
 *, 
cch¨_t
 *, );

1481 
NCURSES_EXPORT
(Ë
wö_wch°r
 (
WINDOW
 *, 
cch¨_t
 *);

1482 
NCURSES_EXPORT
(Ë
wönw°r
 (
WINDOW
 *, 
wch¨_t
 *, );

1483 
NCURSES_EXPORT
(Ë
wös_nw°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *, );

1484 
NCURSES_EXPORT
(Ë
wös_wch
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1485 
NCURSES_EXPORT
(Ë
wös_w°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *);

1486 
NCURSES_EXPORT
(Ë
wöw°r
 (
WINDOW
 *, 
wch¨_t
 *);

1487 
NCURSES_EXPORT
(
wch¨_t
*Ë
wun˘æ
 (
cch¨_t
 *);

1488 
NCURSES_EXPORT
(Ë
wvlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1490 #i‚de‡
NCURSES_NOMACROS


1495 
	#add_wch
(
c
Ë
	`wadd_wch
(
°ds¸
,c)

	)

1496 
	#add_wchn°r
(
°r
,
n
Ë
	`wadd_wchn°r
(
°ds¸
,°r,n)

	)

1497 
	#add_wch°r
(
°r
Ë
	`wadd_wch°r
(
°ds¸
,°r)

	)

1498 
	#addnw°r
(
w°r
,
n
Ë
	`waddnw°r
(
°ds¸
,w°r,n)

	)

1499 
	#addw°r
(
w°r
Ë
	`waddw°r
(
°ds¸
,w°r)

	)

1500 
	#bkg∫d
(
c
Ë
	`wbkg∫d
(
°ds¸
,c)

	)

1501 
	#bkg∫d£t
(
c
Ë
	`wbkg∫d£t
(
°ds¸
,c)

	)

1502 
	#b‹dî_£t
(
l
,
r
,
t
,
b
,
é
,
å
,
bl
,
br
Ë
	`wb‹dî_£t
(
°ds¸
,l,r,t,b,é,å,bl,br)

	)

1503 
	#box_£t
(
w
,
v
,
h
Ë
	`wb‹dî_£t
(w,v,v,h,h,0,0,0,0)

	)

1504 
	#echo_wch¨
(
c
Ë
	`wecho_wch¨
(
°ds¸
,c)

	)

1505 
	#gë_wch
(
c
Ë
	`wgë_wch
(
°ds¸
,c)

	)

1506 
	#gë_w°r
(
t
Ë
	`wgë_w°r
(
°ds¸
,t)

	)

1507 
	#gëbkg∫d
(
wch
Ë
	`wgëbkg∫d
(
°ds¸
,wch)

	)

1508 
	#gën_w°r
(
t
,
n
Ë
	`wgën_w°r
(
°ds¸
,t,n)

	)

1509 
	#hlöe_£t
(
c
,
n
Ë
	`whlöe_£t
(
°ds¸
,c,n)

	)

1510 
	#ö_wch
(
c
Ë
	`wö_wch
(
°ds¸
,c)

	)

1511 
	#ö_wchn°r
(
c
,
n
Ë
	`wö_wchn°r
(
°ds¸
,c,n)

	)

1512 
	#ö_wch°r
(
c
Ë
	`wö_wch°r
(
°ds¸
,c)

	)

1513 
	#önw°r
(
c
,
n
Ë
	`wönw°r
(
°ds¸
,c,n)

	)

1514 
	#ös_nw°r
(
t
,
n
Ë
	`wös_nw°r
(
°ds¸
,t,n)

	)

1515 
	#ös_wch
(
c
Ë
	`wös_wch
(
°ds¸
,c)

	)

1516 
	#ös_w°r
(
t
Ë
	`wös_w°r
(
°ds¸
,t)

	)

1517 
	#öw°r
(
c
Ë
	`wöw°r
(
°ds¸
,c)

	)

1518 
	#vlöe_£t
(
c
,
n
Ë
	`wvlöe_£t
(
°ds¸
,c,n)

	)

1519 
	#wadd_wch°r
(
wö
,
°r
Ë
	`wadd_wchn°r
(wö,°r,-1)

	)

1520 
	#waddw°r
(
wö
,
w°r
Ë
	`waddnw°r
(wö,w°r,-1)

	)

1521 
	#wgë_w°r
(
w
,
t
Ë
	`wgën_w°r
(w,t,-1)

	)

1522 
	#wö_wch°r
(
w
,
c
Ë
	`wö_wchn°r
(w,c,-1)

	)

1523 
	#wös_w°r
(
w
,
t
Ë
	`wös_nw°r
(w,t,-1)

	)

1525 #i‡!
NCURSES_OPAQUE


1526 
	#wgëbkg∫d
(
wö
,
wch
Ë(*wch = wö->
_bkg∫d
, 
OK
)

	)

1529 
	#mvadd_wch
(
y
,
x
,
c
Ë
	`mvwadd_wch
(
°ds¸
,y,x,c)

	)

1530 
	#mvadd_wchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwadd_wchn°r
(
°ds¸
,y,x,s,n)

	)

1531 
	#mvadd_wch°r
(
y
,
x
,
s
Ë
	`mvwadd_wch°r
(
°ds¸
,y,x,s)

	)

1532 
	#mvaddnw°r
(
y
,
x
,
w°r
,
n
Ë
	`mvwaddnw°r
(
°ds¸
,y,x,w°r,n)

	)

1533 
	#mvaddw°r
(
y
,
x
,
w°r
Ë
	`mvwaddw°r
(
°ds¸
,y,x,w°r)

	)

1534 
	#mvgë_wch
(
y
,
x
,
c
Ë
	`mvwgë_wch
(
°ds¸
,y,x,c)

	)

1535 
	#mvgë_w°r
(
y
,
x
,
t
Ë
	`mvwgë_w°r
(
°ds¸
,y,x,t)

	)

1536 
	#mvgën_w°r
(
y
,
x
,
t
,
n
Ë
	`mvwgën_w°r
(
°ds¸
,y,x,t,n)

	)

1537 
	#mvhlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe_£t
(
°ds¸
,y,x,c,n)

	)

1538 
	#mvö_wch
(
y
,
x
,
c
Ë
	`mvwö_wch
(
°ds¸
,y,x,c)

	)

1539 
	#mvö_wchn°r
(
y
,
x
,
c
,
n
Ë
	`mvwö_wchn°r
(
°ds¸
,y,x,c,n)

	)

1540 
	#mvö_wch°r
(
y
,
x
,
c
Ë
	`mvwö_wch°r
(
°ds¸
,y,x,c)

	)

1541 
	#mvönw°r
(
y
,
x
,
c
,
n
Ë
	`mvwönw°r
(
°ds¸
,y,x,c,n)

	)

1542 
	#mvös_nw°r
(
y
,
x
,
t
,
n
Ë
	`mvwös_nw°r
(
°ds¸
,y,x,t,n)

	)

1543 
	#mvös_wch
(
y
,
x
,
c
Ë
	`mvwös_wch
(
°ds¸
,y,x,c)

	)

1544 
	#mvös_w°r
(
y
,
x
,
t
Ë
	`mvwös_w°r
(
°ds¸
,y,x,t)

	)

1545 
	#mvöw°r
(
y
,
x
,
c
Ë
	`mvwöw°r
(
°ds¸
,y,x,c)

	)

1546 
	#mvvlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe_£t
(
°ds¸
,y,x,c,n)

	)

1548 
	#mvwadd_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch
(wö,c))

	)

1549 
	#mvwadd_wchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wchn°r
(wö,s,n))

	)

1550 
	#mvwadd_wch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch°r
(wö,s))

	)

1551 
	#mvwaddnw°r
(
wö
,
y
,
x
,
w°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddnw°r
(wö,w°r,n))

	)

1552 
	#mvwaddw°r
(
wö
,
y
,
x
,
w°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddw°r
(wö,w°r))

	)

1553 
	#mvwgë_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_wch
(wö,c))

	)

1554 
	#mvwgë_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_w°r
(wö,t))

	)

1555 
	#mvwgën_w°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën_w°r
(wö,t,n))

	)

1556 
	#mvwhlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe_£t
(wö,c,n))

	)

1557 
	#mvwö_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch
(wö,c))

	)

1558 
	#mvwö_wchn°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wchn°r
(wö,c,n))

	)

1559 
	#mvwö_wch°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch°r
(wö,c))

	)

1560 
	#mvwönw°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wönw°r
(wö,c,n))

	)

1561 
	#mvwös_nw°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_nw°r
(wö,t,n))

	)

1562 
	#mvwös_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_wch
(wö,c))

	)

1563 
	#mvwös_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_w°r
(wö,t))

	)

1564 
	#mvwöw°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöw°r
(wö,c))

	)

1565 
	#mvwvlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe_£t
(wö,c,n))

	)

1569 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1570 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswbuf
(c⁄° 
wch¨_t
 *);

1571 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswibuf
(c⁄° 
wöt_t
 *);

1584 #i‡
NCURSES_MOUSE_VERSION
 > 1

1585 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1587 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1590 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1591 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1592 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1593 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1594 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1595 
	#NCURSES_RESERVED_EVENT
 040L

	)

1598 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1599 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1600 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1601 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1602 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1604 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1605 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1606 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1607 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1608 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1610 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1611 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1612 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1613 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1614 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1616 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1617 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1618 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1619 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1620 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1626 #i‡
NCURSES_MOUSE_VERSION
 > 1

1628 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1629 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1630 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1631 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1632 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1634 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1635 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1636 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1637 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1641 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1642 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1643 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1644 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1646 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1647 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1648 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1649 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1653 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1656 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1657 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1658 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1659 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1660 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1661 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1665 
	gid
;

1666 
	gx
, 
	gy
, 
	gz
;

1667 
mmask_t
 
	gb°©e
;

1669 
	tMEVENT
;

1671 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
 ();

1672 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1673 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1674 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1675 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1676 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1677 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1678 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1680 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1684 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1685 
NCURSES_EXPORT
(Ë
has_key
 ();

1689 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1690 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1691 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1692 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1693 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1694 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1695 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1696 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1697 #ifde‡
_XOPEN_SOURCE_EXTENDED


1698 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1699 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1700 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1701 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1703 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1704 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1706 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1707 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1710 
	#TRACE_DISABLE
 0x0000

	)

1711 
	#TRACE_TIMES
 0x0001

	)

1712 
	#TRACE_TPUTS
 0x0002

	)

1713 
	#TRACE_UPDATE
 0x0004

	)

1714 
	#TRACE_MOVE
 0x0008

	)

1715 
	#TRACE_CHARPUT
 0x0010

	)

1716 
	#TRACE_ORDINARY
 0x001F

	)

1717 
	#TRACE_CALLS
 0x0020

	)

1718 
	#TRACE_VIRTPUT
 0x0040

	)

1719 
	#TRACE_IEVENT
 0x0080

	)

1720 
	#TRACE_BITS
 0x0100

	)

1721 
	#TRACE_ICALLS
 0x0200

	)

1722 
	#TRACE_CCALLS
 0x0400

	)

1723 
	#TRACE_DATABASE
 0x0800

	)

1724 
	#TRACE_ATTRS
 0x1000

	)

1726 
	#TRACE_SHIFT
 13

	)

1727 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1729 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1730 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1731 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1732 
	#OPTIMIZE_MVCUR
 0x01

	)

1733 
	#OPTIMIZE_HASHMAP
 0x02

	)

1734 
	#OPTIMIZE_SCROLL
 0x04

	)

1735 
	#OPTIMIZE_ALL
 0xf‡

	)

1738 #ifde‡
__˝lu•lus


1740 #i‚de‡
NCURSES_NOMACROS


1743 #unde‡
box


1744 #unde‡
˛ór


1745 #unde‡
îa£


1746 #unde‡
move


1747 #unde‡
ª‰esh


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_EACCESS
 0x200

	)

122 
f˙é
 (
__fd
, 
__cmd
, ...);

130 #i‚de‡
__USE_FILE_OFFSET64


131 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

133 #ifde‡
__REDIRECT


134 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

135 
	`__n⁄nuŒ
 ((1));

137 
	#›í
 
›í64


	)

140 #ifde‡
__USE_LARGEFILE64


141 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

144 #ifde‡
__USE_ATFILE


154 #i‚de‡
__USE_FILE_OFFSET64


155 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

156 
	`__n⁄nuŒ
 ((2));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

160 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

162 
	#›í©
 
›í©64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

167 
	`__n⁄nuŒ
 ((2));

176 #i‚de‡
__USE_FILE_OFFSET64


177 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

179 #ifde‡
__REDIRECT


180 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

181 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

183 
	#¸ót
 
¸ót64


	)

186 #ifde‡
__USE_LARGEFILE64


187 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

190 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

191 && !
deföed
 
__USE_POSIX
))

200 
	#F_ULOCK
 0

	)

201 
	#F_LOCK
 1

	)

202 
	#F_TLOCK
 2

	)

203 
	#F_TEST
 3

	)

205 #i‚de‡
__USE_FILE_OFFSET64


206 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

208 #ifde‡
__REDIRECT


209 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

211 
	#lockf
 
lockf64


	)

214 #ifde‡
__USE_LARGEFILE64


215 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

219 #ifde‡
__USE_XOPEN2K


222 #i‚de‡
__USE_FILE_OFFSET64


223 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

224 
__advi£
Ë
__THROW
;

226 #ifde‡
__REDIRECT_NTH


227 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

228 
__off64_t
 
__Àn
, 
__advi£
),

229 
posix_Ádvi£64
);

231 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

234 #ifde‡
__USE_LARGEFILE64


235 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

236 
__advi£
Ë
__THROW
;

244 #i‚de‡
__USE_FILE_OFFSET64


245 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

247 #ifde‡
__REDIRECT


248 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

249 
__off64_t
 
__Àn
),

250 
posix_ÁŒoˇã64
);

252 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

262 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

263 && 
deföed
 
__va_¨g_∑ck_Àn


264 
	~<bôs/f˙é2.h
>

267 
__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/libintl.h

21 #i‚de‡
_LIBINTL_H


22 
	#_LIBINTL_H
 1

	)

24 
	~<„©uªs.h
>

28 
	#__USE_GNU_GETTEXT
 1

	)

32 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

33 ((
maj‹
Ë=0 ? 1 : -1)

	)

35 
__BEGIN_DECLS


40 *
	$gëãxt
 (
__c⁄°
 *
__msgid
)

41 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

45 *
	$dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

46 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

47 *
	$__dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

48 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

52 *
	$dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

53 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

54 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

55 *
	$__dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

56 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

57 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

62 *
	$ngëãxt
 (
__c⁄°
 *
__msgid1
, __c⁄° *
__msgid2
,

63 
__n
)

64 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

68 *
	$dngëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

69 
__c⁄°
 *
__msgid2
, 
__n
)

70 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

74 *
	$d˙gëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

75 
__c⁄°
 *
__msgid2
, 
__n
,

76 
__ˇãg‹y
)

77 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

83 *
	$ãxtdomaö
 (
__c⁄°
 *
__domaö«me
Ë
__THROW
;

87 *
	$bödãxtdomaö
 (
__c⁄°
 *
__domaö«me
,

88 
__c⁄°
 *
__dú«me
Ë
__THROW
;

92 *
	$böd_ãxtdomaö_code£t
 (
__c⁄°
 *
__domaö«me
,

93 
__c⁄°
 *
__code£t
Ë
__THROW
;

97 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


100 
	#__√ed_NULL


	)

101 
	~<°ddef.h
>

104 
	~<loˇÀ.h
>

110 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

112 
	#dgëãxt
(
domaö«me
, 
msgid
) \

113 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

115 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

117 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

118 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

122 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	#__mÆloc_±r_t
 *

	)

30 
	#__mÆloc_size_t
 
size_t


	)

31 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

33 #ifde‡
__GNUC__


35 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

38 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

42 
	#__MALLOC_P
(
¨gs
Ë
	)
args

43 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

48 
__BEGIN_DECLS


51 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

54 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

55 
__©åibuã_mÆloc__
 
__wur
;

62 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

63 
__©åibuã_w¨n_unu£d_ªsu…__
;

66 
‰ì
 
__MALLOC_P
 ((*
__±r
));

69 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

72 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

73 
__©åibuã_mÆloc__
 
__wur
;

76 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

77 
__©åibuã_mÆloc__
 
__wur
;

81 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

82 
__©åibuã_mÆloc__
 
__wur
;

86 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

89 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

90 
__©åibuã_mÆloc__
;

94 
	smÆlöfo
 {

95 
	m¨ía
;

96 
	m‹dblks
;

97 
	msmblks
;

98 
	mhblks
;

99 
	mhblkhd
;

100 
	musmblks
;

101 
	mfsmblks
;

102 
	mu‹dblks
;

103 
	mf‹dblks
;

104 
	mkìpco°
;

108 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

111 #i‚de‡
M_MXFAST


112 
	#M_MXFAST
 1

	)

114 #i‚de‡
M_NLBLKS


115 
	#M_NLBLKS
 2

	)

117 #i‚de‡
M_GRAIN


118 
	#M_GRAIN
 3

	)

120 #i‚de‡
M_KEEP


121 
	#M_KEEP
 4

	)

125 
	#M_TRIM_THRESHOLD
 -1

	)

126 
	#M_TOP_PAD
 -2

	)

127 
	#M_MMAP_THRESHOLD
 -3

	)

128 
	#M_MMAP_MAX
 -4

	)

129 
	#M_CHECK_ACTION
 -5

	)

130 
	#M_PERTURB
 -6

	)

131 
	#M_ARENA_TEST
 -7

	)

132 
	#M_ARENA_MAX
 -8

	)

135 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

139 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

143 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

146 
mÆloc_°©s
 
__MALLOC_P
 (());

149 
mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
);

152 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

156 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

161 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

163 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

164 
__c⁄°
 
__mÆloc_±r_t
));

165 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

166 
__c⁄°
 
__mÆloc_±r_t
));

167 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

168 
__c⁄°
 
__mÆloc_±r_t
));

169 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

170 
size_t
 
__size
,

171 
__c⁄°
 
__mÆloc_±r_t
));

172 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

175 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

178 
__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

283 #i‚de‡
__FAST_MATH__


284 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

289 #ifdef 
__USE_MISC


293 
_IEEE_
 = -1,

294 
_SVID_
,

295 
_XOPEN_
,

296 
_POSIX_
,

297 
_ISOC_


298 } 
	t_LIB_VERSION_TYPE
;

303 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

307 #ifde‡
__USE_SVID


313 #ifde‡
__˝lu•lus


314 
__ex˚±i⁄


316 
ex˚±i⁄


319 
ty≥
;

320 *
«me
;

321 
¨g1
;

322 
¨g2
;

323 
ªtvÆ
;

324 
	}
};

326 #ifde‡
__˝lu•lus


327 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

329 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

332 
	#X_TLOSS
 1.41484755040568800000e+16

	)

335 
	#DOMAIN
 1

	)

336 
	#SING
 2

	)

337 
	#OVERFLOW
 3

	)

338 
	#UNDERFLOW
 4

	)

339 
	#TLOSS
 5

	)

340 
	#PLOSS
 6

	)

343 
	#HUGE
 3.40282347e+38F

	)

347 #ifde‡
__USE_XOPEN


349 
	#MAXFLOAT
 3.40282347e+38F

	)

356 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


357 
	#M_E
 2.7182818284590452354

	)

358 
	#M_LOG2E
 1.4426950408889634074

	)

359 
	#M_LOG10E
 0.43429448190325182765

	)

360 
	#M_LN2
 0.69314718055994530942

	)

361 
	#M_LN10
 2.30258509299404568402

	)

362 
	#M_PI
 3.14159265358979323846

	)

363 
	#M_PI_2
 1.57079632679489661923

	)

364 
	#M_PI_4
 0.78539816339744830962

	)

365 
	#M_1_PI
 0.31830988618379067154

	)

366 
	#M_2_PI
 0.63661977236758134308

	)

367 
	#M_2_SQRTPI
 1.12837916709551257390

	)

368 
	#M_SQRT2
 1.41421356237309504880

	)

369 
	#M_SQRT1_2
 0.70710678118654752440

	)

375 #ifde‡
__USE_GNU


376 
	#M_El
 2.7182818284590452353602874713526625L

	)

377 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

378 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

379 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

380 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

381 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

382 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

383 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

384 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

385 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

386 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

387 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

388 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

395 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


396 
	#__NO_MATH_INLINES
 1

	)

399 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

406 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

407 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

408 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

409 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

410 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

411 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

415 #ifde‡
__USE_EXTERN_INLINES


416 
	~<bôs/m©hölöe.h
>

419 #ifde‡
__USE_ISOC99


423 #i‚de‡
isgª©î


424 
	#isgª©î
(
x
, 
y
) \

425 (
__exãnsi⁄__
 \

426 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

427 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

431 #i‚de‡
isgª©îequÆ


432 
	#isgª©îequÆ
(
x
, 
y
) \

433 (
__exãnsi⁄__
 \

434 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

435 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

439 #i‚de‡
i¶ess


440 
	#i¶ess
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

447 #i‚de‡
i¶es£quÆ


448 
	#i¶es£quÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

455 #i‚de‡
i¶essgª©î


456 
	#i¶essgª©î
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

463 #i‚de‡
isun‹dîed


464 
	#isun‹dîed
(
u
, 
v
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

467 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

472 
	g__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/ncurses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 7

	)

46 
	#NCURSES_VERSION_PATCH
 20090207

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.7"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST


	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #unde‡
NCURSES_SIZE_T


110 
	#NCURSES_SIZE_T
 

	)

115 #unde‡
NCURSES_TPARM_VARARGS


116 
	#NCURSES_TPARM_VARARGS
 1

	)

123 #unde‡
NCURSES_CH_T


124 
	#NCURSES_CH_T
 
cch¨_t


	)

126 #i‡0 && 
deföed
(
_LP64
)

127 
	tchty≥
;

128 
	tmmask_t
;

130 
	tchty≥
;

131 
	tmmask_t
;

134 
	~<°dio.h
>

135 
	~<un˘æ.h
>

136 
	~<°d¨g.h
>

137 #ifde‡
_XOPEN_SOURCE_EXTENDED


138 
	~<°ddef.h
>

153 #unde‡
TRUE


154 
	#TRUE
 1

	)

156 #unde‡
FALSE


157 
	#FALSE
 0

	)

159 
	tNCURSES_BOOL
;

161 #i‡
deföed
(
__˝lu•lus
)

164 
	#NCURSES_BOOL
 
boﬁ


	)

168 #i‡
NCURSES_ENABLE_STDBOOL_H


169 
	~<°dboﬁ.h
>

171 
	#NCURSES_BOOL
 
boﬁ


	)

174 #unde‡
boﬁ


175 
	#boﬁ
 
NCURSES_BOOL


	)

180 #ifde‡
__˝lu•lus


182 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

184 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

191 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

192 
	#WA_NORMAL
 
A_NORMAL


	)

193 
	#WA_STANDOUT
 
A_STANDOUT


	)

194 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

195 
	#WA_REVERSE
 
A_REVERSE


	)

196 
	#WA_BLINK
 
A_BLINK


	)

197 
	#WA_DIM
 
A_DIM


	)

198 
	#WA_BOLD
 
A_BOLD


	)

199 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

200 
	#WA_INVIS
 
A_INVIS


	)

201 
	#WA_PROTECT
 
A_PROTECT


	)

202 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

203 
	#WA_LEFT
 
A_LEFT


	)

204 
	#WA_LOW
 
A_LOW


	)

205 
	#WA_RIGHT
 
A_RIGHT


	)

206 
	#WA_TOP
 
A_TOP


	)

207 
	#WA_VERTICAL
 
A_VERTICAL


	)

210 
	#COLOR_BLACK
 0

	)

211 
	#COLOR_RED
 1

	)

212 
	#COLOR_GREEN
 2

	)

213 
	#COLOR_YELLOW
 3

	)

214 
	#COLOR_BLUE
 4

	)

215 
	#COLOR_MAGENTA
 5

	)

216 
	#COLOR_CYAN
 6

	)

217 
	#COLOR_WHITE
 7

	)

222 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

223 
	#acs_m≠
 (
	`_nc_acs_m≠
())

	)

225 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

228 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

231 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

232 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

233 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

234 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

235 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

236 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

237 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

238 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

239 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

240 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

241 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

242 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

243 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

244 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

245 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

246 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

247 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

248 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

250 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

251 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

252 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

253 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

254 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

255 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

256 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

262 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

263 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

264 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

265 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

266 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

267 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

268 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

276 
	#ACS_BSSB
 
ACS_ULCORNER


	)

277 
	#ACS_SSBB
 
ACS_LLCORNER


	)

278 
	#ACS_BBSS
 
ACS_URCORNER


	)

279 
	#ACS_SBBS
 
ACS_LRCORNER


	)

280 
	#ACS_SBSS
 
ACS_RTEE


	)

281 
	#ACS_SSSB
 
ACS_LTEE


	)

282 
	#ACS_SSBS
 
ACS_BTEE


	)

283 
	#ACS_BSSS
 
ACS_TTEE


	)

284 
	#ACS_BSBS
 
ACS_HLINE


	)

285 
	#ACS_SBSB
 
ACS_VLINE


	)

286 
	#ACS_SSSS
 
ACS_PLUS


	)

288 #unde‡
ERR


289 
	#ERR
 (-1)

	)

291 #unde‡
OK


292 
	#OK
 (0)

	)

295 
	#_SUBWIN
 0x01

	)

296 
	#_ENDLINE
 0x02

	)

297 
	#_FULLWIN
 0x04

	)

298 
	#_SCROLLWIN
 0x08

	)

299 
	#_ISPAD
 0x10

	)

300 
	#_HASMOVED
 0x20

	)

301 
	#_WRAPPED
 0x40

	)

307 
	#_NOCHANGE
 -1

	)

313 
	#_NEWINDEX
 -1

	)

315 
s¸ìn
 
	tSCREEN
;

316 
_wö_°
 
	tWINDOW
;

318 
chty≥
 
	t©å_t
;

320 #ifde‡
_XOPEN_SOURCE_EXTENDED


323 #ifde‡
mbÀn


324 #unde‡
mbÀn


326 
	~<libutf8.h
>

330 
	~<wch¨.h
>

334 
	twch¨_t1
;

338 
	twöt_t1
;

341 
	#CCHARW_MAX
 5

	)

344 
©å_t
 
	g©å
;

345 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

347 #unde‡
NCURSES_EXT_COLORS


348 
	#NCURSES_EXT_COLORS
 20090207

	)

349 
	gext_cﬁ‹
;

352 
	tcch¨_t
;

356 #i‡!
NCURSES_OPAQUE


357 
	gld©
;

359 
	s_wö_°


361 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

364 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

365 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

367 
	g_Êags
;

370 
©å_t
 
	g_©ås
;

371 
chty≥
 
	g_bkgd
;

374 
boﬁ
 
	g_nŸimeout
;

375 
boﬁ
 
	g_˛ór
;

376 
boﬁ
 
	g_Àaveok
;

377 
boﬁ
 
	g_s¸ﬁl
;

378 
boﬁ
 
	g_idlok
;

379 
boﬁ
 
	g_idcok
;

380 
boﬁ
 
	g_immed
;

381 
boﬁ
 
	g_sync
;

382 
boﬁ
 
	g_u£_key∑d
;

383 
	g_dñay
;

385 
ld©
 *
	g_löe
;

388 
NCURSES_SIZE_T
 
	g_ªgt›
;

389 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

392 
	g_∑rx
;

393 
	g_∑ry
;

394 
WINDOW
 *
	g_∑ª¡
;

397 
	spd©


399 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

400 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

401 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

402 } 
	g_∑d
;

404 
NCURSES_SIZE_T
 
	g_yoff£t
;

406 #ifde‡
_XOPEN_SOURCE_EXTENDED


407 
cch¨_t
 
	g_bkg∫d
;

409 
	g_cﬁ‹
;

419 #ifde‡
NCURSES_WGETCH_EVENTS


420 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

422 
	#NCURSES_EVENT_VERSION
 1

	)

428 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

429 
	#_NC_EVENT_FILE
 2

	)

430 
	#_NC_EVENT_FILE_READABLE
 2

	)

432 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

433 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

438 
	gty≥
;

441 
	gtimeout_m£c
;

444 
	gÊags
;

445 
	gfd
;

446 
	gªsu…
;

447 } 
	g„v
;

448 } 
	gd©a
;

449 } 
	t_nc_evít
;

453 
	gcou¡
;

454 
	gªsu…_Êags
;

455 
_nc_evít
 *
	gevíts
[1];

456 } 
	t_nc_evíéi°
;

458 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

459 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

471 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

472 
	#__©åibuã__
(
p
Ë

	)

483 #i‚de‡
GCC_PRINTFLIKE


484 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

485 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

487 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

491 #i‚de‡
GCC_SCANFLIKE


492 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

493 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

495 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

499 #i‚def 
GCC_NORETURN


500 
	#GCC_NORETURN


	)

503 #i‚def 
GCC_UNUSED


504 
	#GCC_UNUSED


	)

514 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

515 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

516 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

517 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

518 
NCURSES_EXPORT
(Ë
add°r
 (const *);

519 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

520 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

521 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

522 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

523 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

524 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

525 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

526 
NCURSES_EXPORT
(Ë
baudøã
 ();

527 
NCURSES_EXPORT
(Ë
bìp
 ();

528 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

529 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

530 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

531 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

532 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

533 
NCURSES_EXPORT
(Ë
cbªak
 ();

534 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

535 
NCURSES_EXPORT
(Ë
˛ór
 ();

536 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

537 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

538 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

539 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

540 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

541 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

542 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

543 
NCURSES_EXPORT
(Ë
curs_£t
 ();

544 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

545 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

546 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

547 
NCURSES_EXPORT
(Ë
dñch
 ();

548 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

549 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

550 
NCURSES_EXPORT
(Ë
dñëñn
 ();

551 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

552 
NCURSES_EXPORT
(Ë
doupd©e
 ();

553 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

554 
NCURSES_EXPORT
(Ë
echo
 ();

555 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

556 
NCURSES_EXPORT
(Ë
îa£
 ();

557 
NCURSES_EXPORT
(Ë
ídwö
 ();

558 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

559 
NCURSES_EXPORT
(Ë
fûãr
 ();

560 
NCURSES_EXPORT
(Ë
Êash
 ();

561 
NCURSES_EXPORT
(Ë
Êushöp
 ();

562 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

563 
NCURSES_EXPORT
(Ë
gëch
 ();

564 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

565 
NCURSES_EXPORT
(Ë
gë°r
 (*);

566 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

567 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

568 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

569 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

570 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

571 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

572 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

573 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

574 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

575 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

576 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

577 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

578 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

579 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

580 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

581 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

582 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

583 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

584 
NCURSES_EXPORT
(Ë
ö£π 
 ();

585 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

586 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

587 
NCURSES_EXPORT
(Ë
ö°r
 (*);

588 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

589 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

590 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

591 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

592 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

593 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

594 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

595 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

596 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

597 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

598 
NCURSES_EXPORT
(Ë
move
 (, );

599 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

600 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

601 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

602 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

603 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

604 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

605 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

606 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

607 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

608 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

609 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

610 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

611 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

612 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

613 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

615 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

616 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

617 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

618 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

619 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

620 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

621 
GCC_PRINTFLIKE
(3,4);

622 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

623 
GCC_SCANFLIKE
(3,4);

624 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

625 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

626 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

627 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

628 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

629 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

630 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

631 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

632 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

633 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

634 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

635 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

636 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

637 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

638 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

639 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

640 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

641 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

642 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

643 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

644 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

645 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

646 
GCC_PRINTFLIKE
(4,5);

647 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

648 
GCC_SCANFLIKE
(4,5);

649 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

650 
NCURSES_EXPORT
(Ë
«pms
 ();

651 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

652 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

653 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

654 
NCURSES_EXPORT
(Ë
∆
 ();

655 
NCURSES_EXPORT
(Ë
nocbªak
 ();

656 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

657 
NCURSES_EXPORT
(Ë
n€cho
 ();

658 
NCURSES_EXPORT
(Ë
n⁄l
 ();

659 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

660 
NCURSES_EXPORT
(Ë
n‹aw
 ();

661 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

662 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

663 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

664 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

665 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

666 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

667 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

668 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

669 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

670 
GCC_PRINTFLIKE
(1,2);

671 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

672 
NCURSES_EXPORT
(Ë
qiÊush
 ();

673 
NCURSES_EXPORT
(Ë
øw
 ();

674 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

675 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

676 
NCURSES_EXPORT
(Ë
ª£ây
 ();

677 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

678 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

679 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

680 
NCURSES_EXPORT
(Ë
ßvëty
 ();

681 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

682 
GCC_SCANFLIKE
(1,2);

683 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

684 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

685 
NCURSES_EXPORT
(Ë
s¸l
 ();

686 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

687 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

688 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

689 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

690 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

691 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

692 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

693 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

694 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

695 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

696 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

697 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

698 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

699 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

700 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

701 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

702 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

703 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

704 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

705 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

706 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

707 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

708 
NCURSES_EXPORT
(Ë
°™dout
 ();

709 
NCURSES_EXPORT
(Ë
°™díd
 ();

710 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

711 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

712 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

713 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

714 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

715 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

716 
NCURSES_EXPORT
(Ë
timeout
 ();

717 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

718 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

719 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

720 
NCURSES_EXPORT
(Ë
ungëch
 ();

721 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

722 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

723 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

724 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, (*)());

725 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

726 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

727 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

728 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

729 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

730 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

731 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

732 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

733 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

734 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

735 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

736 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

737 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

738 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

739 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

740 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

741 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

742 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

743 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

744 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

745 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

746 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

747 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

748 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

749 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

750 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

751 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

752 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

753 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

754 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

755 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

756 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

757 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

758 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

759 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

760 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

761 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

762 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

763 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

764 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

765 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

766 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

767 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

768 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

769 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

770 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

771 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

772 
GCC_PRINTFLIKE
(2,3);

773 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

774 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

775 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

776 
GCC_SCANFLIKE
(2,3);

777 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

778 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

779 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

780 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

781 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

782 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

783 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

784 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

785 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

790 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

791 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

792 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

793 
NCURSES_EXPORT
(Ë
puç
 (const *);

795 #i‡
NCURSES_TPARM_VARARGS


796 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

798 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

799 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

805 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

806 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

807 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

809 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

810 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

811 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

812 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

813 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

818 #i‚de‡
_XOPEN_SOURCE_EXTENDED


819 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

826 #unde‡
NCURSES_EXT_FUNCS


827 
	#NCURSES_EXT_FUNCS
 20090207

	)

828 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

829 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

830 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

831 
NCURSES_EXPORT
(*Ë
keybound
 (, );

832 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

833 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

834 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

835 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

836 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

837 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

838 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

839 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

840 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

841 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

842 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

843 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

844 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

845 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

846 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

847 
NCURSES_EXPORT
(Ë
nofûãr
();

853 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

854 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

855 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

856 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

857 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

858 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

859 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

860 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

861 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

862 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

863 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

864 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

867 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

872 
	#NCURSES_ATTR_SHIFT
 8

	)

873 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

875 
	#A_NORMAL
 (1UL - 1UL)

	)

876 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

877 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

878 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

879 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

880 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

881 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

882 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

883 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

884 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

885 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

886 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

887 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

888 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

889 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

890 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

891 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

892 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

893 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

905 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

906 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

907 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

908 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

910 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

911 i‡(
	`is_Àaveok
(
√ws¸
)) \

912 (
y
Ë(
x
) = -1; \

914 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

916 } 0)

	)

918 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

919 i‡((
y
Ë=-1 && (
x
) == -1) \

920 
	`Àaveok
(
√ws¸
, 
TRUE
); \

922 
	`Àaveok
(
√ws¸
, 
FALSE
); \

923 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

926 } 0)

	)

928 #i‚de‡
NCURSES_NOMACROS


934 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

935 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

937 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

939 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

940 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

941 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

942 
	#¸mode
(Ë
	`cbªak
()

	)

943 
	#no¸mode
(Ë
	`nocbªak
()

	)

944 
	#gëtmode
()

	)

947 #i‡!
NCURSES_OPAQUE


948 
	#gë©ås
(
wö
Ë((wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

949 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

950 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

951 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

952 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

953 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

954 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

955 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

956 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

959 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

960 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

962 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

963 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

965 #i‡!
NCURSES_OPAQUE


966 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

967 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

968 (
wö
)->
_©ås
 = (
©
))

	)

970 
	#w©å£t
(
wö
,
©
Ë((wö)->
_©ås
 = (©))

	)

974 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

976 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

977 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

978 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

980 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

981 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

982 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

983 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

985 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

986 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

987 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

989 #i‡!
NCURSES_OPAQUE


990 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

993 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

994 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

999 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1000 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1006 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1007 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1008 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1009 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1010 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1011 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1012 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1013 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1014 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1015 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1016 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1017 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1018 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1019 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1020 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1021 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1022 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1023 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1024 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1025 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1026 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1027 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1028 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1029 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1030 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1031 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1032 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1033 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1034 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1035 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1036 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1037 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1038 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1039 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1040 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1041 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1042 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1043 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1044 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1045 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1046 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1047 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1048 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1049 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1055 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1056 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1057 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1058 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1059 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1060 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1061 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1062 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1063 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1064 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1065 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1066 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1067 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1068 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1069 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1070 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1071 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1072 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1073 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1074 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1076 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1077 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1078 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1079 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1080 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1081 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1082 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1083 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1084 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1085 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1086 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1087 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1088 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1089 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1090 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1091 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1092 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1093 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1094 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1095 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1100 #i‡!
NCURSES_OPAQUE


1101 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1104 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1105 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1107 #i‡!
NCURSES_OPAQUE


1108 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1109 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1110 (
wö
)->
_cﬁ‹
 = (
p
), \

1111 
OK
)

	)

1112 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1113 ()((
p
Ë!(*)0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1114 
OK
)

	)

1116 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1117 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1118 ()((
p
Ë!(*)0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1119 
OK
)

	)

1129 
	#vw_¥ötw
 
vw¥ötw


	)

1130 
	#vw_sˇnw
 
vwsˇnw


	)

1136 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1137 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1144 #i‡!
NCURSES_OPAQUE


1145 
	#is_˛óªd
(
wö
Ë((wö)->
_˛ór
)

	)

1146 
	#is_idcok
(
wö
Ë((wö)->
_idcok
)

	)

1147 
	#is_idlok
(
wö
Ë((wö)->
_idlok
)

	)

1148 
	#is_immedok
(
wö
Ë((wö)->
_immed
)

	)

1149 
	#is_key∑d
(
wö
Ë((wö)->
_u£_key∑d
)

	)

1150 
	#is_Àaveok
(
wö
Ë((wö)->
_Àaveok
)

	)

1151 
	#is_nodñay
(
wö
Ë((wö)->
_dñay
 =0)

	)

1152 
	#is_nŸimeout
(
wö
Ë((wö)->
_nŸimeout
)

	)

1153 
	#is_s¸ﬁlok
(
wö
Ë((wö)->
_s¸ﬁl
)

	)

1154 
	#is_syncok
(
wö
Ë((wö)->
_sync
)

	)

1155 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1156 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1172 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1173 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1174 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1175 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1176 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1177 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1178 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1179 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1180 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1181 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1183 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1184 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1185 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1186 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1187 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1188 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1189 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1190 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1191 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1192 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1196 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1197 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1198 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1199 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1200 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1201 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1202 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1203 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1204 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1205 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1221 
	#KEY_CODE_YES
 0400

	)

1222 
	#KEY_MIN
 0401

	)

1223 
	#KEY_BREAK
 0401

	)

1224 
	#KEY_SRESET
 0530

	)

1225 
	#KEY_RESET
 0531

	)

1229 
	#KEY_DOWN
 0402

	)

1230 
	#KEY_UP
 0403

	)

1231 
	#KEY_LEFT
 0404

	)

1232 
	#KEY_RIGHT
 0405

	)

1233 
	#KEY_HOME
 0406

	)

1234 
	#KEY_BACKSPACE
 0407

	)

1235 
	#KEY_F0
 0410

	)

1236 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1237 
	#KEY_DL
 0510

	)

1238 
	#KEY_IL
 0511

	)

1239 
	#KEY_DC
 0512

	)

1240 
	#KEY_IC
 0513

	)

1241 
	#KEY_EIC
 0514

	)

1242 
	#KEY_CLEAR
 0515

	)

1243 
	#KEY_EOS
 0516

	)

1244 
	#KEY_EOL
 0517

	)

1245 
	#KEY_SF
 0520

	)

1246 
	#KEY_SR
 0521

	)

1247 
	#KEY_NPAGE
 0522

	)

1248 
	#KEY_PPAGE
 0523

	)

1249 
	#KEY_STAB
 0524

	)

1250 
	#KEY_CTAB
 0525

	)

1251 
	#KEY_CATAB
 0526

	)

1252 
	#KEY_ENTER
 0527

	)

1253 
	#KEY_PRINT
 0532

	)

1254 
	#KEY_LL
 0533

	)

1255 
	#KEY_A1
 0534

	)

1256 
	#KEY_A3
 0535

	)

1257 
	#KEY_B2
 0536

	)

1258 
	#KEY_C1
 0537

	)

1259 
	#KEY_C3
 0540

	)

1260 
	#KEY_BTAB
 0541

	)

1261 
	#KEY_BEG
 0542

	)

1262 
	#KEY_CANCEL
 0543

	)

1263 
	#KEY_CLOSE
 0544

	)

1264 
	#KEY_COMMAND
 0545

	)

1265 
	#KEY_COPY
 0546

	)

1266 
	#KEY_CREATE
 0547

	)

1267 
	#KEY_END
 0550

	)

1268 
	#KEY_EXIT
 0551

	)

1269 
	#KEY_FIND
 0552

	)

1270 
	#KEY_HELP
 0553

	)

1271 
	#KEY_MARK
 0554

	)

1272 
	#KEY_MESSAGE
 0555

	)

1273 
	#KEY_MOVE
 0556

	)

1274 
	#KEY_NEXT
 0557

	)

1275 
	#KEY_OPEN
 0560

	)

1276 
	#KEY_OPTIONS
 0561

	)

1277 
	#KEY_PREVIOUS
 0562

	)

1278 
	#KEY_REDO
 0563

	)

1279 
	#KEY_REFERENCE
 0564

	)

1280 
	#KEY_REFRESH
 0565

	)

1281 
	#KEY_REPLACE
 0566

	)

1282 
	#KEY_RESTART
 0567

	)

1283 
	#KEY_RESUME
 0570

	)

1284 
	#KEY_SAVE
 0571

	)

1285 
	#KEY_SBEG
 0572

	)

1286 
	#KEY_SCANCEL
 0573

	)

1287 
	#KEY_SCOMMAND
 0574

	)

1288 
	#KEY_SCOPY
 0575

	)

1289 
	#KEY_SCREATE
 0576

	)

1290 
	#KEY_SDC
 0577

	)

1291 
	#KEY_SDL
 0600

	)

1292 
	#KEY_SELECT
 0601

	)

1293 
	#KEY_SEND
 0602

	)

1294 
	#KEY_SEOL
 0603

	)

1295 
	#KEY_SEXIT
 0604

	)

1296 
	#KEY_SFIND
 0605

	)

1297 
	#KEY_SHELP
 0606

	)

1298 
	#KEY_SHOME
 0607

	)

1299 
	#KEY_SIC
 0610

	)

1300 
	#KEY_SLEFT
 0611

	)

1301 
	#KEY_SMESSAGE
 0612

	)

1302 
	#KEY_SMOVE
 0613

	)

1303 
	#KEY_SNEXT
 0614

	)

1304 
	#KEY_SOPTIONS
 0615

	)

1305 
	#KEY_SPREVIOUS
 0616

	)

1306 
	#KEY_SPRINT
 0617

	)

1307 
	#KEY_SREDO
 0620

	)

1308 
	#KEY_SREPLACE
 0621

	)

1309 
	#KEY_SRIGHT
 0622

	)

1310 
	#KEY_SRSUME
 0623

	)

1311 
	#KEY_SSAVE
 0624

	)

1312 
	#KEY_SSUSPEND
 0625

	)

1313 
	#KEY_SUNDO
 0626

	)

1314 
	#KEY_SUSPEND
 0627

	)

1315 
	#KEY_UNDO
 0630

	)

1316 
	#KEY_MOUSE
 0631

	)

1317 
	#KEY_RESIZE
 0632

	)

1318 
	#KEY_EVENT
 0633

	)

1320 
	#KEY_MAX
 0777

	)

1327 
	#_XOPEN_CURSES
 1

	)

1329 #ifde‡
_XOPEN_SOURCE_EXTENDED


1331 
NCURSES_EXPORT_VAR
(
cch¨_t
 *Ë
_nc_wacs
;

1333 
	#NCURSES_WACS
(
c
Ë(&
_nc_wacs
[()c])

	)

1335 
	#WACS_BSSB
 
	`NCURSES_WACS
('l')

	)

1336 
	#WACS_SSBB
 
	`NCURSES_WACS
('m')

	)

1337 
	#WACS_BBSS
 
	`NCURSES_WACS
('k')

	)

1338 
	#WACS_SBBS
 
	`NCURSES_WACS
('j')

	)

1339 
	#WACS_SBSS
 
	`NCURSES_WACS
('u')

	)

1340 
	#WACS_SSSB
 
	`NCURSES_WACS
('t')

	)

1341 
	#WACS_SSBS
 
	`NCURSES_WACS
('v')

	)

1342 
	#WACS_BSSS
 
	`NCURSES_WACS
('w')

	)

1343 
	#WACS_BSBS
 
	`NCURSES_WACS
('q')

	)

1344 
	#WACS_SBSB
 
	`NCURSES_WACS
('x')

	)

1345 
	#WACS_SSSS
 
	`NCURSES_WACS
('n')

	)

1347 
	#WACS_ULCORNER
 
WACS_BSSB


	)

1348 
	#WACS_LLCORNER
 
WACS_SSBB


	)

1349 
	#WACS_URCORNER
 
WACS_BBSS


	)

1350 
	#WACS_LRCORNER
 
WACS_SBBS


	)

1351 
	#WACS_RTEE
 
WACS_SBSS


	)

1352 
	#WACS_LTEE
 
WACS_SSSB


	)

1353 
	#WACS_BTEE
 
WACS_SSBS


	)

1354 
	#WACS_TTEE
 
WACS_BSSS


	)

1355 
	#WACS_HLINE
 
WACS_BSBS


	)

1356 
	#WACS_VLINE
 
WACS_SBSB


	)

1357 
	#WACS_PLUS
 
WACS_SSSS


	)

1359 
	#WACS_S1
 
	`NCURSES_WACS
('o'Ë

	)

1360 
	#WACS_S9
 
	`NCURSES_WACS
('s'Ë

	)

1361 
	#WACS_DIAMOND
 
	`NCURSES_WACS
('`'Ë

	)

1362 
	#WACS_CKBOARD
 
	`NCURSES_WACS
('a'Ë

	)

1363 
	#WACS_DEGREE
 
	`NCURSES_WACS
('f'Ë

	)

1364 
	#WACS_PLMINUS
 
	`NCURSES_WACS
('g'Ë

	)

1365 
	#WACS_BULLET
 
	`NCURSES_WACS
('~'Ë

	)

1368 
	#WACS_LARROW
 
	`NCURSES_WACS
(','Ë

	)

1369 
	#WACS_RARROW
 
	`NCURSES_WACS
('+'Ë

	)

1370 
	#WACS_DARROW
 
	`NCURSES_WACS
('.'Ë

	)

1371 
	#WACS_UARROW
 
	`NCURSES_WACS
('-'Ë

	)

1372 
	#WACS_BOARD
 
	`NCURSES_WACS
('h'Ë

	)

1373 
	#WACS_LANTERN
 
	`NCURSES_WACS
('i'Ë

	)

1374 
	#WACS_BLOCK
 
	`NCURSES_WACS
('0'Ë

	)

1377 
	#WACS_S3
 
	`NCURSES_WACS
('p'Ë

	)

1378 
	#WACS_S7
 
	`NCURSES_WACS
('r'Ë

	)

1379 
	#WACS_LEQUAL
 
	`NCURSES_WACS
('y'Ë

	)

1380 
	#WACS_GEQUAL
 
	`NCURSES_WACS
('z'Ë

	)

1381 
	#WACS_PI
 
	`NCURSES_WACS
('{'Ë

	)

1382 
	#WACS_NEQUAL
 
	`NCURSES_WACS
('|'Ë

	)

1383 
	#WACS_STERLING
 
	`NCURSES_WACS
('}'Ë

	)

1394 
NCURSES_EXPORT
(Ë
add_wch
 (c⁄° 
cch¨_t
 *);

1395 
NCURSES_EXPORT
(Ë
add_wchn°r
 (c⁄° 
cch¨_t
 *, );

1396 
NCURSES_EXPORT
(Ë
add_wch°r
 (c⁄° 
cch¨_t
 *);

1397 
NCURSES_EXPORT
(Ë
addnw°r
 (c⁄° 
wch¨_t
 *, );

1398 
NCURSES_EXPORT
(Ë
addw°r
 (c⁄° 
wch¨_t
 *);

1399 
NCURSES_EXPORT
(Ë
bkg∫d
 (c⁄° 
cch¨_t
 *);

1400 
NCURSES_EXPORT
(Ë
bkg∫d£t
 (c⁄° 
cch¨_t
 *);

1401 
NCURSES_EXPORT
(Ë
b‹dî_£t
 (c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1402 
NCURSES_EXPORT
(Ë
box_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, const cchar_t *);

1403 
NCURSES_EXPORT
(Ë
echo_wch¨
 (c⁄° 
cch¨_t
 *);

1404 
NCURSES_EXPORT
(Ë
îa£wch¨
 (
wch¨_t
*);

1405 
NCURSES_EXPORT
(Ë
gë_wch
 (
wöt_t
 *);

1406 
NCURSES_EXPORT
(Ë
gë_w°r
 (
wöt_t
 *);

1407 
NCURSES_EXPORT
(Ë
gëbkg∫d
 (
cch¨_t
 *);

1408 
NCURSES_EXPORT
(Ë
gëcch¨
 (c⁄° 
cch¨_t
 *, 
wch¨_t
*, 
©å_t
*, *, *);

1409 
NCURSES_EXPORT
(Ë
gën_w°r
 (
wöt_t
 *, );

1410 
NCURSES_EXPORT
(Ë
hlöe_£t
 (c⁄° 
cch¨_t
 *, );

1411 
NCURSES_EXPORT
(Ë
ö_wch
 (
cch¨_t
 *);

1412 
NCURSES_EXPORT
(Ë
ö_wchn°r
 (
cch¨_t
 *, );

1413 
NCURSES_EXPORT
(Ë
ö_wch°r
 (
cch¨_t
 *);

1414 
NCURSES_EXPORT
(Ë
önw°r
 (
wch¨_t
 *, );

1415 
NCURSES_EXPORT
(Ë
ös_nw°r
 (c⁄° 
wch¨_t
 *, );

1416 
NCURSES_EXPORT
(Ë
ös_wch
 (c⁄° 
cch¨_t
 *);

1417 
NCURSES_EXPORT
(Ë
ös_w°r
 (c⁄° 
wch¨_t
 *);

1418 
NCURSES_EXPORT
(Ë
öw°r
 (
wch¨_t
 *);

1419 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key_«me
 (
wch¨_t
);

1420 
NCURSES_EXPORT
(Ë
kûlwch¨
 (
wch¨_t
 *);

1421 
NCURSES_EXPORT
(Ë
mvadd_wch
 (, , c⁄° 
cch¨_t
 *);

1422 
NCURSES_EXPORT
(Ë
mvadd_wchn°r
 (, , c⁄° 
cch¨_t
 *, );

1423 
NCURSES_EXPORT
(Ë
mvadd_wch°r
 (, , c⁄° 
cch¨_t
 *);

1424 
NCURSES_EXPORT
(Ë
mvaddnw°r
 (, , c⁄° 
wch¨_t
 *, );

1425 
NCURSES_EXPORT
(Ë
mvaddw°r
 (, , c⁄° 
wch¨_t
 *);

1426 
NCURSES_EXPORT
(Ë
mvgë_wch
 (, , 
wöt_t
 *);

1427 
NCURSES_EXPORT
(Ë
mvgë_w°r
 (, , 
wöt_t
 *);

1428 
NCURSES_EXPORT
(Ë
mvgën_w°r
 (, , 
wöt_t
 *, );

1429 
NCURSES_EXPORT
(Ë
mvhlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1430 
NCURSES_EXPORT
(Ë
mvö_wch
 (, , 
cch¨_t
 *);

1431 
NCURSES_EXPORT
(Ë
mvö_wchn°r
 (, , 
cch¨_t
 *, );

1432 
NCURSES_EXPORT
(Ë
mvö_wch°r
 (, , 
cch¨_t
 *);

1433 
NCURSES_EXPORT
(Ë
mvönw°r
 (, , 
wch¨_t
 *, );

1434 
NCURSES_EXPORT
(Ë
mvös_nw°r
 (, , c⁄° 
wch¨_t
 *, );

1435 
NCURSES_EXPORT
(Ë
mvös_wch
 (, , c⁄° 
cch¨_t
 *);

1436 
NCURSES_EXPORT
(Ë
mvös_w°r
 (, , c⁄° 
wch¨_t
 *);

1437 
NCURSES_EXPORT
(Ë
mvöw°r
 (, , 
wch¨_t
 *);

1438 
NCURSES_EXPORT
(Ë
mvvlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1439 
NCURSES_EXPORT
(Ë
mvwadd_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1440 
NCURSES_EXPORT
(Ë
mvwadd_wchn°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1441 
NCURSES_EXPORT
(Ë
mvwadd_wch°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1442 
NCURSES_EXPORT
(Ë
mvwaddnw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *, );

1443 
NCURSES_EXPORT
(Ë
mvwaddw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1444 
NCURSES_EXPORT
(Ë
mvwgë_wch
 (
WINDOW
 *, , , 
wöt_t
 *);

1445 
NCURSES_EXPORT
(Ë
mvwgë_w°r
 (
WINDOW
 *, , , 
wöt_t
 *);

1446 
NCURSES_EXPORT
(Ë
mvwgën_w°r
 (
WINDOW
 *, , , 
wöt_t
 *, );

1447 
NCURSES_EXPORT
(Ë
mvwhlöe_£t
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1448 
NCURSES_EXPORT
(Ë
mvwö_wch
 (
WINDOW
 *, , , 
cch¨_t
 *);

1449 
NCURSES_EXPORT
(Ë
mvwö_wchn°r
 (
WINDOW
 *, ,, 
cch¨_t
 *,);

1450 
NCURSES_EXPORT
(Ë
mvwö_wch°r
 (
WINDOW
 *, , , 
cch¨_t
 *);

1451 
NCURSES_EXPORT
(Ë
mvwönw°r
 (
WINDOW
 *, , , 
wch¨_t
 *, );

1452 
NCURSES_EXPORT
(Ë
mvwös_nw°r
 (
WINDOW
 *, ,, c⁄° 
wch¨_t
 *,);

1453 
NCURSES_EXPORT
(Ë
mvwös_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1454 
NCURSES_EXPORT
(Ë
mvwös_w°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1455 
NCURSES_EXPORT
(Ë
mvwöw°r
 (
WINDOW
 *, , , 
wch¨_t
 *);

1456 
NCURSES_EXPORT
(Ë
mvwvlöe_£t
 (
WINDOW
 *, ,, c⁄° 
cch¨_t
 *,);

1457 
NCURSES_EXPORT
(Ë
≥cho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1458 
NCURSES_EXPORT
(Ë
£tcch¨
 (
cch¨_t
 *, c⁄° 
wch¨_t
 *, c⁄° 
©å_t
, , const *);

1459 
NCURSES_EXPORT
(Ë
¶k_w£t
 (, c⁄° 
wch¨_t
 *, );

1460 
NCURSES_EXPORT
(
©å_t
Ë
ãrm_©ås
 ();

1461 
NCURSES_EXPORT
(Ë
ungë_wch
 (c⁄° 
wch¨_t
);

1462 
NCURSES_EXPORT
(Ë
vid_©å
 (
©å_t
, , *);

1463 
NCURSES_EXPORT
(Ë
vid_puts
 (
©å_t
, , *, (*)());

1464 
NCURSES_EXPORT
(Ë
vlöe_£t
 (c⁄° 
cch¨_t
 *, );

1465 
NCURSES_EXPORT
(Ë
wadd_wch
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1466 
NCURSES_EXPORT
(Ë
wadd_wchn°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *,);

1467 
NCURSES_EXPORT
(Ë
wadd_wch°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1468 
NCURSES_EXPORT
(Ë
waddnw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *,);

1469 
NCURSES_EXPORT
(Ë
waddw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *);

1470 
NCURSES_EXPORT
(Ë
wbkg∫d
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1471 
NCURSES_EXPORT
(Ë
wbkg∫d£t
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1472 
NCURSES_EXPORT
(Ë
wb‹dî_£t
 (
WINDOW
 *,c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1473 
NCURSES_EXPORT
(Ë
wecho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1474 
NCURSES_EXPORT
(Ë
wgë_wch
 (
WINDOW
 *, 
wöt_t
 *);

1475 
NCURSES_EXPORT
(Ë
wgë_w°r
 (
WINDOW
 *, 
wöt_t
 *);

1476 
NCURSES_EXPORT
(Ë
wgëbkg∫d
 (
WINDOW
 *, 
cch¨_t
 *);

1477 
NCURSES_EXPORT
(Ë
wgën_w°r
 (
WINDOW
 *,
wöt_t
 *, );

1478 
NCURSES_EXPORT
(Ë
whlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1479 
NCURSES_EXPORT
(Ë
wö_wch
 (
WINDOW
 *, 
cch¨_t
 *);

1480 
NCURSES_EXPORT
(Ë
wö_wchn°r
 (
WINDOW
 *, 
cch¨_t
 *, );

1481 
NCURSES_EXPORT
(Ë
wö_wch°r
 (
WINDOW
 *, 
cch¨_t
 *);

1482 
NCURSES_EXPORT
(Ë
wönw°r
 (
WINDOW
 *, 
wch¨_t
 *, );

1483 
NCURSES_EXPORT
(Ë
wös_nw°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *, );

1484 
NCURSES_EXPORT
(Ë
wös_wch
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1485 
NCURSES_EXPORT
(Ë
wös_w°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *);

1486 
NCURSES_EXPORT
(Ë
wöw°r
 (
WINDOW
 *, 
wch¨_t
 *);

1487 
NCURSES_EXPORT
(
wch¨_t
*Ë
wun˘æ
 (
cch¨_t
 *);

1488 
NCURSES_EXPORT
(Ë
wvlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1490 #i‚de‡
NCURSES_NOMACROS


1495 
	#add_wch
(
c
Ë
	`wadd_wch
(
°ds¸
,c)

	)

1496 
	#add_wchn°r
(
°r
,
n
Ë
	`wadd_wchn°r
(
°ds¸
,°r,n)

	)

1497 
	#add_wch°r
(
°r
Ë
	`wadd_wch°r
(
°ds¸
,°r)

	)

1498 
	#addnw°r
(
w°r
,
n
Ë
	`waddnw°r
(
°ds¸
,w°r,n)

	)

1499 
	#addw°r
(
w°r
Ë
	`waddw°r
(
°ds¸
,w°r)

	)

1500 
	#bkg∫d
(
c
Ë
	`wbkg∫d
(
°ds¸
,c)

	)

1501 
	#bkg∫d£t
(
c
Ë
	`wbkg∫d£t
(
°ds¸
,c)

	)

1502 
	#b‹dî_£t
(
l
,
r
,
t
,
b
,
é
,
å
,
bl
,
br
Ë
	`wb‹dî_£t
(
°ds¸
,l,r,t,b,é,å,bl,br)

	)

1503 
	#box_£t
(
w
,
v
,
h
Ë
	`wb‹dî_£t
(w,v,v,h,h,0,0,0,0)

	)

1504 
	#echo_wch¨
(
c
Ë
	`wecho_wch¨
(
°ds¸
,c)

	)

1505 
	#gë_wch
(
c
Ë
	`wgë_wch
(
°ds¸
,c)

	)

1506 
	#gë_w°r
(
t
Ë
	`wgë_w°r
(
°ds¸
,t)

	)

1507 
	#gëbkg∫d
(
wch
Ë
	`wgëbkg∫d
(
°ds¸
,wch)

	)

1508 
	#gën_w°r
(
t
,
n
Ë
	`wgën_w°r
(
°ds¸
,t,n)

	)

1509 
	#hlöe_£t
(
c
,
n
Ë
	`whlöe_£t
(
°ds¸
,c,n)

	)

1510 
	#ö_wch
(
c
Ë
	`wö_wch
(
°ds¸
,c)

	)

1511 
	#ö_wchn°r
(
c
,
n
Ë
	`wö_wchn°r
(
°ds¸
,c,n)

	)

1512 
	#ö_wch°r
(
c
Ë
	`wö_wch°r
(
°ds¸
,c)

	)

1513 
	#önw°r
(
c
,
n
Ë
	`wönw°r
(
°ds¸
,c,n)

	)

1514 
	#ös_nw°r
(
t
,
n
Ë
	`wös_nw°r
(
°ds¸
,t,n)

	)

1515 
	#ös_wch
(
c
Ë
	`wös_wch
(
°ds¸
,c)

	)

1516 
	#ös_w°r
(
t
Ë
	`wös_w°r
(
°ds¸
,t)

	)

1517 
	#öw°r
(
c
Ë
	`wöw°r
(
°ds¸
,c)

	)

1518 
	#vlöe_£t
(
c
,
n
Ë
	`wvlöe_£t
(
°ds¸
,c,n)

	)

1519 
	#wadd_wch°r
(
wö
,
°r
Ë
	`wadd_wchn°r
(wö,°r,-1)

	)

1520 
	#waddw°r
(
wö
,
w°r
Ë
	`waddnw°r
(wö,w°r,-1)

	)

1521 
	#wgë_w°r
(
w
,
t
Ë
	`wgën_w°r
(w,t,-1)

	)

1522 
	#wö_wch°r
(
w
,
c
Ë
	`wö_wchn°r
(w,c,-1)

	)

1523 
	#wös_w°r
(
w
,
t
Ë
	`wös_nw°r
(w,t,-1)

	)

1525 #i‡!
NCURSES_OPAQUE


1526 
	#wgëbkg∫d
(
wö
,
wch
Ë(*wch = wö->
_bkg∫d
, 
OK
)

	)

1529 
	#mvadd_wch
(
y
,
x
,
c
Ë
	`mvwadd_wch
(
°ds¸
,y,x,c)

	)

1530 
	#mvadd_wchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwadd_wchn°r
(
°ds¸
,y,x,s,n)

	)

1531 
	#mvadd_wch°r
(
y
,
x
,
s
Ë
	`mvwadd_wch°r
(
°ds¸
,y,x,s)

	)

1532 
	#mvaddnw°r
(
y
,
x
,
w°r
,
n
Ë
	`mvwaddnw°r
(
°ds¸
,y,x,w°r,n)

	)

1533 
	#mvaddw°r
(
y
,
x
,
w°r
Ë
	`mvwaddw°r
(
°ds¸
,y,x,w°r)

	)

1534 
	#mvgë_wch
(
y
,
x
,
c
Ë
	`mvwgë_wch
(
°ds¸
,y,x,c)

	)

1535 
	#mvgë_w°r
(
y
,
x
,
t
Ë
	`mvwgë_w°r
(
°ds¸
,y,x,t)

	)

1536 
	#mvgën_w°r
(
y
,
x
,
t
,
n
Ë
	`mvwgën_w°r
(
°ds¸
,y,x,t,n)

	)

1537 
	#mvhlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe_£t
(
°ds¸
,y,x,c,n)

	)

1538 
	#mvö_wch
(
y
,
x
,
c
Ë
	`mvwö_wch
(
°ds¸
,y,x,c)

	)

1539 
	#mvö_wchn°r
(
y
,
x
,
c
,
n
Ë
	`mvwö_wchn°r
(
°ds¸
,y,x,c,n)

	)

1540 
	#mvö_wch°r
(
y
,
x
,
c
Ë
	`mvwö_wch°r
(
°ds¸
,y,x,c)

	)

1541 
	#mvönw°r
(
y
,
x
,
c
,
n
Ë
	`mvwönw°r
(
°ds¸
,y,x,c,n)

	)

1542 
	#mvös_nw°r
(
y
,
x
,
t
,
n
Ë
	`mvwös_nw°r
(
°ds¸
,y,x,t,n)

	)

1543 
	#mvös_wch
(
y
,
x
,
c
Ë
	`mvwös_wch
(
°ds¸
,y,x,c)

	)

1544 
	#mvös_w°r
(
y
,
x
,
t
Ë
	`mvwös_w°r
(
°ds¸
,y,x,t)

	)

1545 
	#mvöw°r
(
y
,
x
,
c
Ë
	`mvwöw°r
(
°ds¸
,y,x,c)

	)

1546 
	#mvvlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe_£t
(
°ds¸
,y,x,c,n)

	)

1548 
	#mvwadd_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch
(wö,c))

	)

1549 
	#mvwadd_wchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wchn°r
(wö,s,n))

	)

1550 
	#mvwadd_wch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch°r
(wö,s))

	)

1551 
	#mvwaddnw°r
(
wö
,
y
,
x
,
w°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddnw°r
(wö,w°r,n))

	)

1552 
	#mvwaddw°r
(
wö
,
y
,
x
,
w°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddw°r
(wö,w°r))

	)

1553 
	#mvwgë_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_wch
(wö,c))

	)

1554 
	#mvwgë_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_w°r
(wö,t))

	)

1555 
	#mvwgën_w°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën_w°r
(wö,t,n))

	)

1556 
	#mvwhlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe_£t
(wö,c,n))

	)

1557 
	#mvwö_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch
(wö,c))

	)

1558 
	#mvwö_wchn°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wchn°r
(wö,c,n))

	)

1559 
	#mvwö_wch°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch°r
(wö,c))

	)

1560 
	#mvwönw°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wönw°r
(wö,c,n))

	)

1561 
	#mvwös_nw°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_nw°r
(wö,t,n))

	)

1562 
	#mvwös_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_wch
(wö,c))

	)

1563 
	#mvwös_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_w°r
(wö,t))

	)

1564 
	#mvwöw°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöw°r
(wö,c))

	)

1565 
	#mvwvlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe_£t
(wö,c,n))

	)

1569 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1570 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswbuf
(c⁄° 
wch¨_t
 *);

1571 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswibuf
(c⁄° 
wöt_t
 *);

1584 #i‡
NCURSES_MOUSE_VERSION
 > 1

1585 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1587 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1590 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1591 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1592 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1593 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1594 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1595 
	#NCURSES_RESERVED_EVENT
 040L

	)

1598 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1599 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1600 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1601 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1602 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1604 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1605 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1606 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1607 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1608 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1610 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1611 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1612 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1613 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1614 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1616 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1617 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1618 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1619 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1620 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1626 #i‡
NCURSES_MOUSE_VERSION
 > 1

1628 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1629 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1630 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1631 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1632 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1634 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1635 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1636 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1637 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1641 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1642 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1643 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1644 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1646 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1647 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1648 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1649 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1653 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1656 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1657 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1658 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1659 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1660 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1661 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1665 
	gid
;

1666 
	gx
, 
	gy
, 
	gz
;

1667 
mmask_t
 
	gb°©e
;

1669 
	tMEVENT
;

1671 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
 ();

1672 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1673 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1674 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1675 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1676 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1677 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1678 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1680 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1684 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1685 
NCURSES_EXPORT
(Ë
has_key
 ();

1689 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1690 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1691 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1692 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1693 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1694 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1695 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1696 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1697 #ifde‡
_XOPEN_SOURCE_EXTENDED


1698 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1699 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1700 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1701 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1703 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1704 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1706 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1707 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1710 
	#TRACE_DISABLE
 0x0000

	)

1711 
	#TRACE_TIMES
 0x0001

	)

1712 
	#TRACE_TPUTS
 0x0002

	)

1713 
	#TRACE_UPDATE
 0x0004

	)

1714 
	#TRACE_MOVE
 0x0008

	)

1715 
	#TRACE_CHARPUT
 0x0010

	)

1716 
	#TRACE_ORDINARY
 0x001F

	)

1717 
	#TRACE_CALLS
 0x0020

	)

1718 
	#TRACE_VIRTPUT
 0x0040

	)

1719 
	#TRACE_IEVENT
 0x0080

	)

1720 
	#TRACE_BITS
 0x0100

	)

1721 
	#TRACE_ICALLS
 0x0200

	)

1722 
	#TRACE_CCALLS
 0x0400

	)

1723 
	#TRACE_DATABASE
 0x0800

	)

1724 
	#TRACE_ATTRS
 0x1000

	)

1726 
	#TRACE_SHIFT
 13

	)

1727 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1729 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1730 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1731 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1732 
	#OPTIMIZE_MVCUR
 0x01

	)

1733 
	#OPTIMIZE_HASHMAP
 0x02

	)

1734 
	#OPTIMIZE_SCROLL
 0x04

	)

1735 
	#OPTIMIZE_ALL
 0xf‡

	)

1738 #ifde‡
__˝lu•lus


1740 #i‚de‡
NCURSES_NOMACROS


1743 #unde‡
box


1744 #unde‡
˛ór


1745 #unde‡
îa£


1746 #unde‡
move


1747 #unde‡
ª‰esh


	@/usr/include/regex.h

22 #i‚de‡
_REGEX_H


23 
	#_REGEX_H
 1

	)

25 
	~<sys/ty≥s.h
>

28 #ifde‡
__˝lu•lus


36 
	ts_ªg_t
;

37 
	ta˘ive_ªg_t
;

44 
	tªg_sy¡ax_t
;

46 #ifde‡
__USE_GNU


49 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

54 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

60 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

74 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

82 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

86 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

90 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

94 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

98 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

103 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

107 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

111 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

116 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

120 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

124 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

128 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

134 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

138 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

142 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

146 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

154 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

159 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

163 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

168 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

172 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

176 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

183 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

185 #ifde‡
__USE_GNU


190 
	#RE_SYNTAX_EMACS
 0

	)

192 
	#RE_SYNTAX_AWK
 \

193 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

194 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

195 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

196 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

197 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

199 
	#RE_SYNTAX_GNU_AWK
 \

200 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DEBUG
) \

201 & ~(
RE_DOT_NOT_NULL
 | 
RE_INTERVALS
 | 
RE_CONTEXT_INDEP_OPS
 \

202 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

204 
	#RE_SYNTAX_POSIX_AWK
 \

205 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

206 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
)

	)

208 
	#RE_SYNTAX_GREP
 \

209 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

210 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

211 | 
RE_NEWLINE_ALT
)

	)

213 
	#RE_SYNTAX_EGREP
 \

214 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

215 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

216 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

217 | 
RE_NO_BK_VBAR
)

	)

219 
	#RE_SYNTAX_POSIX_EGREP
 \

220 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

221 | 
RE_INVALID_INTERVAL_ORD
)

	)

224 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

226 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

229 
	#_RE_SYNTAX_POSIX_COMMON
 \

230 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

231 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

233 
	#RE_SYNTAX_POSIX_BASIC
 \

234 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

239 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

240 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

242 
	#RE_SYNTAX_POSIX_EXTENDED
 \

243 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

244 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

245 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

246 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

250 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

251 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

252 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

253 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

254 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

260 #ifde‡
RE_DUP_MAX


261 #unde‡
RE_DUP_MAX


264 
	#RE_DUP_MAX
 (0x7fff)

	)

272 
	#REG_EXTENDED
 1

	)

276 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

281 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

285 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

295 
	#REG_NOTBOL
 1

	)

298 
	#REG_NOTEOL
 (1 << 1)

	)

302 
	#REG_STARTEND
 (1 << 2)

	)

309 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


310 
	gREG_ENOSYS
 = -1,

313 
	gREG_NOERROR
 = 0,

314 
	gREG_NOMATCH
,

318 
	gREG_BADPAT
,

319 
	gREG_ECOLLATE
,

320 
	gREG_ECTYPE
,

321 
	gREG_EESCAPE
,

322 
	gREG_ESUBREG
,

323 
	gREG_EBRACK
,

324 
	gREG_EPAREN
,

325 
	gREG_EBRACE
,

326 
	gREG_BADBR
,

327 
	gREG_ERANGE
,

328 
	gREG_ESPACE
,

329 
	gREG_BADRPT
,

332 
	gREG_EEND
,

333 
	gREG_ESIZE
,

334 
	gREG_ERPAREN


335 } 
	tªg_îrcode_t
;

343 #i‚de‡
RE_TRANSLATE_TYPE


344 
	#__RE_TRANSLATE_TYPE
 *

	)

345 #ifde‡
__USE_GNU


346 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

350 #ifde‡
__USE_GNU


351 
	#__REPB_PREFIX
(
«me
Ë
	)
name

353 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

356 
	sª_∑âîn_buf„r


361 *
__REPB_PREFIX
(
buf„r
);

364 
__REPB_PREFIX
(
Æloˇãd
);

367 
__REPB_PREFIX
(
u£d
);

370 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

375 *
__REPB_PREFIX
(
Á°m≠
);

381 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

384 
size_t
 
	gª_nsub
;

390 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

396 #ifde‡
__USE_GNU


397 
	#REGS_UNALLOCATED
 0

	)

398 
	#REGS_REALLOCATE
 1

	)

399 
	#REGS_FIXED
 2

	)

401 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

405 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

409 
__REPB_PREFIX
(
no_sub
) : 1;

413 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

416 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

419 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

422 
ª_∑âîn_buf„r
 
	tªgex_t
;

425 
	tªgoff_t
;

428 #ifde‡
__USE_GNU


431 
	sª_ªgi°îs


433 
	gnum_ªgs
;

434 
ªgoff_t
 *
	g°¨t
;

435 
ªgoff_t
 *
	gíd
;

442 #i‚de‡
RE_NREGS


443 
	#RE_NREGS
 30

	)

453 
ªgoff_t
 
	grm_so
;

454 
ªgoff_t
 
	grm_eo
;

455 } 
	tªgm©ch_t
;

459 #ifde‡
__USE_GNU


462 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

467 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

468 
ª_∑âîn_buf„r
 *
__buf„r
);

474 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

482 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

483 
__Àngth
, 
__°¨t
, 
__ønge
,

484 
ª_ªgi°îs
 *
__ªgs
);

489 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

490 c⁄° *
__°rög1
, 
__Àngth1
,

491 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

492 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

497 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

498 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

502 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

503 c⁄° *
__°rög1
, 
__Àngth1
,

504 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

505 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

520 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

521 
ª_ªgi°îs
 *
__ªgs
,

522 
__num_ªgs
,

523 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

526 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_BSD
)

527 #i‚de‡
_CRAY


529 *
ª_comp
 (const *);

530 
ª_exec
 (const *);

536 #i‚de‡
__ª°ri˘


537 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

538 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


539 
	#__ª°ri˘
 
ª°ri˘


	)

541 
	#__ª°ri˘


	)

546 #i‚de‡
__ª°ri˘_¨r


547 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

548 && !
deföed
 
	g__GNUG__


549 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

551 
	#__ª°ri˘_¨r


	)

556 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

557 c⁄° *
__ª°ri˘
 
__∑âîn
,

558 
__cÊags
);

560 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

561 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

562 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

563 
__eÊags
);

565 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

566 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

568 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

571 #ifde‡
__˝lu•lus


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

168 #ifde‡
__STDC__


170 
	#°dö
 
°dö


	)

171 
	#°dout
 
°dout


	)

172 
	#°dîr
 
°dîr


	)

175 
__BEGIN_NAMESPACE_STD


177 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

179 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

180 
__END_NAMESPACE_STD


182 #ifde‡
__USE_ATFILE


184 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

185 
__c⁄°
 *
__√w
Ë
__THROW
;

188 
__BEGIN_NAMESPACE_STD


193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

196 #ifde‡
__REDIRECT


197 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

199 
	#tmpfûe
 
tmpfûe64


	)

203 #ifde‡
__USE_LARGEFILE64


204 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

208 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

209 
__END_NAMESPACE_STD


211 #ifde‡
__USE_MISC


214 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

218 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


226 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

227 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

231 
__BEGIN_NAMESPACE_STD


236 
	`f˛o£
 (
FILE
 *
__°ªam
);

241 
	`fÊush
 (
FILE
 *
__°ªam
);

242 
__END_NAMESPACE_STD


244 #ifde‡
__USE_MISC


251 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

254 #ifde‡
__USE_GNU


261 
	`f˛o£Æl
 ();

265 
__BEGIN_NAMESPACE_STD


266 #i‚de‡
__USE_FILE_OFFSET64


271 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

277 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

278 
__c⁄°
 *
__ª°ri˘
 
__modes
,

279 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifde‡
__REDIRECT


282 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

283 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

284 
__wur
;

285 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

286 
__c⁄°
 *
__ª°ri˘
 
__modes
,

287 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

288 
__wur
;

290 
	#f›í
 
f›í64


	)

291 
	#‰e›í
 
‰e›í64


	)

294 
__END_NAMESPACE_STD


295 #ifde‡
__USE_LARGEFILE64


296 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

298 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
,

300 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 #ifdef 
__USE_POSIX


305 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

308 #ifdef 
__USE_GNU


311 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

312 
__c⁄°
 *
__ª°ri˘
 
__modes
,

313 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

316 #ifde‡
__USE_XOPEN2K8


318 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

319 
__THROW
 
__wur
;

324 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

328 
__BEGIN_NAMESPACE_STD


331 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

335 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

336 
__modes
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifdef 
__USE_BSD


342 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

343 
size_t
 
__size
Ë
__THROW
;

346 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
__BEGIN_NAMESPACE_STD


355 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	$•rötf
 (*
__ª°ri˘
 
__s
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

370 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

371 
_G_va_li°
 
__¨g
);

376 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

378 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

379 
_G_va_li°
 
__¨g
Ë
__THROW
;

380 
__END_NAMESPACE_STD


382 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


383 
__BEGIN_NAMESPACE_C99


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

391 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

392 
__END_NAMESPACE_C99


395 #ifde‡
__USE_GNU


398 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

399 
_G_va_li°
 
__¨g
)

400 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

401 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

402 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

403 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

404 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

405 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

406 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

409 #ifde‡
__USE_XOPEN2K8


416 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

417 
_G_va_li°
 
__¨g
)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

419 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

424 
__BEGIN_NAMESPACE_STD


429 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

440 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

441 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

442 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

443 #ifde‡
__REDIRECT


447 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

448 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_fsˇnf
Ë
__wur
;

450 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_sˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

453 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

454 
__isoc99_ssˇnf
Ë
__THROW
;

456 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

458 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

459 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

460 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

461 
	#fsˇnf
 
__isoc99_fsˇnf


	)

462 
	#sˇnf
 
__isoc99_sˇnf


	)

463 
	#ssˇnf
 
__isoc99_ssˇnf


	)

467 
__END_NAMESPACE_STD


469 #ifdef 
__USE_ISOC99


470 
__BEGIN_NAMESPACE_C99


475 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

476 
_G_va_li°
 
__¨g
)

477 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

483 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

484 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

488 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

489 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

491 #i‡!
deföed
 
__USE_GNU
 \

492 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

493 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

494 #ifde‡
__REDIRECT


498 
	`__REDIRECT
 (
vfsˇnf
,

499 (
FILE
 *
__ª°ri˘
 
__s
,

500 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

501 
__isoc99_vfsˇnf
)

502 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

503 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

504 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

505 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

506 
	`__REDIRECT
 (
vssˇnf
,

507 (
__c⁄°
 *
__ª°ri˘
 
__s
,

508 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

509 
__isoc99_vssˇnf
)

510 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

512 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

513 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

518 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

519 
_G_va_li°
 
__¨g
Ë
__THROW
;

520 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

521 
	#vsˇnf
 
__isoc99_vsˇnf


	)

522 
	#vssˇnf
 
__isoc99_vssˇnf


	)

526 
__END_NAMESPACE_C99


530 
__BEGIN_NAMESPACE_STD


535 
	`fgëc
 (
FILE
 *
__°ªam
);

536 
	`gëc
 (
FILE
 *
__°ªam
);

542 
	`gëch¨
 ();

543 
__END_NAMESPACE_STD


547 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

549 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


554 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

555 
	`gëch¨_u∆ocked
 ();

558 #ifde‡
__USE_MISC


565 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

569 
__BEGIN_NAMESPACE_STD


577 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

578 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

584 
	`putch¨
 (
__c
);

585 
__END_NAMESPACE_STD


589 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

591 #ifde‡
__USE_MISC


598 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

601 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


606 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

607 
	`putch¨_u∆ocked
 (
__c
);

611 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

612 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

614 
	`gëw
 (
FILE
 *
__°ªam
);

617 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

621 
__BEGIN_NAMESPACE_STD


626 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

627 
__wur
;

634 *
	$gës
 (*
__s
Ë
__wur
;

635 
__END_NAMESPACE_STD


637 #ifde‡
__USE_GNU


644 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

645 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 #ifdef 
__USE_XOPEN2K8


660 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

661 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

662 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

663 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

664 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

665 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

673 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

674 
size_t
 *
__ª°ri˘
 
__n
,

675 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

679 
__BEGIN_NAMESPACE_STD


684 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

690 
	`puts
 (
__c⁄°
 *
__s
);

697 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

704 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

710 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

712 
__END_NAMESPACE_STD


714 #ifde‡
__USE_GNU


721 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

722 
FILE
 *
__ª°ri˘
 
__°ªam
);

725 #ifde‡
__USE_MISC


732 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

734 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
__BEGIN_NAMESPACE_STD


744 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

749 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

754 
	`ªwöd
 (
FILE
 *
__°ªam
);

755 
__END_NAMESPACE_STD


762 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


763 #i‚de‡
__USE_FILE_OFFSET64


768 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

773 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

775 #ifde‡
__REDIRECT


776 
	`__REDIRECT
 (
f£eko
,

777 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

778 
f£eko64
);

779 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

781 
	#f£eko
 
f£eko64


	)

782 
	#·ñlo
 
·ñlo64


	)

787 
__BEGIN_NAMESPACE_STD


788 #i‚de‡
__USE_FILE_OFFSET64


793 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

798 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

800 #ifde‡
__REDIRECT


801 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

802 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

803 
	`__REDIRECT
 (
f£ços
,

804 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

806 
	#fgëpos
 
fgëpos64


	)

807 
	#f£ços
 
f£ços64


	)

810 
__END_NAMESPACE_STD


812 #ifde‡
__USE_LARGEFILE64


813 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

814 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

815 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

816 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

819 
__BEGIN_NAMESPACE_STD


821 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

823 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

826 
__END_NAMESPACE_STD


828 #ifde‡
__USE_MISC


830 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

831 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
__BEGIN_NAMESPACE_STD


841 
	`≥º‹
 (
__c⁄°
 *
__s
);

842 
__END_NAMESPACE_STD


848 
	~<bôs/sys_îæi°.h
>

851 #ifdef 
__USE_POSIX


853 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

856 #ifde‡
__USE_MISC


858 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

862 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

863 
deföed
 
__USE_MISC
)

868 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

874 
	`p˛o£
 (
FILE
 *
__°ªam
);

878 #ifdef 
__USE_POSIX


880 *
	$˘îmid
 (*
__s
Ë
__THROW
;

884 #ifde‡
__USE_XOPEN


886 *
	`cu£rid
 (*
__s
);

890 #ifdef 
__USE_GNU


891 
ob°ack
;

894 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

895 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

896 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

897 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

898 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

899 
_G_va_li°
 
__¨gs
)

900 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

904 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


908 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

912 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

915 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


922 
	#__√ed_gë›t


	)

923 
	~<gë›t.h
>

928 #ifde‡
__USE_EXTERN_INLINES


929 
	~<bôs/°dio.h
>

931 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


932 
	~<bôs/°dio2.h
>

934 #ifde‡
__LDBL_COMPAT


935 
	~<bôs/°dio-ldbl.h
>

938 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/ipc.h

19 #i‚de‡
_SYS_IPC_H


20 
	#_SYS_IPC_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

29 
	~<bôs/ù˘y≥s.h
>

30 
	~<bôs/ùc.h
>

32 #i‚de‡
__uid_t_deföed


33 
__uid_t
 
	tuid_t
;

34 
	#__uid_t_deföed


	)

37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__mode_t_deföed


43 
__mode_t
 
	tmode_t
;

44 
	#__mode_t_deföed


	)

47 #i‚de‡
__key_t_deföed


48 
__key_t
 
	tkey_t
;

49 
	#__key_t_deföed


	)

52 
__BEGIN_DECLS


55 
key_t
 
	$·ok
 (
__c⁄°
 *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

57 
__END_DECLS


	@/usr/include/sys/shm.h

19 #i‚de‡
_SYS_SHM_H


20 
	#_SYS_SHM_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/shm.h
>

34 
	#__√ed_time_t


	)

35 
	~<time.h
>

37 #ifde‡
__USE_XOPEN


38 #i‚de‡
__pid_t_deföed


39 
__pid_t
 
	tpid_t
;

40 
	#__pid_t_deföed


	)

45 
__BEGIN_DECLS


51 
	$shm˘l
 (
__shmid
, 
__cmd
, 
shmid_ds
 *
__buf
Ë
__THROW
;

54 
	$shmgë
 (
key_t
 
__key
, 
size_t
 
__size
, 
__shmÊg
Ë
__THROW
;

57 *
	$shm©
 (
__shmid
, 
__c⁄°
 *
__shmaddr
, 
__shmÊg
)

58 
__THROW
;

61 
	$shmdt
 (
__c⁄°
 *
__shmaddr
Ë
__THROW
;

63 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/termios.h

1 #i‚de‡
_SYS_TERMIOS_H


2 
	#_SYS_TERMIOS_H


	)

3 
	~<ãrmios.h
>

	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1028 #ifde‡
__REDIRECT_NTH


1029 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1030 
·runˇã64
Ë
__wur
;

1032 
	#·runˇã
 
·runˇã64


	)

1035 #ifde‡
__USE_LARGEFILE64


1036 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1043 || 
deföed
 
__USE_MISC


1047 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1053 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1057 #ifde‡
__USE_MISC


1068 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1073 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1085 
	#F_ULOCK
 0

	)

1086 
	#F_LOCK
 1

	)

1087 
	#F_TLOCK
 2

	)

1088 
	#F_TEST
 3

	)

1090 #i‚de‡
__USE_FILE_OFFSET64


1091 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1093 #ifde‡
__REDIRECT


1094 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1095 
lockf64
Ë
__wur
;

1097 
	#lockf
 
lockf64


	)

1100 #ifde‡
__USE_LARGEFILE64


1101 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1106 #ifde‡
__USE_GNU


1111 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1112 (
__exãnsi⁄__
 \

1113 ({ 
__ªsu…
; \

1114 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1115 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1116 
__ªsu…
; 
	}
}))

	)

1119 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1122 
fd©async
 (
__fûdes
);

1128 #ifdef 
__USE_XOPEN


1130 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1135 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1142 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1143 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1151 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1156 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1157 
	~<bôs/uni°d.h
>

1160 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

62 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


63 
	#O_DSYNC
 010000

	)

64 
	#O_RSYNC
 
O_SYNC


	)

67 #ifde‡
__USE_LARGEFILE64


68 #i‡
__WORDSIZE
 == 64

69 
	#O_LARGEFILE
 0

	)

71 
	#O_LARGEFILE
 0100000

	)

76 
	#F_DUPFD
 0

	)

77 
	#F_GETFD
 1

	)

78 
	#F_SETFD
 2

	)

79 
	#F_GETFL
 3

	)

80 
	#F_SETFL
 4

	)

81 #i‡
__WORDSIZE
 == 64

82 
	#F_GETLK
 5

	)

83 
	#F_SETLK
 6

	)

84 
	#F_SETLKW
 7

	)

86 
	#F_GETLK64
 5

	)

87 
	#F_SETLK64
 6

	)

88 
	#F_SETLKW64
 7

	)

90 #i‚de‡
__USE_FILE_OFFSET64


91 
	#F_GETLK
 5

	)

92 
	#F_SETLK
 6

	)

93 
	#F_SETLKW
 7

	)

95 
	#F_GETLK
 
F_GETLK64


	)

96 
	#F_SETLK
 
F_SETLK64


	)

97 
	#F_SETLKW
 
F_SETLKW64


	)

99 
	#F_GETLK64
 12

	)

100 
	#F_SETLK64
 13

	)

101 
	#F_SETLKW64
 14

	)

104 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


105 
	#F_SETOWN
 8

	)

106 
	#F_GETOWN
 9

	)

109 #ifde‡
__USE_GNU


110 
	#F_SETSIG
 10

	)

111 
	#F_GETSIG
 11

	)

112 
	#F_SETOWN_EX
 15

	)

113 
	#F_GETOWN_EX
 16

	)

116 #ifde‡
__USE_GNU


117 
	#F_SETLEASE
 1024

	)

118 
	#F_GETLEASE
 1025

	)

119 
	#F_NOTIFY
 1026

	)

121 #ifde‡
__USE_XOPEN2K8


122 
	#F_DUPFD_CLOEXEC
 1030

	)

127 
	#FD_CLOEXEC
 1

	)

130 
	#F_RDLCK
 0

	)

131 
	#F_WRLCK
 1

	)

132 
	#F_UNLCK
 2

	)

135 
	#F_EXLCK
 4

	)

136 
	#F_SHLCK
 8

	)

138 #ifde‡
__USE_BSD


140 
	#LOCK_SH
 1

	)

141 
	#LOCK_EX
 2

	)

142 
	#LOCK_NB
 4

	)

144 
	#LOCK_UN
 8

	)

147 #ifde‡
__USE_GNU


148 
	#LOCK_MAND
 32

	)

149 
	#LOCK_READ
 64

	)

150 
	#LOCK_WRITE
 128

	)

151 
	#LOCK_RW
 192

	)

154 #ifde‡
__USE_GNU


156 
	#DN_ACCESS
 0x00000001

	)

157 
	#DN_MODIFY
 0x00000002

	)

158 
	#DN_CREATE
 0x00000004

	)

159 
	#DN_DELETE
 0x00000008

	)

160 
	#DN_RENAME
 0x00000010

	)

161 
	#DN_ATTRIB
 0x00000020

	)

162 
	#DN_MULTISHOT
 0x80000000

	)

165 
	sÊock


167 
	ml_ty≥
;

168 
	ml_whí˚
;

169 #i‚de‡
__USE_FILE_OFFSET64


170 
__off_t
 
	ml_°¨t
;

171 
__off_t
 
	ml_Àn
;

173 
__off64_t
 
	ml_°¨t
;

174 
__off64_t
 
	ml_Àn
;

176 
__pid_t
 
	ml_pid
;

179 #ifde‡
__USE_LARGEFILE64


180 
	sÊock64


182 
	ml_ty≥
;

183 
	ml_whí˚
;

184 
__off64_t
 
	ml_°¨t
;

185 
__off64_t
 
	ml_Àn
;

186 
__pid_t
 
	ml_pid
;

190 #ifde‡
__USE_GNU


192 
	e__pid_ty≥


194 
	mF_OWNER_TID
 = 0,

195 
	mF_OWNER_PID
,

196 
	mF_OWNER_PGRP
,

197 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


201 
	sf_ow√r_ex


203 
__pid_ty≥
 
	mty≥
;

204 
__pid_t
 
	mpid
;

210 #ifdef 
__USE_BSD


211 
	#FAPPEND
 
O_APPEND


	)

212 
	#FFSYNC
 
O_FSYNC


	)

213 
	#FASYNC
 
O_ASYNC


	)

214 
	#FNONBLOCK
 
O_NONBLOCK


	)

215 
	#FNDELAY
 
O_NDELAY


	)

219 #ifde‡
__USE_XOPEN2K


220 
	#POSIX_FADV_NORMAL
 0

	)

221 
	#POSIX_FADV_RANDOM
 1

	)

222 
	#POSIX_FADV_SEQUENTIAL
 2

	)

223 
	#POSIX_FADV_WILLNEED
 3

	)

224 
	#POSIX_FADV_DONTNEED
 4

	)

225 
	#POSIX_FADV_NOREUSE
 5

	)

229 #ifde‡
__USE_GNU


231 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

234 
	#SYNC_FILE_RANGE_WRITE
 2

	)

237 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

242 
	#SPLICE_F_MOVE
 1

	)

243 
	#SPLICE_F_NONBLOCK
 2

	)

246 
	#SPLICE_F_MORE
 4

	)

247 
	#SPLICE_F_GIFT
 8

	)

250 
	g__BEGIN_DECLS


252 #ifde‡
__USE_GNU


255 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

256 
__THROW
;

260 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

261 
__Êags
);

265 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

266 
size_t
 
__cou¡
, 
__Êags
);

269 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

270 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

271 
__Êags
);

274 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

275 
__Êags
);

278 #i‚de‡
__USE_FILE_OFFSET64


279 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

281 #ifde‡
__REDIRECT


282 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

283 
__off64_t
 
__Àn
),

284 
ÁŒoˇã64
);

286 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

289 #ifde‡
__USE_LARGEFILE64


290 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

291 
__off64_t
 
__Àn
);

295 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ipc.h

19 #i‚de‡
_SYS_IPC_H


23 
	~<bôs/ty≥s.h
>

26 
	#IPC_CREAT
 01000

	)

27 
	#IPC_EXCL
 02000

	)

28 
	#IPC_NOWAIT
 04000

	)

31 
	#IPC_RMID
 0

	)

32 
	#IPC_SET
 1

	)

33 
	#IPC_STAT
 2

	)

34 #ifde‡
__USE_GNU


35 
	#IPC_INFO
 3

	)

39 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

43 
	sùc_≥rm


45 
__key_t
 
	m__key
;

46 
__uid_t
 
	muid
;

47 
__gid_t
 
	mgid
;

48 
__uid_t
 
	mcuid
;

49 
__gid_t
 
	mcgid
;

50 
	mmode
;

51 
	m__∑d1
;

52 
	m__£q
;

53 
	m__∑d2
;

54 
	m__unu£d1
;

55 
	m__unu£d2
;

	@/usr/include/bits/ipctypes.h

24 #i‚de‡
_BITS_IPCTYPES_H


25 
	#_BITS_IPCTYPES_H
 1

	)

27 
	~<bôs/ty≥s.h
>

30 #i‡
__WORDSIZE
 == 32

31 
	t__ùc_pid_t
;

33 
	t__ùc_pid_t
;

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

20 #i‚de‡
_SETJMP_H


25 #ifde‡
__REDIRECT_NTH


26 
__REDIRECT_NTH
 (
l⁄gjmp
,

27 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

28 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

29 
__REDIRECT_NTH
 (
_l⁄gjmp
,

30 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

31 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

32 
__REDIRECT_NTH
 (
sigl⁄gjmp
,

33 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

34 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

36 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

37 
__THROW
 
__©åibuã__
 ((
__n‹ëu∫__
));

38 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

40 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/shm.h

20 #i‚de‡
_SYS_SHM_H


24 
	~<bôs/ty≥s.h
>

27 
	#SHM_R
 0400

	)

28 
	#SHM_W
 0200

	)

31 
	#SHM_RDONLY
 010000

	)

32 
	#SHM_RND
 020000

	)

33 
	#SHM_REMAP
 040000

	)

34 
	#SHM_EXEC
 0100000

	)

37 
	#SHM_LOCK
 11

	)

38 
	#SHM_UNLOCK
 12

	)

40 
	g__BEGIN_DECLS


43 
	#SHMLBA
 (
	`__gë∑gesize
 ())

	)

44 
	$__gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

48 
	tshm©t_t
;

51 
	sshmid_ds


53 
ùc_≥rm
 
shm_≥rm
;

54 
size_t
 
shm_£gsz
;

55 
__time_t
 
shm_©ime
;

56 #i‡
__WORDSIZE
 == 32

57 
__unu£d1
;

59 
__time_t
 
shm_dtime
;

60 #i‡
__WORDSIZE
 == 32

61 
__unu£d2
;

63 
__time_t
 
shm_˘ime
;

64 #i‡
__WORDSIZE
 == 32

65 
__unu£d3
;

67 
__pid_t
 
shm_˝id
;

68 
__pid_t
 
shm_Õid
;

69 
shm©t_t
 
shm_«âch
;

70 
__unu£d4
;

71 
__unu£d5
;

74 #ifde‡
__USE_MISC


77 
	#SHM_STAT
 13

	)

78 
	#SHM_INFO
 14

	)

81 
	#SHM_DEST
 01000

	)

82 
	#SHM_LOCKED
 02000

	)

83 
	#SHM_HUGETLB
 04000

	)

84 
	#SHM_NORESERVE
 010000

	)

86 
	sshmöfo


88 
shmmax
;

89 
shmmö
;

90 
shmmni
;

91 
shm£g
;

92 
shmÆl
;

93 
__unu£d1
;

94 
__unu£d2
;

95 
__unu£d3
;

96 
__unu£d4
;

99 
	sshm_öfo


101 
u£d_ids
;

102 
shm_tŸ
;

103 
shm_rss
;

104 
shm_swp
;

105 
sw≠_©ãm±s
;

106 
sw≠_suc˚s£s
;

111 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡!
__GNUC_PREREQ
 (4, 1)

313 #ifde‡
__GNUC_RH_RELEASE__


314 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


316 
	#__USE_FORTIFY_LEVEL
 0

	)

317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 
	#__USE_FORTIFY_LEVEL
 0

	)

327 
	#__STDC_IEC_559__
 1

	)

328 
	#__STDC_IEC_559_COMPLEX__
 1

	)

331 
	#__STDC_ISO_10646__
 200009L

	)

339 #unde‡
__GNU_LIBRARY__


340 
	#__GNU_LIBRARY__
 6

	)

344 
	#__GLIBC__
 2

	)

345 
	#__GLIBC_MINOR__
 12

	)

347 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

348 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

351 #i‡
deföed
 
__GNUC__
 \

352 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

353 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

354 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

355 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

359 #i‚de‡
__ASSEMBLER__


360 #i‚de‡
_SYS_CDEFS_H


361 
	~<sys/cdefs.h
>

366 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


367 
	#__USE_LARGEFILE
 1

	)

368 
	#__USE_LARGEFILE64
 1

	)

374 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

375 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

376 && 
deföed
 
	g__exã∫_ölöe


377 
	#__USE_EXTERN_INLINES
 1

	)

385 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 #unde‡
NCURSES_DLL


38 
	#NCURSES_STATIC


	)

40 #i‡
deföed
(
__CYGWIN__
)

41 #i‡
deföed
(
NCURSES_DLL
)

42 #i‡
deföed
(
NCURSES_STATIC
)

43 #unde‡
NCURSES_STATIC


46 #unde‡
NCURSES_IMPEXP


47 #unde‡
NCURSES_API


48 #unde‡
NCURSES_EXPORT


49 #unde‡
NCURSES_EXPORT_VAR


50 #i‡
deföed
(
NCURSES_DLL
)

52 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

53 #ñi‡
deföed
(
NCURSES_STATIC
)

55 
	#NCURSES_IMPEXP


	)

58 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

60 
	#NCURSES_API
 
__cde˛


	)

61 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

62 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

66 #i‡!
deföed
(
NCURSES_IMPEXP
)

67 
	#NCURSES_IMPEXP


	)

69 #i‡!
deföed
(
NCURSES_API
)

70 
	#NCURSES_API


	)

72 #i‡!
deföed
(
NCURSES_EXPORT
)

73 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

75 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

76 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

83 
	#NCURSES_PUBLIC_VAR
(
«me
Ë
_nc_
##
	)
name

84 
	#NCURSES_WRAPPED_VAR
(
ty≥
,
«me
Ëty≥ 
	`NCURSES_PUBLIC_VAR
“ame)()

	)

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.7"

	)

50 #ifde‡
__˝lu•lus


54 
	~<cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

59 #ifde‡
__˝lu•lus


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@
1
.
1
/usr/include
164
3582
alloc.c
alloc.h
basename.c
build.c
build.h
command.c
compath.c
constants.h
crossref.c
dir.c
display.c
edit.c
egrep.c
egrep.y
exec.c
find.c
fscanner.c
fscanner.l
global.h
gscope.c
help.c
history.c
input.c
invlib.c
invlib.h
library.h
logdir.c
lookup.c
lookup.h
main.c
mouse.c
mygetenv.c
mypopen.c
scanner.h
scanner.l
snprintf.c
version.h
vp.h
vpaccess.c
vpfopen.c
vpinit.c
vpopen.c
/usr/include/alloca.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/curses.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/ncurses.h
/usr/include/regex.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/ipc.h
/usr/include/sys/shm.h
/usr/include/sys/stat.h
/usr/include/sys/termios.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/locale.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/shm.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/ncurses_dll.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/termios.h
/usr/include/unctrl.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/termios.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/sys/ttydefaults.h
/usr/include/wctype.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/asm-generic/errno.h
/usr/include/pthread.h
/usr/include/asm-generic/errno-base.h
/usr/include/sched.h
/usr/include/bits/sched.h
